

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue May 04 16:32:18 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  001A                     _RCREG	set	26
   206  0019                     _TXREG	set	25
   207  000C                     _PIR1bits	set	12
   208  0018                     _RCSTAbits	set	24
   209  0006                     _PORTB	set	6
   210  0005                     _PORTA	set	5
   211  009A                     _SPBRGH	set	154
   212  0099                     _SPBRG	set	153
   213  0098                     _TXSTAbits	set	152
   214  008F                     _OSCCONbits	set	143
   215  0086                     _TRISB	set	134
   216  0085                     _TRISA	set	133
   217  0187                     _BAUDCTLbits	set	391
   218  0189                     _ANSELH	set	393
   219  0188                     _ANSEL	set	392
   220                           
   221                           	psect	strings
   222  0003                     __pstrings:
   223  0003                     stringtab:
   224  0003                     __stringtab:
   225  0003                     stringcode:	
   226                           ;	String table - string pointers are 1 byte each
   227                           
   228  0003                     stringdir:
   229  0003  3000               	movlw	high stringdir
   230  0004  008A               	movwf	10
   231  0005  0804               	movf	4,w
   232  0006  0A84               	incf	4,f
   233  0007  0782               	addwf	2,f
   234  0008                     __stringbase:
   235  0008  3400               	retlw	0
   236  0009                     __end_of__stringtab:
   237  0009                     STR_6:
   238  0009  3420               	retlw	32	;' '
   239  000A  3449               	retlw	73	;'I'
   240  000B  346E               	retlw	110	;'n'
   241  000C  3467               	retlw	103	;'g'
   242  000D  3472               	retlw	114	;'r'
   243  000E  3465               	retlw	101	;'e'
   244  000F  3473               	retlw	115	;'s'
   245  0010  3461               	retlw	97	;'a'
   246  0011  3420               	retlw	32	;' '
   247  0012  3475               	retlw	117	;'u'
   248  0013  346E               	retlw	110	;'n'
   249  0014  3420               	retlw	32	;' '
   250  0015  3463               	retlw	99	;'c'
   251  0016  3461               	retlw	97	;'a'
   252  0017  3472               	retlw	114	;'r'
   253  0018  3461               	retlw	97	;'a'
   254  0019  3463               	retlw	99	;'c'
   255  001A  3474               	retlw	116	;'t'
   256  001B  3465               	retlw	101	;'e'
   257  001C  3472               	retlw	114	;'r'
   258  001D  3420               	retlw	32	;' '
   259  001E  3470               	retlw	112	;'p'
   260  001F  3461               	retlw	97	;'a'
   261  0020  3472               	retlw	114	;'r'
   262  0021  3461               	retlw	97	;'a'
   263  0022  3420               	retlw	32	;' '
   264  0023  3465               	retlw	101	;'e'
   265  0024  346C               	retlw	108	;'l'
   266  0025  3420               	retlw	32	;' '
   267  0026  3470               	retlw	112	;'p'
   268  0027  3475               	retlw	117	;'u'
   269  0028  3465               	retlw	101	;'e'
   270  0029  3472               	retlw	114	;'r'
   271  002A  3474               	retlw	116	;'t'
   272  002B  346F               	retlw	111	;'o'
   273  002C  3420               	retlw	32	;' '
   274  002D  3441               	retlw	65	;'A'
   275  002E  343A               	retlw	58	;':'
   276  002F  3420               	retlw	32	;' '
   277  0030  3400               	retlw	0
   278  0031                     STR_8:
   279  0031  3420               	retlw	32	;' '
   280  0032  3449               	retlw	73	;'I'
   281  0033  346E               	retlw	110	;'n'
   282  0034  3467               	retlw	103	;'g'
   283  0035  3472               	retlw	114	;'r'
   284  0036  3465               	retlw	101	;'e'
   285  0037  3473               	retlw	115	;'s'
   286  0038  3461               	retlw	97	;'a'
   287  0039  3420               	retlw	32	;' '
   288  003A  3475               	retlw	117	;'u'
   289  003B  346E               	retlw	110	;'n'
   290  003C  3420               	retlw	32	;' '
   291  003D  3463               	retlw	99	;'c'
   292  003E  3461               	retlw	97	;'a'
   293  003F  3472               	retlw	114	;'r'
   294  0040  3461               	retlw	97	;'a'
   295  0041  3463               	retlw	99	;'c'
   296  0042  3474               	retlw	116	;'t'
   297  0043  3465               	retlw	101	;'e'
   298  0044  3472               	retlw	114	;'r'
   299  0045  3420               	retlw	32	;' '
   300  0046  3470               	retlw	112	;'p'
   301  0047  3461               	retlw	97	;'a'
   302  0048  3472               	retlw	114	;'r'
   303  0049  3461               	retlw	97	;'a'
   304  004A  3420               	retlw	32	;' '
   305  004B  3465               	retlw	101	;'e'
   306  004C  346C               	retlw	108	;'l'
   307  004D  3420               	retlw	32	;' '
   308  004E  3470               	retlw	112	;'p'
   309  004F  3475               	retlw	117	;'u'
   310  0050  3465               	retlw	101	;'e'
   311  0051  3472               	retlw	114	;'r'
   312  0052  3474               	retlw	116	;'t'
   313  0053  346F               	retlw	111	;'o'
   314  0054  3420               	retlw	32	;' '
   315  0055  3442               	retlw	66	;'B'
   316  0056  343A               	retlw	58	;':'
   317  0057  3420               	retlw	32	;' '
   318  0058  3400               	retlw	0
   319  0059                     STR_2:
   320  0059  3420               	retlw	32	;' '
   321  005A  3431               	retlw	49	;'1'
   322  005B  3429               	retlw	41	;')'
   323  005C  3420               	retlw	32	;' '
   324  005D  3444               	retlw	68	;'D'
   325  005E  3465               	retlw	101	;'e'
   326  005F  3473               	retlw	115	;'s'
   327  0060  3470               	retlw	112	;'p'
   328  0061  346C               	retlw	108	;'l'
   329  0062  3465               	retlw	101	;'e'
   330  0063  3467               	retlw	103	;'g'
   331  0064  3461               	retlw	97	;'a'
   332  0065  3472               	retlw	114	;'r'
   333  0066  3420               	retlw	32	;' '
   334  0067  3463               	retlw	99	;'c'
   335  0068  3461               	retlw	97	;'a'
   336  0069  3464               	retlw	100	;'d'
   337  006A  3465               	retlw	101	;'e'
   338  006B  346E               	retlw	110	;'n'
   339  006C  3461               	retlw	97	;'a'
   340  006D  3420               	retlw	32	;' '
   341  006E  3464               	retlw	100	;'d'
   342  006F  3465               	retlw	101	;'e'
   343  0070  3420               	retlw	32	;' '
   344  0071  3463               	retlw	99	;'c'
   345  0072  3461               	retlw	97	;'a'
   346  0073  3472               	retlw	114	;'r'
   347  0074  3461               	retlw	97	;'a'
   348  0075  3463               	retlw	99	;'c'
   349  0076  3474               	retlw	116	;'t'
   350  0077  3465               	retlw	101	;'e'
   351  0078  3472               	retlw	114	;'r'
   352  0079  3465               	retlw	101	;'e'
   353  007A  3473               	retlw	115	;'s'
   354  007B  3420               	retlw	32	;' '
   355  007C  340D               	retlw	13
   356  007D  3400               	retlw	0
   357  007E                     STR_1:
   358  007E  340D               	retlw	13
   359  007F  3420               	retlw	32	;' '
   360  0080  3451               	retlw	81	;'Q'
   361  0081  3475               	retlw	117	;'u'
   362  0082  3465               	retlw	101	;'e'
   363  0083  3420               	retlw	32	;' '
   364  0084  3461               	retlw	97	;'a'
   365  0085  3463               	retlw	99	;'c'
   366  0086  3463               	retlw	99	;'c'
   367  0087  3469               	retlw	105	;'i'
   368  0088  346F               	retlw	111	;'o'
   369  0089  346E               	retlw	110	;'n'
   370  008A  3420               	retlw	32	;' '
   371  008B  3464               	retlw	100	;'d'
   372  008C  3465               	retlw	101	;'e'
   373  008D  3473               	retlw	115	;'s'
   374  008E  3465               	retlw	101	;'e'
   375  008F  3461               	retlw	97	;'a'
   376  0090  3420               	retlw	32	;' '
   377  0091  3465               	retlw	101	;'e'
   378  0092  346A               	retlw	106	;'j'
   379  0093  3465               	retlw	101	;'e'
   380  0094  3463               	retlw	99	;'c'
   381  0095  3475               	retlw	117	;'u'
   382  0096  3474               	retlw	116	;'t'
   383  0097  3461               	retlw	97	;'a'
   384  0098  3472               	retlw	114	;'r'
   385  0099  343F               	retlw	63	;'?'
   386  009A  3420               	retlw	32	;' '
   387  009B  340D               	retlw	13
   388  009C  3400               	retlw	0
   389  009D                     STR_4:
   390  009D  3420               	retlw	32	;' '
   391  009E  3433               	retlw	51	;'3'
   392  009F  3429               	retlw	41	;')'
   393  00A0  3420               	retlw	32	;' '
   394  00A1  3443               	retlw	67	;'C'
   395  00A2  3461               	retlw	97	;'a'
   396  00A3  346D               	retlw	109	;'m'
   397  00A4  3462               	retlw	98	;'b'
   398  00A5  3469               	retlw	105	;'i'
   399  00A6  3461               	retlw	97	;'a'
   400  00A7  3472               	retlw	114	;'r'
   401  00A8  3420               	retlw	32	;' '
   402  00A9  3450               	retlw	80	;'P'
   403  00AA  344F               	retlw	79	;'O'
   404  00AB  3452               	retlw	82	;'R'
   405  00AC  3454               	retlw	84	;'T'
   406  00AD  3442               	retlw	66	;'B'
   407  00AE  3420               	retlw	32	;' '
   408  00AF  340D               	retlw	13
   409  00B0  3420               	retlw	32	;' '
   410  00B1  340D               	retlw	13
   411  00B2  3400               	retlw	0
   412  00B3                     STR_3:
   413  00B3  3420               	retlw	32	;' '
   414  00B4  3432               	retlw	50	;'2'
   415  00B5  3429               	retlw	41	;')'
   416  00B6  3420               	retlw	32	;' '
   417  00B7  3443               	retlw	67	;'C'
   418  00B8  3461               	retlw	97	;'a'
   419  00B9  346D               	retlw	109	;'m'
   420  00BA  3462               	retlw	98	;'b'
   421  00BB  3469               	retlw	105	;'i'
   422  00BC  3461               	retlw	97	;'a'
   423  00BD  3472               	retlw	114	;'r'
   424  00BE  3420               	retlw	32	;' '
   425  00BF  3450               	retlw	80	;'P'
   426  00C0  344F               	retlw	79	;'O'
   427  00C1  3452               	retlw	82	;'R'
   428  00C2  3454               	retlw	84	;'T'
   429  00C3  3441               	retlw	65	;'A'
   430  00C4  3420               	retlw	32	;' '
   431  00C5  340D               	retlw	13
   432  00C6  3400               	retlw	0
   433  00C7                     STR_5:
   434  00C7  3420               	retlw	32	;' '
   435  00C8  3448               	retlw	72	;'H'
   436  00C9  3465               	retlw	101	;'e'
   437  00CA  346C               	retlw	108	;'l'
   438  00CB  346C               	retlw	108	;'l'
   439  00CC  346F               	retlw	111	;'o'
   440  00CD  3420               	retlw	32	;' '
   441  00CE  3466               	retlw	102	;'f'
   442  00CF  3463               	retlw	99	;'c'
   443  00D0  346B               	retlw	107	;'k'
   444  00D1  3420               	retlw	32	;' '
   445  00D2  3477               	retlw	119	;'w'
   446  00D3  3472               	retlw	114	;'r'
   447  00D4  346C               	retlw	108	;'l'
   448  00D5  3464               	retlw	100	;'d'
   449  00D6  3420               	retlw	32	;' '
   450  00D7  3400               	retlw	0
   451  00D8                     STR_7:
   452  00D8  340D               	retlw	13
   453  00D9  3420               	retlw	32	;' '
   454  00DA  344C               	retlw	76	;'L'
   455  00DB  3469               	retlw	105	;'i'
   456  00DC  3473               	retlw	115	;'s'
   457  00DD  3474               	retlw	116	;'t'
   458  00DE  346F               	retlw	111	;'o'
   459  00DF  3420               	retlw	32	;' '
   460  00E0  340D               	retlw	13
   461  00E1  3400               	retlw	0
   462  00D8                     
   463                           	psect	cinit
   464  07FA                     start_initialization:	
   465                           ; #config settings
   466                           
   467  07FA                     __initialization:
   468                           
   469                           ; Clear objects allocated to COMMON
   470  07FA  01F5               	clrf	__pbssCOMMON& (0+127)
   471  07FB  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   472  07FC                     end_of_initialization:	
   473                           ;End of C runtime variable initialization code
   474                           
   475  07FC                     __end_of__initialization:
   476  07FC  0183               	clrf	3
   477  07FD  120A  118A  2F47   	ljmp	_main	;jump to C main() function
   478                           
   479                           	psect	bssCOMMON
   480  0075                     __pbssCOMMON:
   481  0075                     _loop:
   482  0075                     	ds	1
   483  0076                     _valor:
   484  0076                     	ds	1
   485                           
   486                           	psect	cstackCOMMON
   487  0070                     __pcstackCOMMON:
   488  0070                     ?_USART_Cadena:
   489  0070                     ?_USART_Rx:	
   490                           ; 1 bytes @ 0x0
   491                           
   492  0070                     ??_USART_Rx:	
   493                           ; 1 bytes @ 0x0
   494                           
   495  0070                     ?_main:	
   496                           ; 1 bytes @ 0x0
   497                           
   498  0070                     ?_USART_Tx:	
   499                           ; 1 bytes @ 0x0
   500                           
   501  0070                     ??_USART_Tx:	
   502                           ; 1 bytes @ 0x0
   503                           
   504  0070                     USART_Tx@data:	
   505                           ; 1 bytes @ 0x0
   506                           
   507                           
   508                           ; 1 bytes @ 0x0
   509  0070                     	ds	1
   510  0071                     ??_USART_Cadena:
   511                           
   512                           ; 1 bytes @ 0x1
   513  0071                     	ds	1
   514  0072                     USART_Cadena@str:
   515                           
   516                           ; 1 bytes @ 0x2
   517  0072                     	ds	1
   518  0073                     ??_main:
   519                           
   520                           ; 1 bytes @ 0x3
   521  0073                     	ds	2
   522                           
   523                           	psect	maintext
   524  0747                     __pmaintext:	
   525 ;;
   526 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   527 ;;
   528 ;; *************** function _main *****************
   529 ;; Defined at:
   530 ;;		line 55 in file "uart.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;		None
   533 ;; Auto vars:     Size  Location     Type
   534 ;;		None
   535 ;; Return value:  Size  Location     Type
   536 ;;                  1    wreg      void 
   537 ;; Registers used:
   538 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   539 ;; Tracked objects:
   540 ;;		On entry : B00/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   544 ;;      Params:         0       0       0       0       0
   545 ;;      Locals:         0       0       0       0       0
   546 ;;      Temps:          2       0       0       0       0
   547 ;;      Totals:         2       0       0       0       0
   548 ;;Total ram usage:        2 bytes
   549 ;; Hardware stack levels required when called:    2
   550 ;; This function calls:
   551 ;;		_USART_Cadena
   552 ;;		_USART_Rx
   553 ;; This function is called by:
   554 ;;		Startup code after reset
   555 ;; This function uses a non-reentrant model
   556 ;;
   557                           
   558                           
   559                           ;psect for function _main
   560  0747                     _main:
   561  0747                     l791:	
   562                           ;incstack = 0
   563                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   564                           
   565                           
   566                           ;uart.c: 57:     ANSEL = 0X00;
   567  0747  1683               	bsf	3,5	;RP0=1, select bank3
   568  0748  1703               	bsf	3,6	;RP1=1, select bank3
   569  0749  0188               	clrf	8	;volatile
   570                           
   571                           ;uart.c: 58:     ANSELH = 0x00;
   572  074A  0189               	clrf	9	;volatile
   573                           
   574                           ;uart.c: 60:     TRISA = 0x00;
   575  074B  1683               	bsf	3,5	;RP0=1, select bank1
   576  074C  1303               	bcf	3,6	;RP1=0, select bank1
   577  074D  0185               	clrf	5	;volatile
   578                           
   579                           ;uart.c: 61:     TRISB = 0x00;
   580  074E  0186               	clrf	6	;volatile
   581                           
   582                           ;uart.c: 63:     PORTA = 0x00;
   583  074F  1283               	bcf	3,5	;RP0=0, select bank0
   584  0750  1303               	bcf	3,6	;RP1=0, select bank0
   585  0751  0185               	clrf	5	;volatile
   586                           
   587                           ;uart.c: 64:     PORTB = 0x00;
   588  0752  0186               	clrf	6	;volatile
   589  0753                     l793:
   590                           
   591                           ;uart.c: 66:     OSCCONbits.IRCF = 0b111 ;
   592  0753  3070               	movlw	112
   593  0754  1683               	bsf	3,5	;RP0=1, select bank1
   594  0755  1303               	bcf	3,6	;RP1=0, select bank1
   595  0756  048F               	iorwf	15,f	;volatile
   596  0757                     l795:
   597                           
   598                           ;uart.c: 67:     OSCCONbits.SCS = 1;
   599  0757  140F               	bsf	15,0	;volatile
   600  0758                     l797:
   601                           
   602                           ;uart.c: 70:     TXSTAbits.SYNC = 0;
   603  0758  1218               	bcf	24,4	;volatile
   604  0759                     l799:
   605                           
   606                           ;uart.c: 71:     TXSTAbits.BRGH = 1;
   607  0759  1518               	bsf	24,2	;volatile
   608  075A                     l801:
   609                           
   610                           ;uart.c: 72:     BAUDCTLbits.BRG16 = 1;
   611  075A  1683               	bsf	3,5	;RP0=1, select bank3
   612  075B  1703               	bsf	3,6	;RP1=1, select bank3
   613  075C  1587               	bsf	7,3	;volatile
   614  075D                     l803:
   615                           
   616                           ;uart.c: 74:     SPBRG = 207;
   617  075D  30CF               	movlw	207
   618  075E  1683               	bsf	3,5	;RP0=1, select bank1
   619  075F  1303               	bcf	3,6	;RP1=0, select bank1
   620  0760  0099               	movwf	25	;volatile
   621  0761                     l805:
   622                           
   623                           ;uart.c: 75:     SPBRGH = 0;
   624  0761  019A               	clrf	26	;volatile
   625  0762                     l807:
   626                           
   627                           ;uart.c: 77:     RCSTAbits.SPEN = 1;
   628  0762  1283               	bcf	3,5	;RP0=0, select bank0
   629  0763  1303               	bcf	3,6	;RP1=0, select bank0
   630  0764  1798               	bsf	24,7	;volatile
   631  0765                     l809:
   632                           
   633                           ;uart.c: 78:     RCSTAbits.RX9 = 0;
   634  0765  1318               	bcf	24,6	;volatile
   635  0766                     l811:
   636                           
   637                           ;uart.c: 79:     RCSTAbits.CREN = 1;
   638  0766  1618               	bsf	24,4	;volatile
   639  0767                     l813:
   640                           
   641                           ;uart.c: 80:     TXSTAbits.TXEN = 1;
   642  0767  1683               	bsf	3,5	;RP0=1, select bank1
   643  0768  1303               	bcf	3,6	;RP1=0, select bank1
   644  0769  1698               	bsf	24,5	;volatile
   645  076A                     l815:
   646                           
   647                           ;uart.c: 86:         USART_Cadena("\r Que accion desea ejecutar? \r");
   648  076A  3076               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   649  076B  120A  118A  2728  120A  118A  	fcall	_USART_Cadena
   650  0770                     l817:
   651                           
   652                           ;uart.c: 87:         USART_Cadena(" 1) Desplegar cadena de caracteres \r");
   653  0770  3051               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   654  0771  120A  118A  2728  120A  118A  	fcall	_USART_Cadena
   655  0776                     l819:
   656                           
   657                           ;uart.c: 88:         USART_Cadena(" 2) Cambiar PORTA \r");
   658  0776  30AB               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   659  0777  120A  118A  2728  120A  118A  	fcall	_USART_Cadena
   660  077C                     l821:
   661                           
   662                           ;uart.c: 89:         USART_Cadena(" 3) Cambiar PORTB \r \r");
   663  077C  3095               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   664  077D  120A  118A  2728  120A  118A  	fcall	_USART_Cadena
   665  0782                     l44:	
   666                           ;uart.c: 92:         while(PIR1bits.RCIF == 0);
   667                           
   668  0782  1283               	bcf	3,5	;RP0=0, select bank0
   669  0783  1303               	bcf	3,6	;RP1=0, select bank0
   670  0784  1E8C               	btfss	12,5	;volatile
   671  0785  2F87               	goto	u91
   672  0786  2F88               	goto	u90
   673  0787                     u91:
   674  0787  2F82               	goto	l44
   675  0788                     u90:
   676  0788                     l823:
   677                           
   678                           ;uart.c: 94:         valor = USART_Rx();
   679  0788  120A  118A  2718  120A  118A  	fcall	_USART_Rx
   680  078D  00F3               	movwf	??_main
   681  078E  0873               	movf	??_main,w
   682  078F  00F6               	movwf	_valor
   683                           
   684                           ;uart.c: 96:         switch(valor){
   685  0790  2FE4               	goto	l851
   686  0791                     l825:
   687                           
   688                           ;uart.c: 98:                 USART_Cadena(" Hello fck wrld ");
   689  0791  30BF               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   690  0792  120A  118A  2728  120A  118A  	fcall	_USART_Cadena
   691  0797                     l827:
   692                           
   693                           ;uart.c: 99:                 TXREG = '\r';
   694  0797  300D               	movlw	13
   695  0798  1283               	bcf	3,5	;RP0=0, select bank0
   696  0799  1303               	bcf	3,6	;RP1=0, select bank0
   697  079A  0099               	movwf	25	;volatile
   698                           
   699                           ;uart.c: 100:                 break;
   700  079B  2F6A               	goto	l815
   701  079C                     l50:	
   702                           ;uart.c: 102:             case ('2'):
   703                           
   704                           
   705                           ;uart.c: 103:                 loop = 1;
   706  079C  01F5               	clrf	_loop
   707  079D  0AF5               	incf	_loop,f
   708  079E                     l829:
   709                           
   710                           ;uart.c: 104:                 USART_Cadena(" Ingresa un caracter para el puerto A: ");
   711  079E  3001               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   712  079F  120A  118A  2728  120A  118A  	fcall	_USART_Cadena
   713                           
   714                           ;uart.c: 105:                 while(loop){
   715  07A4  2FB4               	goto	l835
   716  07A5                     l52:
   717                           
   718                           ;uart.c: 106:                     if(PIR1bits.RCIF){
   719  07A5  1283               	bcf	3,5	;RP0=0, select bank0
   720  07A6  1303               	bcf	3,6	;RP1=0, select bank0
   721  07A7  1E8C               	btfss	12,5	;volatile
   722  07A8  2FAA               	goto	u101
   723  07A9  2FAB               	goto	u100
   724  07AA                     u101:
   725  07AA  2FB4               	goto	l835
   726  07AB                     u100:
   727  07AB                     l831:
   728                           
   729                           ;uart.c: 107:                         PORTA = USART_Rx();
   730  07AB  120A  118A  2718  120A  118A  	fcall	_USART_Rx
   731  07B0  1283               	bcf	3,5	;RP0=0, select bank0
   732  07B1  1303               	bcf	3,6	;RP1=0, select bank0
   733  07B2  0085               	movwf	5	;volatile
   734  07B3                     l833:
   735                           
   736                           ;uart.c: 108:                         loop = 0;
   737  07B3  01F5               	clrf	_loop
   738  07B4                     l835:
   739                           
   740                           ;uart.c: 105:                 while(loop){
   741  07B4  0875               	movf	_loop,w
   742  07B5  1D03               	btfss	3,2
   743  07B6  2FB8               	goto	u111
   744  07B7  2FB9               	goto	u110
   745  07B8                     u111:
   746  07B8  2FA5               	goto	l52
   747  07B9                     u110:
   748  07B9                     l837:
   749                           
   750                           ;uart.c: 111:                 USART_Cadena("\r Listo \r");
   751  07B9  30D0               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   752  07BA  120A  118A  2728  120A  118A  	fcall	_USART_Cadena
   753                           
   754                           ;uart.c: 112:                 break;
   755  07BF  2F6A               	goto	l815
   756  07C0                     l55:	
   757                           ;uart.c: 114:             case ('3'):
   758                           
   759                           
   760                           ;uart.c: 115:                 loop = 1;
   761  07C0  01F5               	clrf	_loop
   762  07C1  0AF5               	incf	_loop,f
   763  07C2                     l839:
   764                           
   765                           ;uart.c: 116:                 USART_Cadena(" Ingresa un caracter para el puerto B: ");
   766  07C2  3029               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
   767  07C3  120A  118A  2728  120A  118A  	fcall	_USART_Cadena
   768                           
   769                           ;uart.c: 117:                 while(loop){
   770  07C8  2FD8               	goto	l845
   771  07C9                     l57:
   772                           
   773                           ;uart.c: 118:                     if(PIR1bits.RCIF){
   774  07C9  1283               	bcf	3,5	;RP0=0, select bank0
   775  07CA  1303               	bcf	3,6	;RP1=0, select bank0
   776  07CB  1E8C               	btfss	12,5	;volatile
   777  07CC  2FCE               	goto	u121
   778  07CD  2FCF               	goto	u120
   779  07CE                     u121:
   780  07CE  2FD8               	goto	l845
   781  07CF                     u120:
   782  07CF                     l841:
   783                           
   784                           ;uart.c: 119:                         PORTB = USART_Rx();
   785  07CF  120A  118A  2718  120A  118A  	fcall	_USART_Rx
   786  07D4  1283               	bcf	3,5	;RP0=0, select bank0
   787  07D5  1303               	bcf	3,6	;RP1=0, select bank0
   788  07D6  0086               	movwf	6	;volatile
   789  07D7                     l843:
   790                           
   791                           ;uart.c: 120:                         loop = 0;
   792  07D7  01F5               	clrf	_loop
   793  07D8                     l845:
   794                           
   795                           ;uart.c: 117:                 while(loop){
   796  07D8  0875               	movf	_loop,w
   797  07D9  1D03               	btfss	3,2
   798  07DA  2FDC               	goto	u131
   799  07DB  2FDD               	goto	u130
   800  07DC                     u131:
   801  07DC  2FC9               	goto	l57
   802  07DD                     u130:
   803  07DD                     l847:
   804                           
   805                           ;uart.c: 123:                 USART_Cadena("\r Listo \r");
   806  07DD  30D0               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   807  07DE  120A  118A  2728  120A  118A  	fcall	_USART_Cadena
   808                           
   809                           ;uart.c: 124:                 break;
   810  07E3  2F6A               	goto	l815
   811  07E4                     l851:
   812  07E4  0876               	movf	_valor,w
   813  07E5  00F3               	movwf	??_main
   814  07E6  01F4               	clrf	??_main+1
   815                           
   816                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   817                           ; Switch size 1, requested type "simple"
   818                           ; Number of cases is 1, Range of values is 0 to 0
   819                           ; switch strategies available:
   820                           ; Name         Instructions Cycles
   821                           ; simple_byte            4     3 (average)
   822                           ; direct_byte           11     8 (fixed)
   823                           ; jumptable            260     6 (fixed)
   824                           ;	Chosen strategy is simple_byte
   825  07E7  0874               	movf	??_main+1,w
   826  07E8  3A00               	xorlw	0	; case 0
   827  07E9  1903               	skipnz
   828  07EA  2FEC               	goto	l889
   829  07EB  2F6A               	goto	l815
   830  07EC                     l889:
   831                           
   832                           ; Switch size 1, requested type "simple"
   833                           ; Number of cases is 3, Range of values is 49 to 51
   834                           ; switch strategies available:
   835                           ; Name         Instructions Cycles
   836                           ; simple_byte           10     6 (average)
   837                           ; direct_byte           20    11 (fixed)
   838                           ; jumptable            263     9 (fixed)
   839                           ;	Chosen strategy is simple_byte
   840  07EC  0873               	movf	??_main,w
   841  07ED  3A31               	xorlw	49	; case 49
   842  07EE  1903               	skipnz
   843  07EF  2F91               	goto	l825
   844  07F0  3A03               	xorlw	3	; case 50
   845  07F1  1903               	skipnz
   846  07F2  2F9C               	goto	l50
   847  07F3  3A01               	xorlw	1	; case 51
   848  07F4  1903               	skipnz
   849  07F5  2FC0               	goto	l55
   850  07F6  2F6A               	goto	l815
   851  07F7  120A  118A  2800   	ljmp	start
   852  07FA                     __end_of_main:
   853                           
   854                           	psect	text1
   855  0718                     __ptext1:	
   856 ;; *************** function _USART_Rx *****************
   857 ;; Defined at:
   858 ;;		line 137 in file "uart.c"
   859 ;; Parameters:    Size  Location     Type
   860 ;;		None
   861 ;; Auto vars:     Size  Location     Type
   862 ;;		None
   863 ;; Return value:  Size  Location     Type
   864 ;;                  1    wreg      unsigned char 
   865 ;; Registers used:
   866 ;;		wreg
   867 ;; Tracked objects:
   868 ;;		On entry : 0/0
   869 ;;		On exit  : 0/0
   870 ;;		Unchanged: 0/0
   871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   872 ;;      Params:         0       0       0       0       0
   873 ;;      Locals:         0       0       0       0       0
   874 ;;      Temps:          0       0       0       0       0
   875 ;;      Totals:         0       0       0       0       0
   876 ;;Total ram usage:        0 bytes
   877 ;; Hardware stack levels used:    1
   878 ;; This function calls:
   879 ;;		Nothing
   880 ;; This function is called by:
   881 ;;		_main
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           
   885                           
   886                           ;psect for function _USART_Rx
   887  0718                     _USART_Rx:
   888  0718                     l681:	
   889                           ;incstack = 0
   890                           ; Regs used in _USART_Rx: [wreg]
   891                           
   892                           
   893                           ;uart.c: 138:         return RCREG;
   894  0718  1283               	bcf	3,5	;RP0=0, select bank0
   895  0719  1303               	bcf	3,6	;RP1=0, select bank0
   896  071A  081A               	movf	26,w	;volatile
   897  071B                     l71:
   898  071B  0008               	return
   899  071C                     __end_of_USART_Rx:
   900                           
   901                           	psect	text2
   902  0728                     __ptext2:	
   903 ;; *************** function _USART_Cadena *****************
   904 ;; Defined at:
   905 ;;		line 141 in file "uart.c"
   906 ;; Parameters:    Size  Location     Type
   907 ;;  str             1    wreg     PTR unsigned char 
   908 ;;		 -> STR_9(10), STR_8(40), STR_7(10), STR_6(40), 
   909 ;;		 -> STR_5(17), STR_4(22), STR_3(20), STR_2(37), 
   910 ;;		 -> STR_1(31), 
   911 ;; Auto vars:     Size  Location     Type
   912 ;;  str             1    2[COMMON] PTR unsigned char 
   913 ;;		 -> STR_9(10), STR_8(40), STR_7(10), STR_6(40), 
   914 ;;		 -> STR_5(17), STR_4(22), STR_3(20), STR_2(37), 
   915 ;;		 -> STR_1(31), 
   916 ;; Return value:  Size  Location     Type
   917 ;;                  1    wreg      void 
   918 ;; Registers used:
   919 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   920 ;; Tracked objects:
   921 ;;		On entry : 0/0
   922 ;;		On exit  : 0/0
   923 ;;		Unchanged: 0/0
   924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   925 ;;      Params:         0       0       0       0       0
   926 ;;      Locals:         1       0       0       0       0
   927 ;;      Temps:          1       0       0       0       0
   928 ;;      Totals:         2       0       0       0       0
   929 ;;Total ram usage:        2 bytes
   930 ;; Hardware stack levels used:    1
   931 ;; Hardware stack levels required when called:    1
   932 ;; This function calls:
   933 ;;		_USART_Tx
   934 ;; This function is called by:
   935 ;;		_main
   936 ;; This function uses a non-reentrant model
   937 ;;
   938                           
   939                           
   940                           ;psect for function _USART_Cadena
   941  0728                     _USART_Cadena:
   942                           
   943                           ;incstack = 0
   944                           ; Regs used in _USART_Cadena: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   945                           ;USART_Cadena@str stored from wreg
   946  0728  00F2               	movwf	USART_Cadena@str
   947  0729                     l783:
   948                           
   949                           ;uart.c: 142:         while(*str != '\0'){
   950  0729  2F3A               	goto	l789
   951  072A                     l785:
   952                           
   953                           ;uart.c: 143:             USART_Tx(*str);
   954  072A  0872               	movf	USART_Cadena@str,w
   955  072B  0084               	movwf	4
   956  072C  120A  118A  2003  120A  118A  	fcall	stringdir
   957  0731  120A  118A  271C  120A  118A  	fcall	_USART_Tx
   958  0736                     l787:
   959                           
   960                           ;uart.c: 144:             str++;
   961  0736  3001               	movlw	1
   962  0737  00F1               	movwf	??_USART_Cadena
   963  0738  0871               	movf	??_USART_Cadena,w
   964  0739  07F2               	addwf	USART_Cadena@str,f
   965  073A                     l789:
   966                           
   967                           ;uart.c: 142:         while(*str != '\0'){
   968  073A  0872               	movf	USART_Cadena@str,w
   969  073B  0084               	movwf	4
   970  073C  120A  118A  2003  120A  118A  	fcall	stringdir
   971  0741  3A00               	xorlw	0
   972  0742  1D03               	skipz
   973  0743  2F45               	goto	u81
   974  0744  2F46               	goto	u80
   975  0745                     u81:
   976  0745  2F2A               	goto	l785
   977  0746                     u80:
   978  0746                     l77:
   979  0746  0008               	return
   980  0747                     __end_of_USART_Cadena:
   981                           
   982                           	psect	text3
   983  071C                     __ptext3:	
   984 ;; *************** function _USART_Tx *****************
   985 ;; Defined at:
   986 ;;		line 132 in file "uart.c"
   987 ;; Parameters:    Size  Location     Type
   988 ;;  data            1    wreg     unsigned char 
   989 ;; Auto vars:     Size  Location     Type
   990 ;;  data            1    0[COMMON] unsigned char 
   991 ;; Return value:  Size  Location     Type
   992 ;;                  1    wreg      void 
   993 ;; Registers used:
   994 ;;		wreg
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1000 ;;      Params:         0       0       0       0       0
  1001 ;;      Locals:         1       0       0       0       0
  1002 ;;      Temps:          0       0       0       0       0
  1003 ;;      Totals:         1       0       0       0       0
  1004 ;;Total ram usage:        1 bytes
  1005 ;; Hardware stack levels used:    1
  1006 ;; This function calls:
  1007 ;;		Nothing
  1008 ;; This function is called by:
  1009 ;;		_USART_Cadena
  1010 ;; This function uses a non-reentrant model
  1011 ;;
  1012                           
  1013                           
  1014                           ;psect for function _USART_Tx
  1015  071C                     _USART_Tx:
  1016                           
  1017                           ;incstack = 0
  1018                           ; Regs used in _USART_Tx: [wreg]
  1019                           ;USART_Tx@data stored from wreg
  1020  071C  00F0               	movwf	USART_Tx@data
  1021  071D                     l669:
  1022  071D                     l65:	
  1023                           ;uart.c: 133:         while(TXSTAbits.TRMT == 0);
  1024                           
  1025  071D  1683               	bsf	3,5	;RP0=1, select bank1
  1026  071E  1303               	bcf	3,6	;RP1=0, select bank1
  1027  071F  1C98               	btfss	24,1	;volatile
  1028  0720  2F22               	goto	u11
  1029  0721  2F23               	goto	u10
  1030  0722                     u11:
  1031  0722  2F1D               	goto	l65
  1032  0723                     u10:
  1033  0723                     l671:
  1034                           
  1035                           ;uart.c: 134:         TXREG = data;
  1036  0723  0870               	movf	USART_Tx@data,w
  1037  0724  1283               	bcf	3,5	;RP0=0, select bank0
  1038  0725  1303               	bcf	3,6	;RP1=0, select bank0
  1039  0726  0099               	movwf	25	;volatile
  1040  0727                     l68:
  1041  0727  0008               	return
  1042  0728                     __end_of_USART_Tx:
  1043  007E                     btemp	set	126	;btemp
  1044  007E                     wtemp0	set	126
  1045                           
  1046                           	psect	config
  1047                           
  1048                           ;Config register CONFIG1 @ 0x2007
  1049                           ;	Oscillator Selection bits
  1050                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1051                           ;	Watchdog Timer Enable bit
  1052                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1053                           ;	Power-up Timer Enable bit
  1054                           ;	PWRTE = OFF, PWRT disabled
  1055                           ;	RE3/MCLR pin function select bit
  1056                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1057                           ;	Code Protection bit
  1058                           ;	CP = OFF, Program memory code protection is disabled
  1059                           ;	Data Code Protection bit
  1060                           ;	CPD = OFF, Data memory code protection is disabled
  1061                           ;	Brown Out Reset Selection bits
  1062                           ;	BOREN = OFF, BOR disabled
  1063                           ;	Internal External Switchover bit
  1064                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1065                           ;	Fail-Safe Clock Monitor Enabled bit
  1066                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1067                           ;	Low Voltage Programming Enable bit
  1068                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1069                           ;	In-Circuit Debugger Mode bit
  1070                           ;	DEBUG = 0x1, unprogrammed default
  1071  2007                     	org	8199
  1072  2007  38D4               	dw	14548
  1073                           
  1074                           ;Config register CONFIG2 @ 0x2008
  1075                           ;	Brown-out Reset Selection bit
  1076                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1077                           ;	Flash Program Memory Self Write Enable bits
  1078                           ;	WRT = OFF, Write protection off
  1079  2008                     	org	8200
  1080  2008  3FFF               	dw	16383

Data Sizes:
    Strings     217
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    USART_Cadena@str	PTR unsigned char  size(1) Largest target is 40
		 -> STR_9(CODE[10]), STR_8(CODE[40]), STR_7(CODE[10]), STR_6(CODE[40]), 
		 -> STR_5(CODE[17]), STR_4(CODE[22]), STR_3(CODE[20]), STR_2(CODE[37]), 
		 -> STR_1(CODE[31]), 


Critical Paths under _main in COMMON

    _main->_USART_Cadena
    _USART_Cadena->_USART_Tx

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     357
                                              3 COMMON     2     2      0
                       _USART_Cadena
                           _USART_Rx
 ---------------------------------------------------------------------------------
 (1) _USART_Rx                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Cadena                                         2     2      0     357
                                              1 COMMON     2     2      0
                           _USART_Tx
 ---------------------------------------------------------------------------------
 (2) _USART_Tx                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _USART_Cadena
     _USART_Tx
   _USART_Rx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       7      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue May 04 16:32:18 2021

                      pc 0002                       l50 079C                       l52 07A5  
                     l44 0782                       l71 071B                       l55 07C0  
                     l65 071D                       l57 07C9                       l68 0727  
                     l77 0746                       u10 0723                       u11 0722  
                     u80 0746                       u81 0745                       u90 0788  
                     u91 0787                       fsr 0004                      l801 075A  
                    l811 0766                      l803 075D                      l821 077C  
                    l813 0767                      l805 0761                      l671 0723  
                    l831 07AB                      l823 0788                      l815 076A  
                    l807 0762                      l681 0718                      l841 07CF  
                    l833 07B3                      l825 0791                      l817 0770  
                    l809 0765                      l843 07D7                      l835 07B4  
                    l827 0797                      l851 07E4                      l819 0776  
                    l669 071D                      l845 07D8                      l837 07B9  
                    l829 079E                      l783 0729                      l847 07DD  
                    l839 07C2                      l791 0747                      l785 072A  
                    l793 0753                      l787 0736                      l795 0757  
                    l789 073A                      l797 0758                      l799 0759  
                    l889 07EC                      u100 07AB                      u101 07AA  
                    u110 07B9                      u111 07B8                      u120 07CF  
                    u121 07CE                      u130 07DD                      u131 07DC  
                    fsr0 0004                     STR_1 007E                     STR_2 0059  
                   STR_3 00B3                     STR_4 009D                     STR_5 00C7  
                   STR_6 0009                     STR_7 00D8                     STR_8 0031  
                   STR_9 00D8                     _main 0747                     _loop 0075  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _ANSEL 0188                    _RCREG 001A                    _SPBRG 0099  
                  _PORTA 0005                    _PORTB 0006                    _TRISA 0085  
                  _TRISB 0086                    _TXREG 0019                    _valor 0076  
       __end_of_USART_Rx 071C         __end_of_USART_Tx 0728             USART_Tx@data 0070  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07FA             __end_of_main 07FA                   ??_main 0073  
                 _ANSELH 0189                   _SPBRGH 009A  __end_of__initialization 07FC  
         __pcstackCOMMON 0070                ?_USART_Rx 0070                ?_USART_Tx 0070  
             __pmaintext 0747               ??_USART_Rx 0070               ??_USART_Tx 0070  
             __stringtab 0003                  __ptext1 0718                  __ptext2 0728  
                __ptext3 071C     end_of_initialization 07FC                _RCSTAbits 0018  
          ?_USART_Cadena 0070                _TXSTAbits 0098              _BAUDCTLbits 0187  
      __size_of_USART_Rx 0004        __size_of_USART_Tx 000C      start_initialization 07FA  
         ??_USART_Cadena 0071              __pbssCOMMON 0075                ___latbits 0002  
              __pstrings 0003                 _PIR1bits 000C          USART_Cadena@str 0072  
   __end_of_USART_Cadena 0747                 _USART_Rx 0718                 _USART_Tx 071C  
            __stringbase 0008       __end_of__stringtab 0009            __size_of_main 00B3  
              stringcode 0003    __size_of_USART_Cadena 001F               _OSCCONbits 008F  
               stringdir 0003                 stringtab 0003             _USART_Cadena 0728  
