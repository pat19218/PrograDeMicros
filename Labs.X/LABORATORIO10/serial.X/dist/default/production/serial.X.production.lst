

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue May 04 10:13:57 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204                           
   205                           	psect	strings
   206  006A                     __pstrings:
   207  006A                     stringtab:
   208  006A                     __stringtab:
   209  006A                     stringcode:	
   210                           ;	String table - string pointers are 1 byte each
   211                           
   212  006A                     stringdir:
   213  006A  3000               	movlw	high stringdir
   214  006B  008A               	movwf	10
   215  006C  0804               	movf	4,w
   216  006D  0A84               	incf	4,f
   217  006E  0782               	addwf	2,f
   218  006F                     __stringbase:
   219  006F  3400               	retlw	0
   220  0070                     __end_of__stringtab:
   221  0070                     _num:
   222  0070  3461               	retlw	97
   223  0071  3462               	retlw	98
   224  0072  3463               	retlw	99
   225  0073  3464               	retlw	100
   226  0074  3465               	retlw	101
   227  0075  3466               	retlw	102
   228  0076  3467               	retlw	103
   229  0077  3468               	retlw	104
   230  0078  3469               	retlw	105
   231  0079  346A               	retlw	106
   232  007A  346B               	retlw	107
   233  007B  346C               	retlw	108
   234  007C                     __end_of_num:
   235  0019                     _TXREG	set	25
   236  000B                     _INTCONbits	set	11
   237  0018                     _RCSTAbits	set	24
   238  0005                     _PORTA	set	5
   239  001A                     _RCREG	set	26
   240  0006                     _PORTB	set	6
   241  000C                     _PIR1bits	set	12
   242  008C                     _PIE1bits	set	140
   243  009A                     _SPBRGH	set	154
   244  0099                     _SPBRG	set	153
   245  0098                     _TXSTAbits	set	152
   246  008F                     _OSCCONbits	set	143
   247  0086                     _TRISB	set	134
   248  0085                     _TRISA	set	133
   249  0187                     _BAUDCTLbits	set	391
   250  0189                     _ANSELH	set	393
   251  0188                     _ANSEL	set	392
   252                           
   253                           	psect	cinit
   254  000F                     start_initialization:	
   255                           ; #config settings
   256                           
   257  000F                     __initialization:
   258                           
   259                           ; Clear objects allocated to COMMON
   260  000F  01F5               	clrf	__pbssCOMMON& (0+127)
   261  0010                     end_of_initialization:	
   262                           ;End of C runtime variable initialization code
   263                           
   264  0010                     __end_of__initialization:
   265  0010  0183               	clrf	3
   266  0011  120A  118A  2814   	ljmp	_main	;jump to C main() function
   267                           
   268                           	psect	bssCOMMON
   269  0075                     __pbssCOMMON:
   270  0075                     _espacio:
   271  0075                     	ds	1
   272                           
   273                           	psect	cstackCOMMON
   274  0070                     __pcstackCOMMON:
   275  0070                     ?_isr:
   276  0070                     ??_isr:	
   277                           ; 1 bytes @ 0x0
   278                           
   279  0070                     ?_main:	
   280                           ; 1 bytes @ 0x0
   281                           
   282                           
   283                           ; 1 bytes @ 0x0
   284  0070                     	ds	2
   285  0072                     ??_main:
   286                           
   287                           ; 1 bytes @ 0x2
   288  0072                     	ds	3
   289                           
   290                           	psect	maintext
   291  0014                     __pmaintext:	
   292 ;;
   293 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   294 ;;
   295 ;; *************** function _main *****************
   296 ;; Defined at:
   297 ;;		line 59 in file "uart.c"
   298 ;; Parameters:    Size  Location     Type
   299 ;;		None
   300 ;; Auto vars:     Size  Location     Type
   301 ;;		None
   302 ;; Return value:  Size  Location     Type
   303 ;;                  1    wreg      void 
   304 ;; Registers used:
   305 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   306 ;; Tracked objects:
   307 ;;		On entry : B00/0
   308 ;;		On exit  : 0/0
   309 ;;		Unchanged: 0/0
   310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   311 ;;      Params:         0       0       0       0       0
   312 ;;      Locals:         0       0       0       0       0
   313 ;;      Temps:          3       0       0       0       0
   314 ;;      Totals:         3       0       0       0       0
   315 ;;Total ram usage:        3 bytes
   316 ;; Hardware stack levels used:    1
   317 ;; Hardware stack levels required when called:    1
   318 ;; This function calls:
   319 ;;		Nothing
   320 ;; This function is called by:
   321 ;;		Startup code after reset
   322 ;; This function uses a non-reentrant model
   323 ;;
   324                           
   325                           
   326                           ;psect for function _main
   327  0014                     _main:
   328  0014                     l698:	
   329                           ;incstack = 0
   330                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath]
   331                           
   332                           
   333                           ;uart.c: 61:     ANSEL = 0X00;
   334  0014  1683               	bsf	3,5	;RP0=1, select bank3
   335  0015  1703               	bsf	3,6	;RP1=1, select bank3
   336  0016  0188               	clrf	8	;volatile
   337                           
   338                           ;uart.c: 62:     ANSELH = 0x00;
   339  0017  0189               	clrf	9	;volatile
   340                           
   341                           ;uart.c: 64:     TRISA = 0x00;
   342  0018  1683               	bsf	3,5	;RP0=1, select bank1
   343  0019  1303               	bcf	3,6	;RP1=0, select bank1
   344  001A  0185               	clrf	5	;volatile
   345                           
   346                           ;uart.c: 65:     TRISB = 0x00;
   347  001B  0186               	clrf	6	;volatile
   348                           
   349                           ;uart.c: 67:     PORTA = 0x00;
   350  001C  1283               	bcf	3,5	;RP0=0, select bank0
   351  001D  1303               	bcf	3,6	;RP1=0, select bank0
   352  001E  0185               	clrf	5	;volatile
   353                           
   354                           ;uart.c: 68:     PORTB = 0x00;
   355  001F  0186               	clrf	6	;volatile
   356  0020                     l700:
   357                           
   358                           ;uart.c: 70:     OSCCONbits.IRCF = 0b111 ;
   359  0020  3070               	movlw	112
   360  0021  1683               	bsf	3,5	;RP0=1, select bank1
   361  0022  1303               	bcf	3,6	;RP1=0, select bank1
   362  0023  048F               	iorwf	15,f	;volatile
   363  0024                     l702:
   364                           
   365                           ;uart.c: 71:     OSCCONbits.SCS = 1;
   366  0024  140F               	bsf	15,0	;volatile
   367  0025                     l704:
   368                           
   369                           ;uart.c: 74:     TXSTAbits.SYNC = 0;
   370  0025  1218               	bcf	24,4	;volatile
   371  0026                     l706:
   372                           
   373                           ;uart.c: 75:     TXSTAbits.BRGH = 1;
   374  0026  1518               	bsf	24,2	;volatile
   375  0027                     l708:
   376                           
   377                           ;uart.c: 76:     BAUDCTLbits.BRG16 = 1;
   378  0027  1683               	bsf	3,5	;RP0=1, select bank3
   379  0028  1703               	bsf	3,6	;RP1=1, select bank3
   380  0029  1587               	bsf	7,3	;volatile
   381  002A                     l710:
   382                           
   383                           ;uart.c: 78:     SPBRG = 207;
   384  002A  30CF               	movlw	207
   385  002B  1683               	bsf	3,5	;RP0=1, select bank1
   386  002C  1303               	bcf	3,6	;RP1=0, select bank1
   387  002D  0099               	movwf	25	;volatile
   388  002E                     l712:
   389                           
   390                           ;uart.c: 79:     SPBRGH = 0;
   391  002E  019A               	clrf	26	;volatile
   392  002F                     l714:
   393                           
   394                           ;uart.c: 81:     RCSTAbits.SPEN = 1;
   395  002F  1283               	bcf	3,5	;RP0=0, select bank0
   396  0030  1303               	bcf	3,6	;RP1=0, select bank0
   397  0031  1798               	bsf	24,7	;volatile
   398  0032                     l716:
   399                           
   400                           ;uart.c: 82:     RCSTAbits.RX9 = 0;
   401  0032  1318               	bcf	24,6	;volatile
   402  0033                     l718:
   403                           
   404                           ;uart.c: 83:     RCSTAbits.CREN = 1;
   405  0033  1618               	bsf	24,4	;volatile
   406  0034                     l720:
   407                           
   408                           ;uart.c: 84:     TXSTAbits.TXEN = 1;
   409  0034  1683               	bsf	3,5	;RP0=1, select bank1
   410  0035  1303               	bcf	3,6	;RP1=0, select bank1
   411  0036  1698               	bsf	24,5	;volatile
   412  0037                     l722:
   413                           
   414                           ;uart.c: 87:     PIR1bits.RCIF = 0;
   415  0037  1283               	bcf	3,5	;RP0=0, select bank0
   416  0038  1303               	bcf	3,6	;RP1=0, select bank0
   417  0039  128C               	bcf	12,5	;volatile
   418  003A                     l724:
   419                           
   420                           ;uart.c: 88:     PIE1bits.RCIE = 1;
   421  003A  1683               	bsf	3,5	;RP0=1, select bank1
   422  003B  1303               	bcf	3,6	;RP1=0, select bank1
   423  003C  168C               	bsf	12,5	;volatile
   424  003D                     l726:
   425                           
   426                           ;uart.c: 89:     INTCONbits.PEIE = 1;
   427  003D  170B               	bsf	11,6	;volatile
   428  003E                     l728:
   429                           
   430                           ;uart.c: 90:     INTCONbits.GIE = 1;
   431  003E  178B               	bsf	11,7	;volatile
   432  003F                     l730:
   433                           
   434                           ;uart.c: 92:     espacio = 0;
   435  003F  01F5               	clrf	_espacio
   436  0040                     l732:
   437                           
   438                           ;uart.c: 97:         _delay((unsigned long)((500)*(8000000/4000.0)));
   439  0040  3006               	movlw	6
   440  0041  00F4               	movwf	??_main+2
   441  0042  3013               	movlw	19
   442  0043  00F3               	movwf	??_main+1
   443  0044  30AD               	movlw	173
   444  0045  00F2               	movwf	??_main
   445  0046                     u67:
   446  0046  0BF2               	decfsz	??_main,f
   447  0047  2846               	goto	u67
   448  0048  0BF3               	decfsz	??_main+1,f
   449  0049  2846               	goto	u67
   450  004A  0BF4               	decfsz	??_main+2,f
   451  004B  2846               	goto	u67
   452  004C  284D               	nop2
   453  004D                     l734:
   454                           
   455                           ;uart.c: 99:         if(PIR1bits.TXIF){
   456  004D  1283               	bcf	3,5	;RP0=0, select bank0
   457  004E  1303               	bcf	3,6	;RP1=0, select bank0
   458  004F  1E0C               	btfss	12,4	;volatile
   459  0050  2852               	goto	u41
   460  0051  2853               	goto	u40
   461  0052                     u41:
   462  0052  2840               	goto	l732
   463  0053                     u40:
   464  0053                     l736:
   465                           
   466                           ;uart.c: 100:             TXREG = num[espacio];
   467  0053  0875               	movf	_espacio,w
   468  0054  3E01               	addlw	low ((_num-__stringbase)| (0+32768))
   469  0055  0084               	movwf	4
   470  0056  120A  118A  206A  120A  118A  	fcall	stringdir
   471  005B  0099               	movwf	25	;volatile
   472  005C                     l738:
   473                           
   474                           ;uart.c: 101:             espacio++;
   475  005C  3001               	movlw	1
   476  005D  00F2               	movwf	??_main
   477  005E  0872               	movf	??_main,w
   478  005F  07F5               	addwf	_espacio,f
   479  0060                     l740:
   480                           
   481                           ;uart.c: 102:             if(espacio == 12){
   482  0060  300C               	movlw	12
   483  0061  0675               	xorwf	_espacio,w
   484  0062  1D03               	btfss	3,2
   485  0063  2865               	goto	u51
   486  0064  2866               	goto	u50
   487  0065                     u51:
   488  0065  2840               	goto	l732
   489  0066                     u50:
   490  0066  283F               	goto	l730
   491  0067  120A  118A  280C   	ljmp	start
   492  006A                     __end_of_main:
   493                           
   494                           	psect	text1
   495  007C                     __ptext1:	
   496 ;; *************** function _isr *****************
   497 ;; Defined at:
   498 ;;		line 50 in file "uart.c"
   499 ;; Parameters:    Size  Location     Type
   500 ;;		None
   501 ;; Auto vars:     Size  Location     Type
   502 ;;		None
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1    wreg      void 
   505 ;; Registers used:
   506 ;;		wreg
   507 ;; Tracked objects:
   508 ;;		On entry : 0/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   512 ;;      Params:         0       0       0       0       0
   513 ;;      Locals:         0       0       0       0       0
   514 ;;      Temps:          2       0       0       0       0
   515 ;;      Totals:         2       0       0       0       0
   516 ;;Total ram usage:        2 bytes
   517 ;; Hardware stack levels used:    1
   518 ;; This function calls:
   519 ;;		Nothing
   520 ;; This function is called by:
   521 ;;		Interrupt level 1
   522 ;; This function uses a non-reentrant model
   523 ;;
   524                           
   525                           
   526                           ;psect for function _isr
   527  007C                     _isr:
   528  007C                     i1l648:
   529                           
   530                           ;uart.c: 52:     if(PIR1bits.RCIF){
   531  007C  1283               	bcf	3,5	;RP0=0, select bank0
   532  007D  1303               	bcf	3,6	;RP1=0, select bank0
   533  007E  1E8C               	btfss	12,5	;volatile
   534  007F  2881               	goto	u1_21
   535  0080  2882               	goto	u1_20
   536  0081                     u1_21:
   537  0081  2884               	goto	i1l46
   538  0082                     u1_20:
   539  0082                     i1l650:
   540                           
   541                           ;uart.c: 53:         PORTB = RCREG;
   542  0082  081A               	movf	26,w	;volatile
   543  0083  0086               	movwf	6	;volatile
   544  0084                     i1l46:
   545  0084  0871               	movf	??_isr+1,w
   546  0085  008A               	movwf	10
   547  0086  0E70               	swapf	??_isr,w
   548  0087  0083               	movwf	3
   549  0088  0EFE               	swapf	btemp,f
   550  0089  0E7E               	swapf	btemp,w
   551  008A  0009               	retfie
   552  008B                     __end_of_isr:
   553  007E                     btemp	set	126	;btemp
   554  007E                     wtemp0	set	126
   555                           
   556                           	psect	intentry
   557  0004                     __pintentry:	
   558                           ;incstack = 0
   559                           ; Regs used in _isr: [wreg]
   560                           
   561  0004                     interrupt_function:
   562  007E                     saved_w	set	btemp
   563  0004  00FE               	movwf	btemp
   564  0005  0E03               	swapf	3,w
   565  0006  00F0               	movwf	??_isr
   566  0007  080A               	movf	10,w
   567  0008  00F1               	movwf	??_isr+1
   568  0009  120A  118A  287C   	ljmp	_isr
   569                           
   570                           	psect	config
   571                           
   572                           ;Config register CONFIG1 @ 0x2007
   573                           ;	Oscillator Selection bits
   574                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   575                           ;	Watchdog Timer Enable bit
   576                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   577                           ;	Power-up Timer Enable bit
   578                           ;	PWRTE = OFF, PWRT disabled
   579                           ;	RE3/MCLR pin function select bit
   580                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   581                           ;	Code Protection bit
   582                           ;	CP = OFF, Program memory code protection is disabled
   583                           ;	Data Code Protection bit
   584                           ;	CPD = OFF, Data memory code protection is disabled
   585                           ;	Brown Out Reset Selection bits
   586                           ;	BOREN = OFF, BOR disabled
   587                           ;	Internal External Switchover bit
   588                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   589                           ;	Fail-Safe Clock Monitor Enabled bit
   590                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   591                           ;	Low Voltage Programming Enable bit
   592                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
   593                           ;	In-Circuit Debugger Mode bit
   594                           ;	DEBUG = 0x1, unprogrammed default
   595  2007                     	org	8199
   596  2007  38D4               	dw	14548
   597                           
   598                           ;Config register CONFIG2 @ 0x2008
   599                           ;	Brown-out Reset Selection bit
   600                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   601                           ;	Flash Program Memory Self Write Enable bits
   602                           ;	WRT = OFF, Write protection off
   603  2008                     	org	8200
   604  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    12
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _main                                                 3     3      0       0
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       6      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue May 04 10:13:57 2021

                      pc 0002                       u40 0053                       u41 0052  
                     u50 0066                       u51 0065                       u67 0046  
                     fsr 0004                      l700 0020                      l710 002A  
                    l702 0024                      l720 0034                      l712 002E  
                    l704 0025                      l730 003F                      l722 0037  
                    l714 002F                      l706 0026                      l740 0060  
                    l732 0040                      l724 003A                      l716 0032  
                    l708 0027                      l734 004D                      l726 003D  
                    l718 0033                      l736 0053                      l728 003E  
                    l738 005C                      l698 0014                      _isr 007C  
                    _num 0070                      fsr0 0004                     ?_isr 0070  
                   i1l46 0084                     u1_20 0082                     u1_21 0081  
                   _main 0014                     btemp 007E                     start 000C  
                  ??_isr 0070                    ?_main 0070                    _ANSEL 0188  
                  i1l650 0082                    i1l648 007C                    _RCREG 001A  
                  _SPBRG 0099                    _PORTA 0005                    _PORTB 0006  
                  _TRISA 0085                    _TRISB 0086                    _TXREG 0019  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 006A                   ??_main 0072  
                 _ANSELH 0189                   _SPBRGH 009A                   saved_w 007E  
__end_of__initialization 0010           __pcstackCOMMON 0070               __pmaintext 0014  
             __pintentry 0004               __stringtab 006A                  __ptext1 007C  
                _espacio 0075             __size_of_isr 000F     end_of_initialization 0010  
              _RCSTAbits 0018                _TXSTAbits 0098              _BAUDCTLbits 0187  
    start_initialization 000F              __end_of_isr 008B              __end_of_num 007C  
            __pbssCOMMON 0075                ___latbits 0002                __pstrings 006A  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
            __stringbase 006F       __end_of__stringtab 0070            __size_of_main 0056  
             _INTCONbits 000B                 intlevel1 0000                stringcode 006A  
             _OSCCONbits 008F                 stringdir 006A                 stringtab 006A  
