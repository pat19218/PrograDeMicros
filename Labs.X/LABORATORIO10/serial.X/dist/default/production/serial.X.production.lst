

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon May 10 19:43:11 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  001A                     _RCREG	set	26
   206  0019                     _TXREG	set	25
   207  000C                     _PIR1bits	set	12
   208  0018                     _RCSTAbits	set	24
   209  0006                     _PORTB	set	6
   210  0005                     _PORTA	set	5
   211  009A                     _SPBRGH	set	154
   212  0099                     _SPBRG	set	153
   213  0098                     _TXSTAbits	set	152
   214  008F                     _OSCCONbits	set	143
   215  0086                     _TRISB	set	134
   216  0085                     _TRISA	set	133
   217  0187                     _BAUDCTLbits	set	391
   218  0189                     _ANSELH	set	393
   219  0188                     _ANSEL	set	392
   220                           
   221                           	psect	strings
   222  0003                     __pstrings:
   223  0003                     stringtab:
   224  0003                     __stringtab:
   225  0003                     stringcode:	
   226                           ;	String table - string pointers are 1 byte each
   227                           
   228  0003                     stringdir:
   229  0003  3000               	movlw	high stringdir
   230  0004  008A               	movwf	10
   231  0005  0804               	movf	4,w
   232  0006  0A84               	incf	4,f
   233  0007  0782               	addwf	2,f
   234  0008                     __stringbase:
   235  0008  3400               	retlw	0
   236  0009                     __end_of__stringtab:
   237  0009                     STR_6:
   238  0009  3420               	retlw	32	;' '
   239  000A  3449               	retlw	73	;'I'
   240  000B  346E               	retlw	110	;'n'
   241  000C  3467               	retlw	103	;'g'
   242  000D  3472               	retlw	114	;'r'
   243  000E  3465               	retlw	101	;'e'
   244  000F  3473               	retlw	115	;'s'
   245  0010  3461               	retlw	97	;'a'
   246  0011  3420               	retlw	32	;' '
   247  0012  3475               	retlw	117	;'u'
   248  0013  346E               	retlw	110	;'n'
   249  0014  3420               	retlw	32	;' '
   250  0015  3463               	retlw	99	;'c'
   251  0016  3461               	retlw	97	;'a'
   252  0017  3472               	retlw	114	;'r'
   253  0018  3461               	retlw	97	;'a'
   254  0019  3463               	retlw	99	;'c'
   255  001A  3474               	retlw	116	;'t'
   256  001B  3465               	retlw	101	;'e'
   257  001C  3472               	retlw	114	;'r'
   258  001D  3420               	retlw	32	;' '
   259  001E  3470               	retlw	112	;'p'
   260  001F  3461               	retlw	97	;'a'
   261  0020  3472               	retlw	114	;'r'
   262  0021  3461               	retlw	97	;'a'
   263  0022  3420               	retlw	32	;' '
   264  0023  3465               	retlw	101	;'e'
   265  0024  346C               	retlw	108	;'l'
   266  0025  3420               	retlw	32	;' '
   267  0026  3470               	retlw	112	;'p'
   268  0027  3475               	retlw	117	;'u'
   269  0028  3465               	retlw	101	;'e'
   270  0029  3472               	retlw	114	;'r'
   271  002A  3474               	retlw	116	;'t'
   272  002B  346F               	retlw	111	;'o'
   273  002C  3420               	retlw	32	;' '
   274  002D  3441               	retlw	65	;'A'
   275  002E  343A               	retlw	58	;':'
   276  002F  3420               	retlw	32	;' '
   277  0030  3400               	retlw	0
   278  0031                     STR_8:
   279  0031  3420               	retlw	32	;' '
   280  0032  3449               	retlw	73	;'I'
   281  0033  346E               	retlw	110	;'n'
   282  0034  3467               	retlw	103	;'g'
   283  0035  3472               	retlw	114	;'r'
   284  0036  3465               	retlw	101	;'e'
   285  0037  3473               	retlw	115	;'s'
   286  0038  3461               	retlw	97	;'a'
   287  0039  3420               	retlw	32	;' '
   288  003A  3475               	retlw	117	;'u'
   289  003B  346E               	retlw	110	;'n'
   290  003C  3420               	retlw	32	;' '
   291  003D  3463               	retlw	99	;'c'
   292  003E  3461               	retlw	97	;'a'
   293  003F  3472               	retlw	114	;'r'
   294  0040  3461               	retlw	97	;'a'
   295  0041  3463               	retlw	99	;'c'
   296  0042  3474               	retlw	116	;'t'
   297  0043  3465               	retlw	101	;'e'
   298  0044  3472               	retlw	114	;'r'
   299  0045  3420               	retlw	32	;' '
   300  0046  3470               	retlw	112	;'p'
   301  0047  3461               	retlw	97	;'a'
   302  0048  3472               	retlw	114	;'r'
   303  0049  3461               	retlw	97	;'a'
   304  004A  3420               	retlw	32	;' '
   305  004B  3465               	retlw	101	;'e'
   306  004C  346C               	retlw	108	;'l'
   307  004D  3420               	retlw	32	;' '
   308  004E  3470               	retlw	112	;'p'
   309  004F  3475               	retlw	117	;'u'
   310  0050  3465               	retlw	101	;'e'
   311  0051  3472               	retlw	114	;'r'
   312  0052  3474               	retlw	116	;'t'
   313  0053  346F               	retlw	111	;'o'
   314  0054  3420               	retlw	32	;' '
   315  0055  3442               	retlw	66	;'B'
   316  0056  343A               	retlw	58	;':'
   317  0057  3420               	retlw	32	;' '
   318  0058  3400               	retlw	0
   319  0059                     STR_2:
   320  0059  3420               	retlw	32	;' '
   321  005A  3431               	retlw	49	;'1'
   322  005B  3429               	retlw	41	;')'
   323  005C  3420               	retlw	32	;' '
   324  005D  3444               	retlw	68	;'D'
   325  005E  3465               	retlw	101	;'e'
   326  005F  3473               	retlw	115	;'s'
   327  0060  3470               	retlw	112	;'p'
   328  0061  346C               	retlw	108	;'l'
   329  0062  3465               	retlw	101	;'e'
   330  0063  3467               	retlw	103	;'g'
   331  0064  3461               	retlw	97	;'a'
   332  0065  3472               	retlw	114	;'r'
   333  0066  3420               	retlw	32	;' '
   334  0067  3463               	retlw	99	;'c'
   335  0068  3461               	retlw	97	;'a'
   336  0069  3464               	retlw	100	;'d'
   337  006A  3465               	retlw	101	;'e'
   338  006B  346E               	retlw	110	;'n'
   339  006C  3461               	retlw	97	;'a'
   340  006D  3420               	retlw	32	;' '
   341  006E  3464               	retlw	100	;'d'
   342  006F  3465               	retlw	101	;'e'
   343  0070  3420               	retlw	32	;' '
   344  0071  3463               	retlw	99	;'c'
   345  0072  3461               	retlw	97	;'a'
   346  0073  3472               	retlw	114	;'r'
   347  0074  3461               	retlw	97	;'a'
   348  0075  3463               	retlw	99	;'c'
   349  0076  3474               	retlw	116	;'t'
   350  0077  3465               	retlw	101	;'e'
   351  0078  3472               	retlw	114	;'r'
   352  0079  3465               	retlw	101	;'e'
   353  007A  3473               	retlw	115	;'s'
   354  007B  3420               	retlw	32	;' '
   355  007C  340D               	retlw	13
   356  007D  3400               	retlw	0
   357  007E                     STR_1:
   358  007E  340D               	retlw	13
   359  007F  3420               	retlw	32	;' '
   360  0080  3451               	retlw	81	;'Q'
   361  0081  3475               	retlw	117	;'u'
   362  0082  3465               	retlw	101	;'e'
   363  0083  3420               	retlw	32	;' '
   364  0084  3461               	retlw	97	;'a'
   365  0085  3463               	retlw	99	;'c'
   366  0086  3463               	retlw	99	;'c'
   367  0087  3469               	retlw	105	;'i'
   368  0088  346F               	retlw	111	;'o'
   369  0089  346E               	retlw	110	;'n'
   370  008A  3420               	retlw	32	;' '
   371  008B  3464               	retlw	100	;'d'
   372  008C  3465               	retlw	101	;'e'
   373  008D  3473               	retlw	115	;'s'
   374  008E  3465               	retlw	101	;'e'
   375  008F  3461               	retlw	97	;'a'
   376  0090  3420               	retlw	32	;' '
   377  0091  3465               	retlw	101	;'e'
   378  0092  346A               	retlw	106	;'j'
   379  0093  3465               	retlw	101	;'e'
   380  0094  3463               	retlw	99	;'c'
   381  0095  3475               	retlw	117	;'u'
   382  0096  3474               	retlw	116	;'t'
   383  0097  3461               	retlw	97	;'a'
   384  0098  3472               	retlw	114	;'r'
   385  0099  343F               	retlw	63	;'?'
   386  009A  3420               	retlw	32	;' '
   387  009B  340D               	retlw	13
   388  009C  3400               	retlw	0
   389  009D                     STR_4:
   390  009D  3420               	retlw	32	;' '
   391  009E  3433               	retlw	51	;'3'
   392  009F  3429               	retlw	41	;')'
   393  00A0  3420               	retlw	32	;' '
   394  00A1  3443               	retlw	67	;'C'
   395  00A2  3461               	retlw	97	;'a'
   396  00A3  346D               	retlw	109	;'m'
   397  00A4  3462               	retlw	98	;'b'
   398  00A5  3469               	retlw	105	;'i'
   399  00A6  3461               	retlw	97	;'a'
   400  00A7  3472               	retlw	114	;'r'
   401  00A8  3420               	retlw	32	;' '
   402  00A9  3450               	retlw	80	;'P'
   403  00AA  344F               	retlw	79	;'O'
   404  00AB  3452               	retlw	82	;'R'
   405  00AC  3454               	retlw	84	;'T'
   406  00AD  3442               	retlw	66	;'B'
   407  00AE  3420               	retlw	32	;' '
   408  00AF  340D               	retlw	13
   409  00B0  3420               	retlw	32	;' '
   410  00B1  340D               	retlw	13
   411  00B2  3400               	retlw	0
   412  00B3                     STR_3:
   413  00B3  3420               	retlw	32	;' '
   414  00B4  3432               	retlw	50	;'2'
   415  00B5  3429               	retlw	41	;')'
   416  00B6  3420               	retlw	32	;' '
   417  00B7  3443               	retlw	67	;'C'
   418  00B8  3461               	retlw	97	;'a'
   419  00B9  346D               	retlw	109	;'m'
   420  00BA  3462               	retlw	98	;'b'
   421  00BB  3469               	retlw	105	;'i'
   422  00BC  3461               	retlw	97	;'a'
   423  00BD  3472               	retlw	114	;'r'
   424  00BE  3420               	retlw	32	;' '
   425  00BF  3450               	retlw	80	;'P'
   426  00C0  344F               	retlw	79	;'O'
   427  00C1  3452               	retlw	82	;'R'
   428  00C2  3454               	retlw	84	;'T'
   429  00C3  3441               	retlw	65	;'A'
   430  00C4  3420               	retlw	32	;' '
   431  00C5  340D               	retlw	13
   432  00C6  3400               	retlw	0
   433  00C7                     STR_5:
   434  00C7  3420               	retlw	32	;' '
   435  00C8  3448               	retlw	72	;'H'
   436  00C9  3465               	retlw	101	;'e'
   437  00CA  346C               	retlw	108	;'l'
   438  00CB  346C               	retlw	108	;'l'
   439  00CC  346F               	retlw	111	;'o'
   440  00CD  3420               	retlw	32	;' '
   441  00CE  3466               	retlw	102	;'f'
   442  00CF  3463               	retlw	99	;'c'
   443  00D0  346B               	retlw	107	;'k'
   444  00D1  3420               	retlw	32	;' '
   445  00D2  3477               	retlw	119	;'w'
   446  00D3  3472               	retlw	114	;'r'
   447  00D4  346C               	retlw	108	;'l'
   448  00D5  3464               	retlw	100	;'d'
   449  00D6  3420               	retlw	32	;' '
   450  00D7  340D               	retlw	13
   451  00D8  3400               	retlw	0
   452  00D9                     STR_7:
   453  00D9  340D               	retlw	13
   454  00DA  3420               	retlw	32	;' '
   455  00DB  344C               	retlw	76	;'L'
   456  00DC  3469               	retlw	105	;'i'
   457  00DD  3473               	retlw	115	;'s'
   458  00DE  3474               	retlw	116	;'t'
   459  00DF  346F               	retlw	111	;'o'
   460  00E0  3420               	retlw	32	;' '
   461  00E1  340D               	retlw	13
   462  00E2  3400               	retlw	0
   463  00D9                     
   464                           	psect	cinit
   465  07FB                     start_initialization:	
   466                           ; #config settings
   467                           
   468  07FB                     __initialization:
   469                           
   470                           ; Clear objects allocated to COMMON
   471  07FB  01F5               	clrf	__pbssCOMMON& (0+127)
   472  07FC                     end_of_initialization:	
   473                           ;End of C runtime variable initialization code
   474                           
   475  07FC                     __end_of__initialization:
   476  07FC  0183               	clrf	3
   477  07FD  120A  118A  2F5E   	ljmp	_main	;jump to C main() function
   478                           
   479                           	psect	bssCOMMON
   480  0075                     __pbssCOMMON:
   481  0075                     _valor:
   482  0075                     	ds	1
   483                           
   484                           	psect	cstackCOMMON
   485  0070                     __pcstackCOMMON:
   486  0070                     ?_USART_Cadena:
   487  0070                     ?_USART_Rx:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  0070                     ??_USART_Rx:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0070                     ?_main:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  0070                     ?_USART_Tx:	
   497                           ; 1 bytes @ 0x0
   498                           
   499  0070                     ??_USART_Tx:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  0070                     USART_Tx@data:	
   503                           ; 1 bytes @ 0x0
   504                           
   505                           
   506                           ; 1 bytes @ 0x0
   507  0070                     	ds	1
   508  0071                     ??_USART_Cadena:
   509                           
   510                           ; 1 bytes @ 0x1
   511  0071                     	ds	1
   512  0072                     USART_Cadena@str:
   513                           
   514                           ; 1 bytes @ 0x2
   515  0072                     	ds	1
   516  0073                     ??_main:
   517                           
   518                           ; 1 bytes @ 0x3
   519  0073                     	ds	2
   520                           
   521                           	psect	maintext
   522  075E                     __pmaintext:	
   523 ;;
   524 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   525 ;;
   526 ;; *************** function _main *****************
   527 ;; Defined at:
   528 ;;		line 55 in file "uart.c"
   529 ;; Parameters:    Size  Location     Type
   530 ;;		None
   531 ;; Auto vars:     Size  Location     Type
   532 ;;		None
   533 ;; Return value:  Size  Location     Type
   534 ;;                  1    wreg      void 
   535 ;; Registers used:
   536 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   537 ;; Tracked objects:
   538 ;;		On entry : B00/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   542 ;;      Params:         0       0       0       0       0
   543 ;;      Locals:         0       0       0       0       0
   544 ;;      Temps:          2       0       0       0       0
   545 ;;      Totals:         2       0       0       0       0
   546 ;;Total ram usage:        2 bytes
   547 ;; Hardware stack levels required when called:    2
   548 ;; This function calls:
   549 ;;		_USART_Cadena
   550 ;;		_USART_Rx
   551 ;; This function is called by:
   552 ;;		Startup code after reset
   553 ;; This function uses a non-reentrant model
   554 ;;
   555                           
   556                           
   557                           ;psect for function _main
   558  075E                     _main:
   559  075E                     l777:	
   560                           ;incstack = 0
   561                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   562                           
   563                           
   564                           ;uart.c: 57:     ANSEL = 0X00;
   565  075E  1683               	bsf	3,5	;RP0=1, select bank3
   566  075F  1703               	bsf	3,6	;RP1=1, select bank3
   567  0760  0188               	clrf	8	;volatile
   568                           
   569                           ;uart.c: 58:     ANSELH = 0x00;
   570  0761  0189               	clrf	9	;volatile
   571                           
   572                           ;uart.c: 60:     TRISA = 0x00;
   573  0762  1683               	bsf	3,5	;RP0=1, select bank1
   574  0763  1303               	bcf	3,6	;RP1=0, select bank1
   575  0764  0185               	clrf	5	;volatile
   576                           
   577                           ;uart.c: 61:     TRISB = 0x00;
   578  0765  0186               	clrf	6	;volatile
   579                           
   580                           ;uart.c: 63:     PORTA = 0x00;
   581  0766  1283               	bcf	3,5	;RP0=0, select bank0
   582  0767  1303               	bcf	3,6	;RP1=0, select bank0
   583  0768  0185               	clrf	5	;volatile
   584                           
   585                           ;uart.c: 64:     PORTB = 0x00;
   586  0769  0186               	clrf	6	;volatile
   587  076A                     l779:
   588                           
   589                           ;uart.c: 66:     OSCCONbits.IRCF = 0b111 ;
   590  076A  3070               	movlw	112
   591  076B  1683               	bsf	3,5	;RP0=1, select bank1
   592  076C  1303               	bcf	3,6	;RP1=0, select bank1
   593  076D  048F               	iorwf	15,f	;volatile
   594  076E                     l781:
   595                           
   596                           ;uart.c: 67:     OSCCONbits.SCS = 1;
   597  076E  140F               	bsf	15,0	;volatile
   598  076F                     l783:
   599                           
   600                           ;uart.c: 70:     TXSTAbits.SYNC = 0;
   601  076F  1218               	bcf	24,4	;volatile
   602  0770                     l785:
   603                           
   604                           ;uart.c: 71:     TXSTAbits.BRGH = 1;
   605  0770  1518               	bsf	24,2	;volatile
   606  0771                     l787:
   607                           
   608                           ;uart.c: 72:     BAUDCTLbits.BRG16 = 1;
   609  0771  1683               	bsf	3,5	;RP0=1, select bank3
   610  0772  1703               	bsf	3,6	;RP1=1, select bank3
   611  0773  1587               	bsf	7,3	;volatile
   612  0774                     l789:
   613                           
   614                           ;uart.c: 74:     SPBRG = 207;
   615  0774  30CF               	movlw	207
   616  0775  1683               	bsf	3,5	;RP0=1, select bank1
   617  0776  1303               	bcf	3,6	;RP1=0, select bank1
   618  0777  0099               	movwf	25	;volatile
   619  0778                     l791:
   620                           
   621                           ;uart.c: 75:     SPBRGH = 0;
   622  0778  019A               	clrf	26	;volatile
   623  0779                     l793:
   624                           
   625                           ;uart.c: 77:     RCSTAbits.SPEN = 1;
   626  0779  1283               	bcf	3,5	;RP0=0, select bank0
   627  077A  1303               	bcf	3,6	;RP1=0, select bank0
   628  077B  1798               	bsf	24,7	;volatile
   629  077C                     l795:
   630                           
   631                           ;uart.c: 78:     RCSTAbits.RX9 = 0;
   632  077C  1318               	bcf	24,6	;volatile
   633  077D                     l797:
   634                           
   635                           ;uart.c: 79:     RCSTAbits.CREN = 1;
   636  077D  1618               	bsf	24,4	;volatile
   637  077E                     l799:
   638                           
   639                           ;uart.c: 80:     TXSTAbits.TXEN = 1;
   640  077E  1683               	bsf	3,5	;RP0=1, select bank1
   641  077F  1303               	bcf	3,6	;RP1=0, select bank1
   642  0780  1698               	bsf	24,5	;volatile
   643  0781                     l801:
   644                           
   645                           ;uart.c: 84:         USART_Cadena("\r Que accion desea ejecutar? \r");
   646  0781  3076               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   647  0782  120A  118A  273F  120A  118A  	fcall	_USART_Cadena
   648  0787                     l803:
   649                           
   650                           ;uart.c: 85:         USART_Cadena(" 1) Desplegar cadena de caracteres \r");
   651  0787  3051               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   652  0788  120A  118A  273F  120A  118A  	fcall	_USART_Cadena
   653  078D                     l805:
   654                           
   655                           ;uart.c: 86:         USART_Cadena(" 2) Cambiar PORTA \r");
   656  078D  30AB               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   657  078E  120A  118A  273F  120A  118A  	fcall	_USART_Cadena
   658  0793                     l807:
   659                           
   660                           ;uart.c: 87:         USART_Cadena(" 3) Cambiar PORTB \r \r");
   661  0793  3095               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   662  0794  120A  118A  273F  120A  118A  	fcall	_USART_Cadena
   663  0799                     l42:	
   664                           ;uart.c: 89:         while(PIR1bits.RCIF == 0);
   665                           
   666  0799  1283               	bcf	3,5	;RP0=0, select bank0
   667  079A  1303               	bcf	3,6	;RP1=0, select bank0
   668  079B  1E8C               	btfss	12,5	;volatile
   669  079C  2F9E               	goto	u71
   670  079D  2F9F               	goto	u70
   671  079E                     u71:
   672  079E  2F99               	goto	l42
   673  079F                     u70:
   674  079F                     l809:
   675                           
   676                           ;uart.c: 91:         valor = USART_Rx();
   677  079F  120A  118A  272F  120A  118A  	fcall	_USART_Rx
   678  07A4  00F3               	movwf	??_main
   679  07A5  0873               	movf	??_main,w
   680  07A6  00F5               	movwf	_valor
   681                           
   682                           ;uart.c: 93:         switch(valor){
   683  07A7  2FE5               	goto	l827
   684  07A8                     l811:
   685                           
   686                           ;uart.c: 95:                 USART_Cadena(" Hello fck wrld \r");
   687  07A8  30BF               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   688  07A9  120A  118A  273F  120A  118A  	fcall	_USART_Cadena
   689                           
   690                           ;uart.c: 96:                 break;
   691  07AE  2F81               	goto	l801
   692  07AF                     l813:
   693                           
   694                           ;uart.c: 99:                 USART_Cadena(" Ingresa un caracter para el puerto A: ");
   695  07AF  3001               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   696  07B0  120A  118A  273F  120A  118A  	fcall	_USART_Cadena
   697  07B5                     l49:	
   698                           ;uart.c: 100:                 while(PIR1bits.RCIF == 0);
   699                           
   700  07B5  1283               	bcf	3,5	;RP0=0, select bank0
   701  07B6  1303               	bcf	3,6	;RP1=0, select bank0
   702  07B7  1E8C               	btfss	12,5	;volatile
   703  07B8  2FBA               	goto	u81
   704  07B9  2FBB               	goto	u80
   705  07BA                     u81:
   706  07BA  2FB5               	goto	l49
   707  07BB                     u80:
   708  07BB                     l815:
   709                           
   710                           ;uart.c: 101:                 PORTA = USART_Rx();
   711  07BB  120A  118A  272F  120A  118A  	fcall	_USART_Rx
   712  07C0  1283               	bcf	3,5	;RP0=0, select bank0
   713  07C1  1303               	bcf	3,6	;RP1=0, select bank0
   714  07C2  0085               	movwf	5	;volatile
   715  07C3                     l817:
   716                           
   717                           ;uart.c: 102:                 USART_Cadena("\r Listo \r");
   718  07C3  30D1               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   719  07C4  120A  118A  273F  120A  118A  	fcall	_USART_Cadena
   720                           
   721                           ;uart.c: 103:                 break;
   722  07C9  2F81               	goto	l801
   723  07CA                     l819:
   724                           
   725                           ;uart.c: 106:                 USART_Cadena(" Ingresa un caracter para el puerto B: ");
   726  07CA  3029               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
   727  07CB  120A  118A  273F  120A  118A  	fcall	_USART_Cadena
   728  07D0                     l53:	
   729                           ;uart.c: 107:                 while(PIR1bits.RCIF == 0);
   730                           
   731  07D0  1283               	bcf	3,5	;RP0=0, select bank0
   732  07D1  1303               	bcf	3,6	;RP1=0, select bank0
   733  07D2  1E8C               	btfss	12,5	;volatile
   734  07D3  2FD5               	goto	u91
   735  07D4  2FD6               	goto	u90
   736  07D5                     u91:
   737  07D5  2FD0               	goto	l53
   738  07D6                     u90:
   739  07D6                     l821:
   740                           
   741                           ;uart.c: 108:                 PORTB = USART_Rx();
   742  07D6  120A  118A  272F  120A  118A  	fcall	_USART_Rx
   743  07DB  1283               	bcf	3,5	;RP0=0, select bank0
   744  07DC  1303               	bcf	3,6	;RP1=0, select bank0
   745  07DD  0086               	movwf	6	;volatile
   746  07DE                     l823:
   747                           
   748                           ;uart.c: 109:                 USART_Cadena("\r Listo \r");
   749  07DE  30D1               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   750  07DF  120A  118A  273F  120A  118A  	fcall	_USART_Cadena
   751                           
   752                           ;uart.c: 110:                 break;
   753  07E4  2F81               	goto	l801
   754  07E5                     l827:
   755  07E5  0875               	movf	_valor,w
   756  07E6  00F3               	movwf	??_main
   757  07E7  01F4               	clrf	??_main+1
   758                           
   759                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   760                           ; Switch size 1, requested type "simple"
   761                           ; Number of cases is 1, Range of values is 0 to 0
   762                           ; switch strategies available:
   763                           ; Name         Instructions Cycles
   764                           ; simple_byte            4     3 (average)
   765                           ; direct_byte           11     8 (fixed)
   766                           ; jumptable            260     6 (fixed)
   767                           ;	Chosen strategy is simple_byte
   768  07E8  0874               	movf	??_main+1,w
   769  07E9  3A00               	xorlw	0	; case 0
   770  07EA  1903               	skipnz
   771  07EB  2FED               	goto	l865
   772  07EC  2F81               	goto	l801
   773  07ED                     l865:
   774                           
   775                           ; Switch size 1, requested type "simple"
   776                           ; Number of cases is 3, Range of values is 49 to 51
   777                           ; switch strategies available:
   778                           ; Name         Instructions Cycles
   779                           ; simple_byte           10     6 (average)
   780                           ; direct_byte           20    11 (fixed)
   781                           ; jumptable            263     9 (fixed)
   782                           ;	Chosen strategy is simple_byte
   783  07ED  0873               	movf	??_main,w
   784  07EE  3A31               	xorlw	49	; case 49
   785  07EF  1903               	skipnz
   786  07F0  2FA8               	goto	l811
   787  07F1  3A03               	xorlw	3	; case 50
   788  07F2  1903               	skipnz
   789  07F3  2FAF               	goto	l813
   790  07F4  3A01               	xorlw	1	; case 51
   791  07F5  1903               	skipnz
   792  07F6  2FCA               	goto	l819
   793  07F7  2F81               	goto	l801
   794  07F8  120A  118A  2800   	ljmp	start
   795  07FB                     __end_of_main:
   796                           
   797                           	psect	text1
   798  072F                     __ptext1:	
   799 ;; *************** function _USART_Rx *****************
   800 ;; Defined at:
   801 ;;		line 123 in file "uart.c"
   802 ;; Parameters:    Size  Location     Type
   803 ;;		None
   804 ;; Auto vars:     Size  Location     Type
   805 ;;		None
   806 ;; Return value:  Size  Location     Type
   807 ;;                  1    wreg      unsigned char 
   808 ;; Registers used:
   809 ;;		wreg
   810 ;; Tracked objects:
   811 ;;		On entry : 0/0
   812 ;;		On exit  : 0/0
   813 ;;		Unchanged: 0/0
   814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   815 ;;      Params:         0       0       0       0       0
   816 ;;      Locals:         0       0       0       0       0
   817 ;;      Temps:          0       0       0       0       0
   818 ;;      Totals:         0       0       0       0       0
   819 ;;Total ram usage:        0 bytes
   820 ;; Hardware stack levels used:    1
   821 ;; This function calls:
   822 ;;		Nothing
   823 ;; This function is called by:
   824 ;;		_main
   825 ;; This function uses a non-reentrant model
   826 ;;
   827                           
   828                           
   829                           ;psect for function _USART_Rx
   830  072F                     _USART_Rx:
   831  072F                     l677:	
   832                           ;incstack = 0
   833                           ; Regs used in _USART_Rx: [wreg]
   834                           
   835                           
   836                           ;uart.c: 124:         return RCREG;
   837  072F  1283               	bcf	3,5	;RP0=0, select bank0
   838  0730  1303               	bcf	3,6	;RP1=0, select bank0
   839  0731  081A               	movf	26,w	;volatile
   840  0732                     l67:
   841  0732  0008               	return
   842  0733                     __end_of_USART_Rx:
   843                           
   844                           	psect	text2
   845  073F                     __ptext2:	
   846 ;; *************** function _USART_Cadena *****************
   847 ;; Defined at:
   848 ;;		line 127 in file "uart.c"
   849 ;; Parameters:    Size  Location     Type
   850 ;;  str             1    wreg     PTR unsigned char 
   851 ;;		 -> STR_9(10), STR_8(40), STR_7(10), STR_6(40), 
   852 ;;		 -> STR_5(18), STR_4(22), STR_3(20), STR_2(37), 
   853 ;;		 -> STR_1(31), 
   854 ;; Auto vars:     Size  Location     Type
   855 ;;  str             1    2[COMMON] PTR unsigned char 
   856 ;;		 -> STR_9(10), STR_8(40), STR_7(10), STR_6(40), 
   857 ;;		 -> STR_5(18), STR_4(22), STR_3(20), STR_2(37), 
   858 ;;		 -> STR_1(31), 
   859 ;; Return value:  Size  Location     Type
   860 ;;                  1    wreg      void 
   861 ;; Registers used:
   862 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   863 ;; Tracked objects:
   864 ;;		On entry : 0/0
   865 ;;		On exit  : 0/0
   866 ;;		Unchanged: 0/0
   867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   868 ;;      Params:         0       0       0       0       0
   869 ;;      Locals:         1       0       0       0       0
   870 ;;      Temps:          1       0       0       0       0
   871 ;;      Totals:         2       0       0       0       0
   872 ;;Total ram usage:        2 bytes
   873 ;; Hardware stack levels used:    1
   874 ;; Hardware stack levels required when called:    1
   875 ;; This function calls:
   876 ;;		_USART_Tx
   877 ;; This function is called by:
   878 ;;		_main
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           
   882                           
   883                           ;psect for function _USART_Cadena
   884  073F                     _USART_Cadena:
   885                           
   886                           ;incstack = 0
   887                           ; Regs used in _USART_Cadena: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   888                           ;USART_Cadena@str stored from wreg
   889  073F  00F2               	movwf	USART_Cadena@str
   890  0740                     l769:
   891                           
   892                           ;uart.c: 128:         while(*str != '\0'){
   893  0740  2F51               	goto	l775
   894  0741                     l771:
   895                           
   896                           ;uart.c: 129:             USART_Tx(*str);
   897  0741  0872               	movf	USART_Cadena@str,w
   898  0742  0084               	movwf	4
   899  0743  120A  118A  2003  120A  118A  	fcall	stringdir
   900  0748  120A  118A  2733  120A  118A  	fcall	_USART_Tx
   901  074D                     l773:
   902                           
   903                           ;uart.c: 130:             str++;
   904  074D  3001               	movlw	1
   905  074E  00F1               	movwf	??_USART_Cadena
   906  074F  0871               	movf	??_USART_Cadena,w
   907  0750  07F2               	addwf	USART_Cadena@str,f
   908  0751                     l775:
   909                           
   910                           ;uart.c: 128:         while(*str != '\0'){
   911  0751  0872               	movf	USART_Cadena@str,w
   912  0752  0084               	movwf	4
   913  0753  120A  118A  2003  120A  118A  	fcall	stringdir
   914  0758  3A00               	xorlw	0
   915  0759  1D03               	skipz
   916  075A  2F5C               	goto	u61
   917  075B  2F5D               	goto	u60
   918  075C                     u61:
   919  075C  2F41               	goto	l771
   920  075D                     u60:
   921  075D                     l73:
   922  075D  0008               	return
   923  075E                     __end_of_USART_Cadena:
   924                           
   925                           	psect	text3
   926  0733                     __ptext3:	
   927 ;; *************** function _USART_Tx *****************
   928 ;; Defined at:
   929 ;;		line 118 in file "uart.c"
   930 ;; Parameters:    Size  Location     Type
   931 ;;  data            1    wreg     unsigned char 
   932 ;; Auto vars:     Size  Location     Type
   933 ;;  data            1    0[COMMON] unsigned char 
   934 ;; Return value:  Size  Location     Type
   935 ;;                  1    wreg      void 
   936 ;; Registers used:
   937 ;;		wreg
   938 ;; Tracked objects:
   939 ;;		On entry : 0/0
   940 ;;		On exit  : 0/0
   941 ;;		Unchanged: 0/0
   942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   943 ;;      Params:         0       0       0       0       0
   944 ;;      Locals:         1       0       0       0       0
   945 ;;      Temps:          0       0       0       0       0
   946 ;;      Totals:         1       0       0       0       0
   947 ;;Total ram usage:        1 bytes
   948 ;; Hardware stack levels used:    1
   949 ;; This function calls:
   950 ;;		Nothing
   951 ;; This function is called by:
   952 ;;		_USART_Cadena
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           
   957                           ;psect for function _USART_Tx
   958  0733                     _USART_Tx:
   959                           
   960                           ;incstack = 0
   961                           ; Regs used in _USART_Tx: [wreg]
   962                           ;USART_Tx@data stored from wreg
   963  0733  00F0               	movwf	USART_Tx@data
   964  0734                     l665:
   965  0734                     l61:	
   966                           ;uart.c: 119:         while(TXSTAbits.TRMT == 0);
   967                           
   968  0734  1683               	bsf	3,5	;RP0=1, select bank1
   969  0735  1303               	bcf	3,6	;RP1=0, select bank1
   970  0736  1C98               	btfss	24,1	;volatile
   971  0737  2F39               	goto	u11
   972  0738  2F3A               	goto	u10
   973  0739                     u11:
   974  0739  2F34               	goto	l61
   975  073A                     u10:
   976  073A                     l667:
   977                           
   978                           ;uart.c: 120:         TXREG = data;
   979  073A  0870               	movf	USART_Tx@data,w
   980  073B  1283               	bcf	3,5	;RP0=0, select bank0
   981  073C  1303               	bcf	3,6	;RP1=0, select bank0
   982  073D  0099               	movwf	25	;volatile
   983  073E                     l64:
   984  073E  0008               	return
   985  073F                     __end_of_USART_Tx:
   986  007E                     btemp	set	126	;btemp
   987  007E                     wtemp0	set	126
   988                           
   989                           	psect	config
   990                           
   991                           ;Config register CONFIG1 @ 0x2007
   992                           ;	Oscillator Selection bits
   993                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   994                           ;	Watchdog Timer Enable bit
   995                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   996                           ;	Power-up Timer Enable bit
   997                           ;	PWRTE = OFF, PWRT disabled
   998                           ;	RE3/MCLR pin function select bit
   999                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1000                           ;	Code Protection bit
  1001                           ;	CP = OFF, Program memory code protection is disabled
  1002                           ;	Data Code Protection bit
  1003                           ;	CPD = OFF, Data memory code protection is disabled
  1004                           ;	Brown Out Reset Selection bits
  1005                           ;	BOREN = OFF, BOR disabled
  1006                           ;	Internal External Switchover bit
  1007                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1008                           ;	Fail-Safe Clock Monitor Enabled bit
  1009                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1010                           ;	Low Voltage Programming Enable bit
  1011                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1012                           ;	In-Circuit Debugger Mode bit
  1013                           ;	DEBUG = 0x1, unprogrammed default
  1014  2007                     	org	8199
  1015  2007  38D4               	dw	14548
  1016                           
  1017                           ;Config register CONFIG2 @ 0x2008
  1018                           ;	Brown-out Reset Selection bit
  1019                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1020                           ;	Flash Program Memory Self Write Enable bits
  1021                           ;	WRT = OFF, Write protection off
  1022  2008                     	org	8200
  1023  2008  3FFF               	dw	16383

Data Sizes:
    Strings     218
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    USART_Cadena@str	PTR unsigned char  size(1) Largest target is 40
		 -> STR_9(CODE[10]), STR_8(CODE[40]), STR_7(CODE[10]), STR_6(CODE[40]), 
		 -> STR_5(CODE[18]), STR_4(CODE[22]), STR_3(CODE[20]), STR_2(CODE[37]), 
		 -> STR_1(CODE[31]), 


Critical Paths under _main in COMMON

    _main->_USART_Cadena
    _USART_Cadena->_USART_Tx

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     357
                                              3 COMMON     2     2      0
                       _USART_Cadena
                           _USART_Rx
 ---------------------------------------------------------------------------------
 (1) _USART_Rx                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Cadena                                         2     2      0     357
                                              1 COMMON     2     2      0
                           _USART_Tx
 ---------------------------------------------------------------------------------
 (2) _USART_Tx                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _USART_Cadena
     _USART_Tx
   _USART_Rx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       6      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon May 10 19:43:11 2021

                      pc 0002                       l42 0799                       l61 0734  
                     l53 07D0                       l64 073E                       l73 075D  
                     l49 07B5                       l67 0732                       u10 073A  
                     u11 0739                       u60 075D                       u61 075C  
                     u70 079F                       u71 079E                       u80 07BB  
                     u81 07BA                       u90 07D6                       u91 07D5  
                     fsr 0004                      l801 0781                      l811 07A8  
                    l803 0787                      l821 07D6                      l813 07AF  
                    l805 078D                      l823 07DE                      l815 07BB  
                    l807 0793                      l665 0734                      l817 07C3  
                    l809 079F                      l667 073A                      l771 0741  
                    l819 07CA                      l827 07E5                      l773 074D  
                    l677 072F                      l781 076E                      l775 0751  
                    l791 0778                      l783 076F                      l769 0740  
                    l865 07ED                      l793 0779                      l785 0770  
                    l777 075E                      l795 077C                      l787 0771  
                    l779 076A                      l797 077D                      l789 0774  
                    l799 077E                      fsr0 0004                     STR_1 007E  
                   STR_2 0059                     STR_3 00B3                     STR_4 009D  
                   STR_5 00C7                     STR_6 0009                     STR_7 00D9  
                   STR_8 0031                     STR_9 00D9                     _main 075E  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _ANSEL 0188                    _RCREG 001A                    _SPBRG 0099  
                  _PORTA 0005                    _PORTB 0006                    _TRISA 0085  
                  _TRISB 0086                    _TXREG 0019                    _valor 0075  
       __end_of_USART_Rx 0733         __end_of_USART_Tx 073F             USART_Tx@data 0070  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07FB             __end_of_main 07FB                   ??_main 0073  
                 _ANSELH 0189                   _SPBRGH 009A  __end_of__initialization 07FC  
         __pcstackCOMMON 0070                ?_USART_Rx 0070                ?_USART_Tx 0070  
             __pmaintext 075E               ??_USART_Rx 0070               ??_USART_Tx 0070  
             __stringtab 0003                  __ptext1 072F                  __ptext2 073F  
                __ptext3 0733     end_of_initialization 07FC                _RCSTAbits 0018  
          ?_USART_Cadena 0070                _TXSTAbits 0098              _BAUDCTLbits 0187  
      __size_of_USART_Rx 0004        __size_of_USART_Tx 000C      start_initialization 07FB  
         ??_USART_Cadena 0071              __pbssCOMMON 0075                ___latbits 0002  
              __pstrings 0003                 _PIR1bits 000C          USART_Cadena@str 0072  
   __end_of_USART_Cadena 075E                 _USART_Rx 072F                 _USART_Tx 0733  
            __stringbase 0008       __end_of__stringtab 0009            __size_of_main 009D  
              stringcode 0003    __size_of_USART_Cadena 001F               _OSCCONbits 008F  
               stringdir 0003                 stringtab 0003             _USART_Cadena 073F  
