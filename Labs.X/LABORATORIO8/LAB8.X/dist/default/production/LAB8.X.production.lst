

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Apr 19 16:53:58 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210                           
   211                           	psect	strings
   212  019C                     __pstrings:
   213  019C                     stringtab:
   214  019C                     __stringtab:
   215  019C                     stringcode:	
   216                           ;	String table - string pointers are 1 byte each
   217                           
   218  019C                     stringdir:
   219  019C  3001               	movlw	high stringdir
   220  019D  008A               	movwf	10
   221  019E  0804               	movf	4,w
   222  019F  0A84               	incf	4,f
   223  01A0  0782               	addwf	2,f
   224  01A1                     __stringbase:
   225  01A1  3400               	retlw	0
   226  01A2                     __end_of__stringtab:
   227  01A2                     _num_display:
   228  01A2  34FC               	retlw	252
   229  01A3  3460               	retlw	96
   230  01A4  34DA               	retlw	218
   231  01A5  34F2               	retlw	242
   232  01A6  3466               	retlw	102
   233  01A7  34B6               	retlw	182
   234  01A8  34BE               	retlw	190
   235  01A9  34E0               	retlw	224
   236  01AA  34FE               	retlw	254
   237  01AB  34F6               	retlw	246
   238  01AC                     __end_of_num_display:
   239                           
   240                           	psect	nvCOMMON
   241  0075                     __pnvCOMMON:
   242  0075                     _turno:
   243  0075                     	ds	1
   244  0076                     _dividendo:
   245  0076                     	ds	1
   246  0077                     _decena:
   247  0077                     	ds	1
   248  0078                     _centena:
   249  0078                     	ds	1
   250                           
   251                           	psect	nvBANK0
   252  0033                     __pnvBANK0:
   253  0033                     _unidad:
   254  0033                     	ds	1
   255  0008                     _PORTD	set	8
   256  0006                     _PORTB	set	6
   257  0005                     _PORTA	set	5
   258  0001                     _TMR0	set	1
   259  000B                     _INTCONbits	set	11
   260  0007                     _PORTC	set	7
   261  0042                     _RD2	set	66
   262  0041                     _RD1	set	65
   263  0040                     _RD0	set	64
   264  005A                     _T0IF	set	90
   265  0081                     _OPTION_REGbits	set	129
   266  008F                     _OSCCONbits	set	143
   267  0088                     _TRISD	set	136
   268  0087                     _TRISC	set	135
   269  0086                     _TRISB	set	134
   270  0085                     _TRISA	set	133
   271  0189                     _ANSELH	set	393
   272  0188                     _ANSEL	set	392
   273                           
   274                           	psect	cinit
   275  0015                     start_initialization:	
   276                           ; #config settings
   277                           
   278  0015                     __initialization:
   279                           
   280                           ; Clear objects allocated to COMMON
   281  0015  01F9               	clrf	__pbssCOMMON& (0+127)
   282  0016                     end_of_initialization:	
   283                           ;End of C runtime variable initialization code
   284                           
   285  0016                     __end_of__initialization:
   286  0016  0183               	clrf	3
   287  0017  120A  118A  281A   	ljmp	_main	;jump to C main() function
   288                           
   289                           	psect	bssCOMMON
   290  0079                     __pbssCOMMON:
   291  0079                     _divisor:
   292  0079                     	ds	1
   293                           
   294                           	psect	cstackCOMMON
   295  0070                     __pcstackCOMMON:
   296  0070                     ?_isr:
   297  0070                     ??_isr:	
   298                           ; 1 bytes @ 0x0
   299                           
   300  0070                     ?_main:	
   301                           ; 1 bytes @ 0x0
   302                           
   303                           
   304                           ; 1 bytes @ 0x0
   305  0070                     	ds	5
   306                           
   307                           	psect	cstackBANK0
   308  0020                     __pcstackBANK0:
   309  0020                     ?___bmul:
   310  0020                     ?___wmul:	
   311                           ; 1 bytes @ 0x0
   312                           
   313  0020                     ___bmul@multiplicand:	
   314                           ; 2 bytes @ 0x0
   315                           
   316  0020                     ___wmul@multiplier:	
   317                           ; 1 bytes @ 0x0
   318                           
   319                           
   320                           ; 2 bytes @ 0x0
   321  0020                     	ds	1
   322  0021                     ??___bmul:
   323                           
   324                           ; 1 bytes @ 0x1
   325  0021                     	ds	1
   326  0022                     ___bmul@product:
   327  0022                     ___wmul@multiplicand:	
   328                           ; 1 bytes @ 0x2
   329                           
   330                           
   331                           ; 2 bytes @ 0x2
   332  0022                     	ds	1
   333  0023                     ___bmul@multiplier:
   334                           
   335                           ; 1 bytes @ 0x3
   336  0023                     	ds	1
   337  0024                     ??___wmul:
   338  0024                     ___wmul@product:	
   339                           ; 1 bytes @ 0x4
   340                           
   341                           
   342                           ; 2 bytes @ 0x4
   343  0024                     	ds	2
   344  0026                     ?___awdiv:
   345  0026                     ___awdiv@divisor:	
   346                           ; 2 bytes @ 0x6
   347                           
   348                           
   349                           ; 2 bytes @ 0x6
   350  0026                     	ds	2
   351  0028                     ___awdiv@dividend:
   352                           
   353                           ; 2 bytes @ 0x8
   354  0028                     	ds	2
   355  002A                     ??___awdiv:
   356                           
   357                           ; 1 bytes @ 0xA
   358  002A                     	ds	1
   359  002B                     ___awdiv@counter:
   360                           
   361                           ; 1 bytes @ 0xB
   362  002B                     	ds	1
   363  002C                     ___awdiv@sign:
   364                           
   365                           ; 1 bytes @ 0xC
   366  002C                     	ds	1
   367  002D                     ___awdiv@quotient:
   368                           
   369                           ; 2 bytes @ 0xD
   370  002D                     	ds	2
   371  002F                     ??_main:
   372                           
   373                           ; 1 bytes @ 0xF
   374  002F                     	ds	4
   375                           
   376                           	psect	maintext
   377  001A                     __pmaintext:	
   378 ;;
   379 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   380 ;;
   381 ;; *************** function _main *****************
   382 ;; Defined at:
   383 ;;		line 85 in file "laba8.c"
   384 ;; Parameters:    Size  Location     Type
   385 ;;		None
   386 ;; Auto vars:     Size  Location     Type
   387 ;;		None
   388 ;; Return value:  Size  Location     Type
   389 ;;                  1    wreg      void 
   390 ;; Registers used:
   391 ;;		wreg, status,2, status,0, pclath, cstack
   392 ;; Tracked objects:
   393 ;;		On entry : B00/0
   394 ;;		On exit  : 0/0
   395 ;;		Unchanged: 0/0
   396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   397 ;;      Params:         0       0       0       0       0
   398 ;;      Locals:         0       0       0       0       0
   399 ;;      Temps:          0       4       0       0       0
   400 ;;      Totals:         0       4       0       0       0
   401 ;;Total ram usage:        4 bytes
   402 ;; Hardware stack levels required when called:    3
   403 ;; This function calls:
   404 ;;		___awdiv
   405 ;;		___bmul
   406 ;;		___wmul
   407 ;; This function is called by:
   408 ;;		Startup code after reset
   409 ;; This function uses a non-reentrant model
   410 ;;
   411                           
   412                           
   413                           ;psect for function _main
   414  001A                     _main:
   415  001A                     l982:	
   416                           ;incstack = 0
   417                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   418                           
   419                           
   420                           ;laba8.c: 87:     ANSEL = 0x00;
   421  001A  1683               	bsf	3,5	;RP0=1, select bank3
   422  001B  1703               	bsf	3,6	;RP1=1, select bank3
   423  001C  0188               	clrf	8	;volatile
   424                           
   425                           ;laba8.c: 88:     ANSELH = 0x00;
   426  001D  0189               	clrf	9	;volatile
   427                           
   428                           ;laba8.c: 90:     TRISA = 0x00;
   429  001E  1683               	bsf	3,5	;RP0=1, select bank1
   430  001F  1303               	bcf	3,6	;RP1=0, select bank1
   431  0020  0185               	clrf	5	;volatile
   432  0021                     l984:
   433                           
   434                           ;laba8.c: 91:     TRISB = 0b00000011;
   435  0021  3003               	movlw	3
   436  0022  0086               	movwf	6	;volatile
   437  0023                     l986:
   438                           
   439                           ;laba8.c: 92:     TRISC = 0x00;
   440  0023  0187               	clrf	7	;volatile
   441  0024                     l988:
   442                           
   443                           ;laba8.c: 93:     TRISD = 0x00;
   444  0024  0188               	clrf	8	;volatile
   445  0025                     l990:
   446                           
   447                           ;laba8.c: 95:     OSCCONbits.IRCF2 = 1;
   448  0025  170F               	bsf	15,6	;volatile
   449  0026                     l992:
   450                           
   451                           ;laba8.c: 96:     OSCCONbits.IRCF1 = 1;
   452  0026  168F               	bsf	15,5	;volatile
   453  0027                     l994:
   454                           
   455                           ;laba8.c: 97:     OSCCONbits.IRCF0 = 1;
   456  0027  160F               	bsf	15,4	;volatile
   457  0028                     l996:
   458                           
   459                           ;laba8.c: 98:     OSCCONbits.SCS = 1;
   460  0028  140F               	bsf	15,0	;volatile
   461  0029                     l998:
   462                           
   463                           ;laba8.c: 100:     OPTION_REGbits.T0CS = 0;
   464  0029  1281               	bcf	1,5	;volatile
   465  002A                     l1000:
   466                           
   467                           ;laba8.c: 101:     OPTION_REGbits.PSA = 0;
   468  002A  1181               	bcf	1,3	;volatile
   469  002B                     l1002:
   470                           
   471                           ;laba8.c: 102:     OPTION_REGbits.PS2 = 1;
   472  002B  1501               	bsf	1,2	;volatile
   473  002C                     l1004:
   474                           
   475                           ;laba8.c: 103:     OPTION_REGbits.PS1 = 0;
   476  002C  1081               	bcf	1,1	;volatile
   477  002D                     l1006:
   478                           
   479                           ;laba8.c: 104:     OPTION_REGbits.PS0 = 1;
   480  002D  1401               	bsf	1,0	;volatile
   481  002E                     l1008:
   482                           
   483                           ;laba8.c: 105:     TMR0 = 100;
   484  002E  3064               	movlw	100
   485  002F  1283               	bcf	3,5	;RP0=0, select bank0
   486  0030  1303               	bcf	3,6	;RP1=0, select bank0
   487  0031  0081               	movwf	1	;volatile
   488  0032                     l1010:
   489                           
   490                           ;laba8.c: 107:     INTCONbits.GIE = 1;
   491  0032  178B               	bsf	11,7	;volatile
   492  0033                     l1012:
   493                           
   494                           ;laba8.c: 108:     INTCONbits.T0IE = 1;
   495  0033  168B               	bsf	11,5	;volatile
   496  0034                     l1014:
   497                           
   498                           ;laba8.c: 109:     INTCONbits.T0IF = 0;
   499  0034  110B               	bcf	11,2	;volatile
   500                           
   501                           ;laba8.c: 111:     PORTA = 0;
   502  0035  0185               	clrf	5	;volatile
   503                           
   504                           ;laba8.c: 112:     PORTB = 0;
   505  0036  0186               	clrf	6	;volatile
   506                           
   507                           ;laba8.c: 113:     PORTC = 0;
   508  0037  0187               	clrf	7	;volatile
   509                           
   510                           ;laba8.c: 114:     PORTD = 0;
   511  0038  0188               	clrf	8	;volatile
   512                           
   513                           ;laba8.c: 116:     centena = 0;
   514  0039  01F8               	clrf	_centena
   515                           
   516                           ;laba8.c: 117:     decena = 0;
   517  003A  01F7               	clrf	_decena
   518                           
   519                           ;laba8.c: 118:     unidad = 0;
   520  003B  01B3               	clrf	_unidad
   521  003C                     l1016:
   522                           
   523                           ;laba8.c: 119:     turno = 3;
   524  003C  3003               	movlw	3
   525  003D  00AF               	movwf	??_main
   526  003E  082F               	movf	??_main,w
   527  003F  00F5               	movwf	_turno
   528  0040                     l1018:
   529                           
   530                           ;laba8.c: 124:         dividendo = PORTA;
   531  0040  0805               	movf	5,w	;volatile
   532  0041  00AF               	movwf	??_main
   533  0042  082F               	movf	??_main,w
   534  0043  00F6               	movwf	_dividendo
   535  0044                     l1020:
   536                           
   537                           ;laba8.c: 125:         centena = dividendo / 100;
   538  0044  3064               	movlw	100
   539  0045  00A6               	movwf	___awdiv@divisor
   540  0046  3000               	movlw	0
   541  0047  00A7               	movwf	___awdiv@divisor+1
   542  0048  0876               	movf	_dividendo,w
   543  0049  00AF               	movwf	??_main
   544  004A  01B0               	clrf	??_main+1
   545  004B  082F               	movf	??_main,w
   546  004C  00A8               	movwf	___awdiv@dividend
   547  004D  0830               	movf	??_main+1,w
   548  004E  00A9               	movwf	___awdiv@dividend+1
   549  004F  120A  118A  20A4  120A  118A  	fcall	___awdiv
   550  0054  1283               	bcf	3,5	;RP0=0, select bank0
   551  0055  1303               	bcf	3,6	;RP1=0, select bank0
   552  0056  0826               	movf	?___awdiv,w
   553  0057  00B1               	movwf	??_main+2
   554  0058  0831               	movf	??_main+2,w
   555  0059  00F8               	movwf	_centena
   556  005A                     l1022:
   557                           
   558                           ;laba8.c: 126:         decena = (dividendo - (100 * centena))/10;
   559  005A  300A               	movlw	10
   560  005B  00A6               	movwf	___awdiv@divisor
   561  005C  3000               	movlw	0
   562  005D  00A7               	movwf	___awdiv@divisor+1
   563  005E  0878               	movf	_centena,w
   564  005F  00AF               	movwf	??_main
   565  0060  01B0               	clrf	??_main+1
   566  0061  082F               	movf	??_main,w
   567  0062  00A0               	movwf	___wmul@multiplier
   568  0063  0830               	movf	??_main+1,w
   569  0064  00A1               	movwf	___wmul@multiplier+1
   570  0065  309C               	movlw	156
   571  0066  00A2               	movwf	___wmul@multiplicand
   572  0067  30FF               	movlw	255
   573  0068  00A3               	movwf	___wmul@multiplicand+1
   574  0069  120A  118A  215E  120A  118A  	fcall	___wmul
   575  006E  0876               	movf	_dividendo,w
   576  006F  1283               	bcf	3,5	;RP0=0, select bank0
   577  0070  1303               	bcf	3,6	;RP1=0, select bank0
   578  0071  0720               	addwf	?___wmul,w
   579  0072  00A8               	movwf	___awdiv@dividend
   580  0073  0821               	movf	?___wmul+1,w
   581  0074  1803               	skipnc
   582  0075  0A21               	incf	?___wmul+1,w
   583  0076  00A9               	movwf	___awdiv@dividend+1
   584  0077  120A  118A  20A4  120A  118A  	fcall	___awdiv
   585  007C  1283               	bcf	3,5	;RP0=0, select bank0
   586  007D  1303               	bcf	3,6	;RP1=0, select bank0
   587  007E  0826               	movf	?___awdiv,w
   588  007F  00B1               	movwf	??_main+2
   589  0080  0831               	movf	??_main+2,w
   590  0081  00F7               	movwf	_decena
   591  0082                     l1024:
   592                           
   593                           ;laba8.c: 127:         unidad = dividendo - (100 * centena) - (decena * 10);
   594  0082  309C               	movlw	156
   595  0083  00AF               	movwf	??_main
   596  0084  082F               	movf	??_main,w
   597  0085  00A0               	movwf	___bmul@multiplicand
   598  0086  0878               	movf	_centena,w
   599  0087  120A  118A  2185  120A  118A  	fcall	___bmul
   600  008C  1283               	bcf	3,5	;RP0=0, select bank0
   601  008D  1303               	bcf	3,6	;RP1=0, select bank0
   602  008E  00B0               	movwf	??_main+1
   603  008F  30F6               	movlw	246
   604  0090  00B1               	movwf	??_main+2
   605  0091  0831               	movf	??_main+2,w
   606  0092  00A0               	movwf	___bmul@multiplicand
   607  0093  0877               	movf	_decena,w
   608  0094  120A  118A  2185  120A  118A  	fcall	___bmul
   609  0099  1283               	bcf	3,5	;RP0=0, select bank0
   610  009A  1303               	bcf	3,6	;RP1=0, select bank0
   611  009B  0730               	addwf	??_main+1,w
   612  009C  0776               	addwf	_dividendo,w
   613  009D  00B2               	movwf	??_main+3
   614  009E  0832               	movf	??_main+3,w
   615  009F  00B3               	movwf	_unidad
   616  00A0  2840               	goto	l1018
   617  00A1  120A  118A  2812   	ljmp	start
   618  00A4                     __end_of_main:
   619                           
   620                           	psect	text1
   621  015E                     __ptext1:	
   622 ;; *************** function ___wmul *****************
   623 ;; Defined at:
   624 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;  multiplier      2    0[BANK0 ] unsigned int 
   627 ;;  multiplicand    2    2[BANK0 ] unsigned int 
   628 ;; Auto vars:     Size  Location     Type
   629 ;;  product         2    4[BANK0 ] unsigned int 
   630 ;; Return value:  Size  Location     Type
   631 ;;                  2    0[BANK0 ] unsigned int 
   632 ;; Registers used:
   633 ;;		wreg, status,2, status,0
   634 ;; Tracked objects:
   635 ;;		On entry : 0/0
   636 ;;		On exit  : 0/0
   637 ;;		Unchanged: 0/0
   638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   639 ;;      Params:         0       4       0       0       0
   640 ;;      Locals:         0       2       0       0       0
   641 ;;      Temps:          0       0       0       0       0
   642 ;;      Totals:         0       6       0       0       0
   643 ;;Total ram usage:        6 bytes
   644 ;; Hardware stack levels used:    1
   645 ;; Hardware stack levels required when called:    2
   646 ;; This function calls:
   647 ;;		Nothing
   648 ;; This function is called by:
   649 ;;		_main
   650 ;; This function uses a non-reentrant model
   651 ;;
   652                           
   653                           
   654                           ;psect for function ___wmul
   655  015E                     ___wmul:
   656  015E                     l954:	
   657                           ;incstack = 0
   658                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   659                           
   660  015E  1283               	bcf	3,5	;RP0=0, select bank0
   661  015F  1303               	bcf	3,6	;RP1=0, select bank0
   662  0160  01A4               	clrf	___wmul@product
   663  0161  01A5               	clrf	___wmul@product+1
   664  0162                     l956:
   665  0162  1C20               	btfss	___wmul@multiplier,0
   666  0163  2965               	goto	u431
   667  0164  2966               	goto	u430
   668  0165                     u431:
   669  0165  296C               	goto	l156
   670  0166                     u430:
   671  0166                     l958:
   672  0166  0822               	movf	___wmul@multiplicand,w
   673  0167  07A4               	addwf	___wmul@product,f
   674  0168  1803               	skipnc
   675  0169  0AA5               	incf	___wmul@product+1,f
   676  016A  0823               	movf	___wmul@multiplicand+1,w
   677  016B  07A5               	addwf	___wmul@product+1,f
   678  016C                     l156:
   679  016C  3001               	movlw	1
   680  016D                     u445:
   681  016D  1003               	clrc
   682  016E  0DA2               	rlf	___wmul@multiplicand,f
   683  016F  0DA3               	rlf	___wmul@multiplicand+1,f
   684  0170  3EFF               	addlw	-1
   685  0171  1D03               	skipz
   686  0172  296D               	goto	u445
   687  0173                     l960:
   688  0173  3001               	movlw	1
   689  0174                     u455:
   690  0174  1003               	clrc
   691  0175  0CA1               	rrf	___wmul@multiplier+1,f
   692  0176  0CA0               	rrf	___wmul@multiplier,f
   693  0177  3EFF               	addlw	-1
   694  0178  1D03               	skipz
   695  0179  2974               	goto	u455
   696  017A                     l962:
   697  017A  0820               	movf	___wmul@multiplier,w
   698  017B  0421               	iorwf	___wmul@multiplier+1,w
   699  017C  1D03               	btfss	3,2
   700  017D  297F               	goto	u461
   701  017E  2980               	goto	u460
   702  017F                     u461:
   703  017F  2962               	goto	l956
   704  0180                     u460:
   705  0180                     l964:
   706  0180  0825               	movf	___wmul@product+1,w
   707  0181  00A1               	movwf	?___wmul+1
   708  0182  0824               	movf	___wmul@product,w
   709  0183  00A0               	movwf	?___wmul
   710  0184                     l158:
   711  0184  0008               	return
   712  0185                     __end_of___wmul:
   713                           
   714                           	psect	text2
   715  0185                     __ptext2:	
   716 ;; *************** function ___bmul *****************
   717 ;; Defined at:
   718 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;  multiplier      1    wreg     unsigned char 
   721 ;;  multiplicand    1    0[BANK0 ] unsigned char 
   722 ;; Auto vars:     Size  Location     Type
   723 ;;  multiplier      1    3[BANK0 ] unsigned char 
   724 ;;  product         1    2[BANK0 ] unsigned char 
   725 ;; Return value:  Size  Location     Type
   726 ;;                  1    wreg      unsigned char 
   727 ;; Registers used:
   728 ;;		wreg, status,2, status,0
   729 ;; Tracked objects:
   730 ;;		On entry : 0/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   734 ;;      Params:         0       1       0       0       0
   735 ;;      Locals:         0       2       0       0       0
   736 ;;      Temps:          0       1       0       0       0
   737 ;;      Totals:         0       4       0       0       0
   738 ;;Total ram usage:        4 bytes
   739 ;; Hardware stack levels used:    1
   740 ;; Hardware stack levels required when called:    2
   741 ;; This function calls:
   742 ;;		Nothing
   743 ;; This function is called by:
   744 ;;		_main
   745 ;; This function uses a non-reentrant model
   746 ;;
   747                           
   748                           
   749                           ;psect for function ___bmul
   750  0185                     ___bmul:
   751                           
   752                           ;incstack = 0
   753                           ; Regs used in ___bmul: [wreg+status,2+status,0]
   754                           ;___bmul@multiplier stored from wreg
   755  0185  1283               	bcf	3,5	;RP0=0, select bank0
   756  0186  1303               	bcf	3,6	;RP1=0, select bank0
   757  0187  00A3               	movwf	___bmul@multiplier
   758  0188                     l968:
   759  0188  01A2               	clrf	___bmul@product
   760  0189                     l970:
   761  0189  1C23               	btfss	___bmul@multiplier,0
   762  018A  298C               	goto	u471
   763  018B  298D               	goto	u470
   764  018C                     u471:
   765  018C  2991               	goto	l974
   766  018D                     u470:
   767  018D                     l972:
   768  018D  0820               	movf	___bmul@multiplicand,w
   769  018E  00A1               	movwf	??___bmul
   770  018F  0821               	movf	??___bmul,w
   771  0190  07A2               	addwf	___bmul@product,f
   772  0191                     l974:
   773  0191  1003               	clrc
   774  0192  0DA0               	rlf	___bmul@multiplicand,f
   775  0193                     l976:
   776  0193  1003               	clrc
   777  0194  0CA3               	rrf	___bmul@multiplier,f
   778  0195  0823               	movf	___bmul@multiplier,w
   779  0196  1D03               	btfss	3,2
   780  0197  2999               	goto	u481
   781  0198  299A               	goto	u480
   782  0199                     u481:
   783  0199  2989               	goto	l970
   784  019A                     u480:
   785  019A                     l978:
   786  019A  0822               	movf	___bmul@product,w
   787  019B                     l182:
   788  019B  0008               	return
   789  019C                     __end_of___bmul:
   790                           
   791                           	psect	text3
   792  00A4                     __ptext3:	
   793 ;; *************** function ___awdiv *****************
   794 ;; Defined at:
   795 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
   796 ;; Parameters:    Size  Location     Type
   797 ;;  divisor         2    6[BANK0 ] int 
   798 ;;  dividend        2    8[BANK0 ] int 
   799 ;; Auto vars:     Size  Location     Type
   800 ;;  quotient        2   13[BANK0 ] int 
   801 ;;  sign            1   12[BANK0 ] unsigned char 
   802 ;;  counter         1   11[BANK0 ] unsigned char 
   803 ;; Return value:  Size  Location     Type
   804 ;;                  2    6[BANK0 ] int 
   805 ;; Registers used:
   806 ;;		wreg, status,2, status,0
   807 ;; Tracked objects:
   808 ;;		On entry : 0/0
   809 ;;		On exit  : 0/0
   810 ;;		Unchanged: 0/0
   811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   812 ;;      Params:         0       4       0       0       0
   813 ;;      Locals:         0       4       0       0       0
   814 ;;      Temps:          0       1       0       0       0
   815 ;;      Totals:         0       9       0       0       0
   816 ;;Total ram usage:        9 bytes
   817 ;; Hardware stack levels used:    1
   818 ;; Hardware stack levels required when called:    2
   819 ;; This function calls:
   820 ;;		Nothing
   821 ;; This function is called by:
   822 ;;		_main
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           
   826                           
   827                           ;psect for function ___awdiv
   828  00A4                     ___awdiv:
   829  00A4                     l836:	
   830                           ;incstack = 0
   831                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   832                           
   833  00A4  1283               	bcf	3,5	;RP0=0, select bank0
   834  00A5  1303               	bcf	3,6	;RP1=0, select bank0
   835  00A6  01AC               	clrf	___awdiv@sign
   836  00A7                     l838:
   837  00A7  1FA7               	btfss	___awdiv@divisor+1,7
   838  00A8  28AA               	goto	u281
   839  00A9  28AB               	goto	u280
   840  00AA                     u281:
   841  00AA  28B2               	goto	l844
   842  00AB                     u280:
   843  00AB                     l840:
   844  00AB  09A6               	comf	___awdiv@divisor,f
   845  00AC  09A7               	comf	___awdiv@divisor+1,f
   846  00AD  0AA6               	incf	___awdiv@divisor,f
   847  00AE  1903               	skipnz
   848  00AF  0AA7               	incf	___awdiv@divisor+1,f
   849  00B0                     l842:
   850  00B0  01AC               	clrf	___awdiv@sign
   851  00B1  0AAC               	incf	___awdiv@sign,f
   852  00B2                     l844:
   853  00B2  1FA9               	btfss	___awdiv@dividend+1,7
   854  00B3  28B5               	goto	u291
   855  00B4  28B6               	goto	u290
   856  00B5                     u291:
   857  00B5  28BF               	goto	l850
   858  00B6                     u290:
   859  00B6                     l846:
   860  00B6  09A8               	comf	___awdiv@dividend,f
   861  00B7  09A9               	comf	___awdiv@dividend+1,f
   862  00B8  0AA8               	incf	___awdiv@dividend,f
   863  00B9  1903               	skipnz
   864  00BA  0AA9               	incf	___awdiv@dividend+1,f
   865  00BB                     l848:
   866  00BB  3001               	movlw	1
   867  00BC  00AA               	movwf	??___awdiv
   868  00BD  082A               	movf	??___awdiv,w
   869  00BE  06AC               	xorwf	___awdiv@sign,f
   870  00BF                     l850:
   871  00BF  01AD               	clrf	___awdiv@quotient
   872  00C0  01AE               	clrf	___awdiv@quotient+1
   873  00C1                     l852:
   874  00C1  0826               	movf	___awdiv@divisor,w
   875  00C2  0427               	iorwf	___awdiv@divisor+1,w
   876  00C3  1903               	btfsc	3,2
   877  00C4  28C6               	goto	u301
   878  00C5  28C7               	goto	u300
   879  00C6                     u301:
   880  00C6  28FE               	goto	l872
   881  00C7                     u300:
   882  00C7                     l854:
   883  00C7  01AB               	clrf	___awdiv@counter
   884  00C8  0AAB               	incf	___awdiv@counter,f
   885  00C9  28D5               	goto	l860
   886  00CA                     l856:
   887  00CA  3001               	movlw	1
   888  00CB                     u315:
   889  00CB  1003               	clrc
   890  00CC  0DA6               	rlf	___awdiv@divisor,f
   891  00CD  0DA7               	rlf	___awdiv@divisor+1,f
   892  00CE  3EFF               	addlw	-1
   893  00CF  1D03               	skipz
   894  00D0  28CB               	goto	u315
   895  00D1                     l858:
   896  00D1  3001               	movlw	1
   897  00D2  00AA               	movwf	??___awdiv
   898  00D3  082A               	movf	??___awdiv,w
   899  00D4  07AB               	addwf	___awdiv@counter,f
   900  00D5                     l860:
   901  00D5  1FA7               	btfss	___awdiv@divisor+1,7
   902  00D6  28D8               	goto	u321
   903  00D7  28D9               	goto	u320
   904  00D8                     u321:
   905  00D8  28CA               	goto	l856
   906  00D9                     u320:
   907  00D9                     l862:
   908  00D9  3001               	movlw	1
   909  00DA                     u335:
   910  00DA  1003               	clrc
   911  00DB  0DAD               	rlf	___awdiv@quotient,f
   912  00DC  0DAE               	rlf	___awdiv@quotient+1,f
   913  00DD  3EFF               	addlw	-1
   914  00DE  1D03               	skipz
   915  00DF  28DA               	goto	u335
   916  00E0  0827               	movf	___awdiv@divisor+1,w
   917  00E1  0229               	subwf	___awdiv@dividend+1,w
   918  00E2  1D03               	skipz
   919  00E3  28E6               	goto	u345
   920  00E4  0826               	movf	___awdiv@divisor,w
   921  00E5  0228               	subwf	___awdiv@dividend,w
   922  00E6                     u345:
   923  00E6  1C03               	skipc
   924  00E7  28E9               	goto	u341
   925  00E8  28EA               	goto	u340
   926  00E9                     u341:
   927  00E9  28F1               	goto	l868
   928  00EA                     u340:
   929  00EA                     l864:
   930  00EA  0826               	movf	___awdiv@divisor,w
   931  00EB  02A8               	subwf	___awdiv@dividend,f
   932  00EC  0827               	movf	___awdiv@divisor+1,w
   933  00ED  1C03               	skipc
   934  00EE  03A9               	decf	___awdiv@dividend+1,f
   935  00EF  02A9               	subwf	___awdiv@dividend+1,f
   936  00F0                     l866:
   937  00F0  142D               	bsf	___awdiv@quotient,0
   938  00F1                     l868:
   939  00F1  3001               	movlw	1
   940  00F2                     u355:
   941  00F2  1003               	clrc
   942  00F3  0CA7               	rrf	___awdiv@divisor+1,f
   943  00F4  0CA6               	rrf	___awdiv@divisor,f
   944  00F5  3EFF               	addlw	-1
   945  00F6  1D03               	skipz
   946  00F7  28F2               	goto	u355
   947  00F8                     l870:
   948  00F8  3001               	movlw	1
   949  00F9  02AB               	subwf	___awdiv@counter,f
   950  00FA  1D03               	btfss	3,2
   951  00FB  28FD               	goto	u361
   952  00FC  28FE               	goto	u360
   953  00FD                     u361:
   954  00FD  28D9               	goto	l862
   955  00FE                     u360:
   956  00FE                     l872:
   957  00FE  082C               	movf	___awdiv@sign,w
   958  00FF  1903               	btfsc	3,2
   959  0100  2902               	goto	u371
   960  0101  2903               	goto	u370
   961  0102                     u371:
   962  0102  2908               	goto	l876
   963  0103                     u370:
   964  0103                     l874:
   965  0103  09AD               	comf	___awdiv@quotient,f
   966  0104  09AE               	comf	___awdiv@quotient+1,f
   967  0105  0AAD               	incf	___awdiv@quotient,f
   968  0106  1903               	skipnz
   969  0107  0AAE               	incf	___awdiv@quotient+1,f
   970  0108                     l876:
   971  0108  082E               	movf	___awdiv@quotient+1,w
   972  0109  00A7               	movwf	?___awdiv+1
   973  010A  082D               	movf	___awdiv@quotient,w
   974  010B  00A6               	movwf	?___awdiv
   975  010C                     l309:
   976  010C  0008               	return
   977  010D                     __end_of___awdiv:
   978                           
   979                           	psect	text4
   980  010D                     __ptext4:	
   981 ;; *************** function _isr *****************
   982 ;; Defined at:
   983 ;;		line 54 in file "laba8.c"
   984 ;; Parameters:    Size  Location     Type
   985 ;;		None
   986 ;; Auto vars:     Size  Location     Type
   987 ;;		None
   988 ;; Return value:  Size  Location     Type
   989 ;;                  1    wreg      void 
   990 ;; Registers used:
   991 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   992 ;; Tracked objects:
   993 ;;		On entry : 0/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   997 ;;      Params:         0       0       0       0       0
   998 ;;      Locals:         0       0       0       0       0
   999 ;;      Temps:          5       0       0       0       0
  1000 ;;      Totals:         5       0       0       0       0
  1001 ;;Total ram usage:        5 bytes
  1002 ;; Hardware stack levels used:    2
  1003 ;; This function calls:
  1004 ;;		Nothing
  1005 ;; This function is called by:
  1006 ;;		Interrupt level 1
  1007 ;; This function uses a non-reentrant model
  1008 ;;
  1009                           
  1010                           
  1011                           ;psect for function _isr
  1012  010D                     _isr:
  1013  010D                     i1l880:
  1014                           
  1015                           ;laba8.c: 56:     if (T0IF == 1) {
  1016  010D  1D0B               	btfss	11,2	;volatile
  1017  010E  2910               	goto	u38_21
  1018  010F  2911               	goto	u38_20
  1019  0110                     u38_21:
  1020  0110  2953               	goto	i1l62
  1021  0111                     u38_20:
  1022  0111                     i1l882:
  1023                           
  1024                           ;laba8.c: 58:         RD0 = 0;
  1025  0111  1008               	bcf	8,0	;volatile
  1026                           
  1027                           ;laba8.c: 59:         RD1 = 0;
  1028  0112  1088               	bcf	8,1	;volatile
  1029                           
  1030                           ;laba8.c: 60:         RD2 = 0;
  1031  0113  1108               	bcf	8,2	;volatile
  1032  0114                     i1l884:
  1033                           
  1034                           ;laba8.c: 61:         if (turno == 3) {
  1035  0114  3003               	movlw	3
  1036  0115  0675               	xorwf	_turno,w
  1037  0116  1D03               	btfss	3,2
  1038  0117  2919               	goto	u39_21
  1039  0118  291A               	goto	u39_20
  1040  0119                     u39_21:
  1041  0119  2925               	goto	i1l890
  1042  011A                     u39_20:
  1043  011A                     i1l886:
  1044                           
  1045                           ;laba8.c: 62:             PORTC = (num_display[centena]);
  1046  011A  0878               	movf	_centena,w
  1047  011B  3E01               	addlw	low ((_num_display-__stringbase)| (0+32768))
  1048  011C  0084               	movwf	4
  1049  011D  120A  118A  219C  120A  118A  	fcall	stringdir
  1050  0122  0087               	movwf	7	;volatile
  1051  0123                     i1l888:
  1052                           
  1053                           ;laba8.c: 63:             RD0 = 1;
  1054  0123  1408               	bsf	8,0	;volatile
  1055                           
  1056                           ;laba8.c: 64:         }
  1057  0124  2945               	goto	i1l902
  1058  0125                     i1l890:
  1059  0125  3002               	movlw	2
  1060  0126  0675               	xorwf	_turno,w
  1061  0127  1D03               	btfss	3,2
  1062  0128  292A               	goto	u40_21
  1063  0129  292B               	goto	u40_20
  1064  012A                     u40_21:
  1065  012A  2936               	goto	i1l896
  1066  012B                     u40_20:
  1067  012B                     i1l892:
  1068                           
  1069                           ;laba8.c: 66:             PORTC = (num_display[decena]);
  1070  012B  0877               	movf	_decena,w
  1071  012C  3E01               	addlw	low ((_num_display-__stringbase)| (0+32768))
  1072  012D  0084               	movwf	4
  1073  012E  120A  118A  219C  120A  118A  	fcall	stringdir
  1074  0133  0087               	movwf	7	;volatile
  1075  0134                     i1l894:
  1076                           
  1077                           ;laba8.c: 67:             RD1 = 1;
  1078  0134  1488               	bsf	8,1	;volatile
  1079                           
  1080                           ;laba8.c: 68:         }
  1081  0135  2945               	goto	i1l902
  1082  0136                     i1l896:
  1083  0136  0375               	decf	_turno,w
  1084  0137  1D03               	btfss	3,2
  1085  0138  293A               	goto	u41_21
  1086  0139  293B               	goto	u41_20
  1087  013A                     u41_21:
  1088  013A  2945               	goto	i1l902
  1089  013B                     u41_20:
  1090  013B                     i1l898:
  1091                           
  1092                           ;laba8.c: 70:             PORTC = (num_display[unidad]);
  1093  013B  0833               	movf	_unidad,w
  1094  013C  3E01               	addlw	low ((_num_display-__stringbase)| (0+32768))
  1095  013D  0084               	movwf	4
  1096  013E  120A  118A  219C  120A  118A  	fcall	stringdir
  1097  0143  0087               	movwf	7	;volatile
  1098  0144                     i1l900:
  1099                           
  1100                           ;laba8.c: 71:             RD2 = 1;
  1101  0144  1508               	bsf	8,2	;volatile
  1102  0145                     i1l902:
  1103                           
  1104                           ;laba8.c: 74:         turno--;
  1105  0145  3001               	movlw	1
  1106  0146  02F5               	subwf	_turno,f
  1107  0147                     i1l904:
  1108                           
  1109                           ;laba8.c: 75:         if (turno == 0){
  1110  0147  0875               	movf	_turno,w
  1111  0148  1D03               	btfss	3,2
  1112  0149  294B               	goto	u42_21
  1113  014A  294C               	goto	u42_20
  1114  014B                     u42_21:
  1115  014B  2950               	goto	i1l908
  1116  014C                     u42_20:
  1117  014C                     i1l906:
  1118                           
  1119                           ;laba8.c: 76:             turno = 3;
  1120  014C  3003               	movlw	3
  1121  014D  00F0               	movwf	??_isr
  1122  014E  0870               	movf	??_isr,w
  1123  014F  00F5               	movwf	_turno
  1124  0150                     i1l908:
  1125                           
  1126                           ;laba8.c: 79:         INTCONbits.T0IF = 0;
  1127  0150  110B               	bcf	11,2	;volatile
  1128                           
  1129                           ;laba8.c: 80:         TMR0 = 100;;
  1130  0151  3064               	movlw	100
  1131  0152  0081               	movwf	1	;volatile
  1132  0153                     i1l62:
  1133  0153  0874               	movf	??_isr+4,w
  1134  0154  00FF               	movwf	btemp+1
  1135  0155  0873               	movf	??_isr+3,w
  1136  0156  008A               	movwf	10
  1137  0157  0872               	movf	??_isr+2,w
  1138  0158  0084               	movwf	4
  1139  0159  0E71               	swapf	??_isr+1,w
  1140  015A  0083               	movwf	3
  1141  015B  0EFE               	swapf	btemp,f
  1142  015C  0E7E               	swapf	btemp,w
  1143  015D  0009               	retfie
  1144  015E                     __end_of_isr:
  1145  007E                     btemp	set	126	;btemp
  1146  007E                     wtemp0	set	126
  1147                           
  1148                           	psect	intentry
  1149  0004                     __pintentry:	
  1150                           ;incstack = 0
  1151                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath]
  1152                           
  1153  0004                     interrupt_function:
  1154  007E                     saved_w	set	btemp
  1155  0004  00FE               	movwf	btemp
  1156  0005  0E03               	swapf	3,w
  1157  0006  00F1               	movwf	??_isr+1
  1158  0007  0804               	movf	4,w
  1159  0008  00F2               	movwf	??_isr+2
  1160  0009  080A               	movf	10,w
  1161  000A  00F3               	movwf	??_isr+3
  1162  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1163  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1164  000D  087F               	movf	btemp+1,w
  1165  000E  00F4               	movwf	??_isr+4
  1166  000F  120A  118A  290D   	ljmp	_isr
  1167                           
  1168                           	psect	config
  1169                           
  1170                           ;Config register CONFIG1 @ 0x2007
  1171                           ;	Oscillator Selection bits
  1172                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1173                           ;	Watchdog Timer Enable bit
  1174                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1175                           ;	Power-up Timer Enable bit
  1176                           ;	PWRTE = OFF, PWRT disabled
  1177                           ;	RE3/MCLR pin function select bit
  1178                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1179                           ;	Code Protection bit
  1180                           ;	CP = OFF, Program memory code protection is disabled
  1181                           ;	Data Code Protection bit
  1182                           ;	CPD = OFF, Data memory code protection is disabled
  1183                           ;	Brown Out Reset Selection bits
  1184                           ;	BOREN = OFF, BOR disabled
  1185                           ;	Internal External Switchover bit
  1186                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1187                           ;	Fail-Safe Clock Monitor Enabled bit
  1188                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1189                           ;	Low Voltage Programming Enable bit
  1190                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1191                           ;	In-Circuit Debugger Mode bit
  1192                           ;	DEBUG = 0x1, unprogrammed default
  1193  2007                     	org	8199
  1194  2007  30D4               	dw	12500
  1195                           
  1196                           ;Config register CONFIG2 @ 0x2008
  1197                           ;	Brown-out Reset Selection bit
  1198                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1199                           ;	Flash Program Memory Self Write Enable bits
  1200                           ;	WRT = OFF, Write protection off
  1201  2008                     	org	8200
  1202  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         1
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     19      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv
    ___awdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1236
                                             15 BANK0      4     4      0
                            ___awdiv
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     316
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___wmul (ARG)
   ___bmul
   ___wmul

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     13      14       5       25.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1E      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Apr 19 16:53:58 2021

                      pc 0002           ___bmul@product 0022             ___awdiv@sign 002C  
                     fsr 0004      ___wmul@multiplicand 0022                      l156 016C  
                    l309 010C                      l182 019B                      l158 0184  
                    l840 00AB                      l850 00BF                      l842 00B0  
                    l860 00D5                      l852 00C1                      l844 00B2  
                    l836 00A4                      l870 00F8                      l862 00D9  
                    l854 00C7                      l846 00B6                      l838 00A7  
                    l864 00EA                      l856 00CA                      l872 00FE  
                    l848 00BB                      l960 0173                      l874 0103  
                    l866 00F0                      l858 00D1                      l970 0189  
                    l962 017A                      l954 015E                      l876 0108  
                    l868 00F1                      l972 018D                      l964 0180  
                    l956 0162                      l974 0191                      l958 0166  
                    l990 0025                      l982 001A                      l976 0193  
                    l968 0188                      l992 0026                      l984 0021  
                    l978 019A                      l994 0027                      l986 0023  
                    l996 0028                      l988 0024                      l998 0029  
                    _RD0 0040                      _RD1 0041                      _RD2 0042  
                    u300 00C7                      u301 00C6                      u320 00D9  
                    u321 00D8                      u315 00CB                      u340 00EA  
                    u341 00E9                      u430 0166                      u335 00DA  
                    u431 0165                      u360 00FE                      u280 00AB  
                    u361 00FD                      u345 00E6                      u281 00AA  
                    u370 0103                      u290 00B6                      u371 0102  
                    u355 00F2                      u291 00B5                      u460 0180  
                    u461 017F                      u445 016D                      u470 018D  
                    u471 018C                      u455 0174                      u480 019A  
                    u481 0199                      _isr 010D                      fsr0 0004  
                   l1000 002A                     l1010 0032                     l1002 002B  
                   l1020 0044                     l1012 0033                     l1004 002C  
                   l1022 005A                     l1014 0034                     l1006 002D  
                   l1024 0082                     l1016 003C                     l1008 002E  
                   l1018 0040                     ?_isr 0070                     _T0IF 005A  
                   i1l62 0153                     _TMR0 0001                     _main 001A  
                   btemp 007E                     start 0012        ___bmul@multiplier 0023  
                  ??_isr 0070                    ?_main 0070          __end_of___awdiv 010D  
                  _ANSEL 0188          ___awdiv@divisor 0026                    i1l900 0144  
                  i1l902 0145                    i1l904 0147                    i1l906 014C  
                  i1l908 0150                    i1l880 010D                    i1l890 0125  
                  i1l882 0111                    i1l892 012B                    i1l884 0114  
                  i1l894 0134                    i1l886 011A                    i1l896 0136  
                  i1l888 0123                    i1l898 013B          ___awdiv@counter 002B  
                  u40_20 012B                    u40_21 012A                    u41_20 013B  
                  u41_21 013A                    u42_20 014C                    u42_21 014B  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    u38_20 0111                    u38_21 0110  
                  u39_20 011A                    u39_21 0119                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _turno 0075                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0015             __end_of_main 00A4  
                 ??_main 002F         ___awdiv@dividend 0028                   _ANSELH 0189  
                 ___bmul 0185                   ___wmul 015E                ??___awdiv 002A  
                 _decena 0077         ___awdiv@quotient 002D                   _unidad 0033  
                 saved_w 007E  __end_of__initialization 0016      ___bmul@multiplicand 0020  
         __pcstackCOMMON 0070           _OPTION_REGbits 0081               __pnvCOMMON 0075  
             __pmaintext 001A                  ?___bmul 0020                  ?___wmul 0020  
             __pintentry 0004               __stringtab 019C          __size_of___bmul 0017  
                ___awdiv 00A4          __size_of___wmul 0027                  _centena 0078  
                __ptext1 015E                  __ptext2 0185                  __ptext3 00A4  
                __ptext4 010D                  _divisor 0079             __size_of_isr 0051  
   end_of_initialization 0016           __end_of___bmul 019C           __end_of___wmul 0185  
    start_initialization 0015              __end_of_isr 015E                 ??___bmul 0021  
               ??___wmul 0024              __pbssCOMMON 0079                ___latbits 0002  
          __pcstackBANK0 0020                __pnvBANK0 0033                 ?___awdiv 0026  
              _dividendo 0076                __pstrings 019C        interrupt_function 0004  
         ___wmul@product 0024              __stringbase 01A1        ___wmul@multiplier 0020  
       __size_of___awdiv 0069       __end_of__stringtab 01A2      __end_of_num_display 01AC  
          __size_of_main 008A               _INTCONbits 000B                 intlevel1 0000  
              stringcode 019C               _OSCCONbits 008F              _num_display 01A2  
               stringdir 019C                 stringtab 019C  
