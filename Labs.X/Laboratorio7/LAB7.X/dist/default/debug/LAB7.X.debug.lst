

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Apr 13 17:37:20 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209                           
   210                           	psect	strings
   211  01C9                     __pstrings:
   212  01C9                     stringtab:
   213  01C9                     __stringtab:
   214  01C9                     stringcode:	
   215                           ;	String table - string pointers are 1 byte each
   216                           
   217  01C9                     stringdir:
   218  01C9  3001               	movlw	high stringdir
   219  01CA  008A               	movwf	10
   220  01CB  0804               	movf	4,w
   221  01CC  0A84               	incf	4,f
   222  01CD  0782               	addwf	2,f
   223  01CE                     __stringbase:
   224  01CE  3400               	retlw	0
   225  01CF                     __end_of__stringtab:
   226  01CF                     _num_display:
   227  01CF  34FC               	retlw	252
   228  01D0  3460               	retlw	96
   229  01D1  34DA               	retlw	218
   230  01D2  34F2               	retlw	242
   231  01D3  3466               	retlw	102
   232  01D4  34B6               	retlw	182
   233  01D5  34BE               	retlw	190
   234  01D6  34E0               	retlw	224
   235  01D7  34FE               	retlw	254
   236  01D8  34F6               	retlw	246
   237  01D9                     __end_of_num_display:
   238                           
   239                           	psect	nvCOMMON
   240  0075                     __pnvCOMMON:
   241  0075                     _turno:
   242  0075                     	ds	2
   243  0077                     _centena:
   244  0077                     	ds	2
   245                           
   246                           	psect	nvBANK0
   247  0033                     __pnvBANK0:
   248  0033                     _dividendo:
   249  0033                     	ds	2
   250  0035                     _unidad:
   251  0035                     	ds	2
   252  0037                     _decena:
   253  0037                     	ds	2
   254  0005                     _PORTA	set	5
   255  0001                     _TMR0	set	1
   256  000B                     _INTCONbits	set	11
   257  0007                     _PORTC	set	7
   258  0006                     _PORTB	set	6
   259  0008                     _PORTD	set	8
   260  0031                     _RB1	set	49
   261  0030                     _RB0	set	48
   262  0058                     _RBIF	set	88
   263  0037                     _RB7	set	55
   264  0036                     _RB6	set	54
   265  0035                     _RB5	set	53
   266  005A                     _T0IF	set	90
   267  0096                     _IOCBbits	set	150
   268  008F                     _OSCCONbits	set	143
   269  0095                     _WPUBbits	set	149
   270  0081                     _OPTION_REGbits	set	129
   271  0088                     _TRISD	set	136
   272  0087                     _TRISC	set	135
   273  0086                     _TRISB	set	134
   274  0085                     _TRISA	set	133
   275  0189                     _ANSELH	set	393
   276  0188                     _ANSEL	set	392
   277                           
   278                           	psect	cinit
   279  0015                     start_initialization:	
   280                           ; #config settings
   281                           
   282  0015                     __initialization:
   283                           
   284                           ; Clear objects allocated to BANK0
   285  0015  1283               	bcf	3,5	;RP0=0, select bank0
   286  0016  1303               	bcf	3,6	;RP1=0, select bank0
   287  0017  01B9               	clrf	__pbssBANK0& (0+127)
   288  0018  01BA               	clrf	(__pbssBANK0+1)& (0+127)
   289  0019                     end_of_initialization:	
   290                           ;End of C runtime variable initialization code
   291                           
   292  0019                     __end_of__initialization:
   293  0019  0183               	clrf	3
   294  001A  120A  118A  281D   	ljmp	_main	;jump to C main() function
   295                           
   296                           	psect	bssBANK0
   297  0039                     __pbssBANK0:
   298  0039                     _divisor:
   299  0039                     	ds	2
   300                           
   301                           	psect	cstackCOMMON
   302  0070                     __pcstackCOMMON:
   303  0070                     ?_isr:
   304  0070                     ??_isr:	
   305                           ; 1 bytes @ 0x0
   306                           
   307  0070                     ?_main:	
   308                           ; 1 bytes @ 0x0
   309                           
   310                           
   311                           ; 1 bytes @ 0x0
   312  0070                     	ds	5
   313  0075                     ??___wmul:
   314                           
   315                           	psect	cstackBANK0
   316  0020                     __pcstackBANK0:	
   317                           ; 1 bytes @ 0x5
   318                           
   319  0020                     ?___wmul:
   320  0020                     ___wmul@multiplier:	
   321                           ; 2 bytes @ 0x0
   322                           
   323                           
   324                           ; 2 bytes @ 0x0
   325  0020                     	ds	2
   326  0022                     ___wmul@multiplicand:
   327                           
   328                           ; 2 bytes @ 0x2
   329  0022                     	ds	2
   330  0024                     ___wmul@product:
   331                           
   332                           ; 2 bytes @ 0x4
   333  0024                     	ds	2
   334  0026                     ?___awdiv:
   335  0026                     ___awdiv@divisor:	
   336                           ; 2 bytes @ 0x6
   337                           
   338                           
   339                           ; 2 bytes @ 0x6
   340  0026                     	ds	2
   341  0028                     ___awdiv@dividend:
   342                           
   343                           ; 2 bytes @ 0x8
   344  0028                     	ds	2
   345  002A                     ??___awdiv:
   346                           
   347                           ; 1 bytes @ 0xA
   348  002A                     	ds	1
   349  002B                     ___awdiv@counter:
   350                           
   351                           ; 1 bytes @ 0xB
   352  002B                     	ds	1
   353  002C                     ___awdiv@sign:
   354                           
   355                           ; 1 bytes @ 0xC
   356  002C                     	ds	1
   357  002D                     ___awdiv@quotient:
   358                           
   359                           ; 2 bytes @ 0xD
   360  002D                     	ds	2
   361  002F                     ??_main:
   362                           
   363                           ; 1 bytes @ 0xF
   364  002F                     	ds	4
   365                           
   366                           	psect	maintext
   367  001D                     __pmaintext:	
   368 ;;
   369 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   370 ;;
   371 ;; *************** function _main *****************
   372 ;; Defined at:
   373 ;;		line 89 in file "lab7.c"
   374 ;; Parameters:    Size  Location     Type
   375 ;;		None
   376 ;; Auto vars:     Size  Location     Type
   377 ;;		None
   378 ;; Return value:  Size  Location     Type
   379 ;;                  1    wreg      void 
   380 ;; Registers used:
   381 ;;		wreg, status,2, status,0, pclath, cstack
   382 ;; Tracked objects:
   383 ;;		On entry : B00/0
   384 ;;		On exit  : 0/0
   385 ;;		Unchanged: 0/0
   386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   387 ;;      Params:         0       0       0       0       0
   388 ;;      Locals:         0       0       0       0       0
   389 ;;      Temps:          0       4       0       0       0
   390 ;;      Totals:         0       4       0       0       0
   391 ;;Total ram usage:        4 bytes
   392 ;; Hardware stack levels required when called:    3
   393 ;; This function calls:
   394 ;;		___awdiv
   395 ;;		___wmul
   396 ;; This function is called by:
   397 ;;		Startup code after reset
   398 ;; This function uses a non-reentrant model
   399 ;;
   400                           
   401                           
   402                           ;psect for function _main
   403  001D                     _main:
   404  001D                     l1011:	
   405                           ;incstack = 0
   406                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   407                           
   408                           
   409                           ;lab7.c: 91:     ANSEL = 0x00;
   410  001D  1683               	bsf	3,5	;RP0=1, select bank3
   411  001E  1703               	bsf	3,6	;RP1=1, select bank3
   412  001F  0188               	clrf	8	;volatile
   413                           
   414                           ;lab7.c: 92:     ANSELH = 0x00;
   415  0020  0189               	clrf	9	;volatile
   416                           
   417                           ;lab7.c: 94:     TRISA = 0x00;
   418  0021  1683               	bsf	3,5	;RP0=1, select bank1
   419  0022  1303               	bcf	3,6	;RP1=0, select bank1
   420  0023  0185               	clrf	5	;volatile
   421  0024                     l1013:
   422                           
   423                           ;lab7.c: 95:     TRISB = 0b00000011;
   424  0024  3003               	movlw	3
   425  0025  0086               	movwf	6	;volatile
   426  0026                     l1015:
   427                           
   428                           ;lab7.c: 96:     TRISC = 0x00;
   429  0026  0187               	clrf	7	;volatile
   430  0027                     l1017:
   431                           
   432                           ;lab7.c: 97:     TRISD = 0x00;
   433  0027  0188               	clrf	8	;volatile
   434  0028                     l1019:
   435                           
   436                           ;lab7.c: 99:     OPTION_REGbits.nRBPU = 0;
   437  0028  1381               	bcf	1,7	;volatile
   438  0029                     l1021:
   439                           
   440                           ;lab7.c: 100:     WPUBbits.WPUB0 = 1;
   441  0029  1415               	bsf	21,0	;volatile
   442  002A                     l1023:
   443                           
   444                           ;lab7.c: 101:     WPUBbits.WPUB1 = 1;
   445  002A  1495               	bsf	21,1	;volatile
   446  002B                     l1025:
   447                           
   448                           ;lab7.c: 103:     OSCCONbits.IRCF2 = 1;
   449  002B  170F               	bsf	15,6	;volatile
   450  002C                     l1027:
   451                           
   452                           ;lab7.c: 104:     OSCCONbits.IRCF1 = 1;
   453  002C  168F               	bsf	15,5	;volatile
   454  002D                     l1029:
   455                           
   456                           ;lab7.c: 105:     OSCCONbits.IRCF0 = 1;
   457  002D  160F               	bsf	15,4	;volatile
   458  002E                     l1031:
   459                           
   460                           ;lab7.c: 106:     OSCCONbits.SCS = 1;
   461  002E  140F               	bsf	15,0	;volatile
   462  002F                     l1033:
   463                           
   464                           ;lab7.c: 108:     OPTION_REGbits.T0CS = 0;
   465  002F  1281               	bcf	1,5	;volatile
   466  0030                     l1035:
   467                           
   468                           ;lab7.c: 109:     OPTION_REGbits.PSA = 0;
   469  0030  1181               	bcf	1,3	;volatile
   470  0031                     l1037:
   471                           
   472                           ;lab7.c: 110:     OPTION_REGbits.PS2 = 1;
   473  0031  1501               	bsf	1,2	;volatile
   474  0032                     l1039:
   475                           
   476                           ;lab7.c: 111:     OPTION_REGbits.PS1 = 0;
   477  0032  1081               	bcf	1,1	;volatile
   478  0033                     l1041:
   479                           
   480                           ;lab7.c: 112:     OPTION_REGbits.PS0 = 1;
   481  0033  1401               	bsf	1,0	;volatile
   482  0034                     l1043:
   483                           
   484                           ;lab7.c: 113:     TMR0 = 100;
   485  0034  3064               	movlw	100
   486  0035  1283               	bcf	3,5	;RP0=0, select bank0
   487  0036  1303               	bcf	3,6	;RP1=0, select bank0
   488  0037  0081               	movwf	1	;volatile
   489  0038                     l1045:
   490                           
   491                           ;lab7.c: 115:     IOCBbits.IOCB0 = 1;
   492  0038  1683               	bsf	3,5	;RP0=1, select bank1
   493  0039  1303               	bcf	3,6	;RP1=0, select bank1
   494  003A  1416               	bsf	22,0	;volatile
   495  003B                     l1047:
   496                           
   497                           ;lab7.c: 116:     IOCBbits.IOCB1 = 1;
   498  003B  1496               	bsf	22,1	;volatile
   499  003C                     l1049:
   500                           
   501                           ;lab7.c: 117:     RBIF = 0;
   502  003C  100B               	bcf	11,0	;volatile
   503  003D                     l1051:
   504                           
   505                           ;lab7.c: 119:     INTCONbits.GIE = 1;
   506  003D  178B               	bsf	11,7	;volatile
   507  003E                     l1053:
   508                           
   509                           ;lab7.c: 120:     INTCONbits.T0IE = 1;
   510  003E  168B               	bsf	11,5	;volatile
   511  003F                     l1055:
   512                           
   513                           ;lab7.c: 121:     INTCONbits.T0IF = 0;
   514  003F  110B               	bcf	11,2	;volatile
   515  0040                     l1057:
   516                           
   517                           ;lab7.c: 122:     INTCONbits.RBIE = 1;
   518  0040  158B               	bsf	11,3	;volatile
   519  0041                     l1059:
   520                           
   521                           ;lab7.c: 123:     INTCONbits.RBIF = 0;
   522  0041  100B               	bcf	11,0	;volatile
   523                           
   524                           ;lab7.c: 125:     PORTA = 0;
   525  0042  1283               	bcf	3,5	;RP0=0, select bank0
   526  0043  1303               	bcf	3,6	;RP1=0, select bank0
   527  0044  0185               	clrf	5	;volatile
   528                           
   529                           ;lab7.c: 126:     PORTB = 0;
   530  0045  0186               	clrf	6	;volatile
   531                           
   532                           ;lab7.c: 127:     PORTC = 0;
   533  0046  0187               	clrf	7	;volatile
   534                           
   535                           ;lab7.c: 128:     PORTD = 0;
   536  0047  0188               	clrf	8	;volatile
   537                           
   538                           ;lab7.c: 130:     centena = 0;
   539  0048  01F7               	clrf	_centena
   540  0049  01F8               	clrf	_centena+1
   541                           
   542                           ;lab7.c: 131:     decena = 0;
   543  004A  01B7               	clrf	_decena
   544  004B  01B8               	clrf	_decena+1
   545                           
   546                           ;lab7.c: 132:     unidad = 0;
   547  004C  01B5               	clrf	_unidad
   548  004D  01B6               	clrf	_unidad+1
   549  004E                     l1061:
   550                           
   551                           ;lab7.c: 133:     turno = 3;
   552  004E  3003               	movlw	3
   553  004F  00F5               	movwf	_turno
   554  0050  3000               	movlw	0
   555  0051  00F6               	movwf	_turno+1
   556  0052                     l1063:
   557                           
   558                           ;lab7.c: 138:         dividendo = PORTA;
   559  0052  0805               	movf	5,w	;volatile
   560  0053  00AF               	movwf	??_main
   561  0054  01B0               	clrf	??_main+1
   562  0055  082F               	movf	??_main,w
   563  0056  00B3               	movwf	_dividendo
   564  0057  0830               	movf	??_main+1,w
   565  0058  00B4               	movwf	_dividendo+1
   566  0059                     l1065:
   567                           
   568                           ;lab7.c: 139:         centena = dividendo / 100;
   569  0059  3064               	movlw	100
   570  005A  00A6               	movwf	___awdiv@divisor
   571  005B  3000               	movlw	0
   572  005C  00A7               	movwf	___awdiv@divisor+1
   573  005D  0834               	movf	_dividendo+1,w
   574  005E  00A9               	movwf	___awdiv@dividend+1
   575  005F  0833               	movf	_dividendo,w
   576  0060  00A8               	movwf	___awdiv@dividend
   577  0061  120A  118A  2139  120A  118A  	fcall	___awdiv
   578  0066  1283               	bcf	3,5	;RP0=0, select bank0
   579  0067  1303               	bcf	3,6	;RP1=0, select bank0
   580  0068  0827               	movf	?___awdiv+1,w
   581  0069  00F8               	movwf	_centena+1
   582  006A  0826               	movf	?___awdiv,w
   583  006B  00F7               	movwf	_centena
   584  006C                     l1067:
   585                           
   586                           ;lab7.c: 140:         decena = (dividendo - (100 * centena))/10;
   587  006C  300A               	movlw	10
   588  006D  00A6               	movwf	___awdiv@divisor
   589  006E  3000               	movlw	0
   590  006F  00A7               	movwf	___awdiv@divisor+1
   591  0070  0878               	movf	_centena+1,w
   592  0071  00A1               	movwf	___wmul@multiplier+1
   593  0072  0877               	movf	_centena,w
   594  0073  00A0               	movwf	___wmul@multiplier
   595  0074  309C               	movlw	156
   596  0075  00A2               	movwf	___wmul@multiplicand
   597  0076  30FF               	movlw	255
   598  0077  00A3               	movwf	___wmul@multiplicand+1
   599  0078  120A  118A  21A2  120A  118A  	fcall	___wmul
   600  007D  1283               	bcf	3,5	;RP0=0, select bank0
   601  007E  1303               	bcf	3,6	;RP1=0, select bank0
   602  007F  0833               	movf	_dividendo,w
   603  0080  0720               	addwf	?___wmul,w
   604  0081  00A8               	movwf	___awdiv@dividend
   605  0082  0834               	movf	_dividendo+1,w
   606  0083  1803               	skipnc
   607  0084  0A34               	incf	_dividendo+1,w
   608  0085  0721               	addwf	?___wmul+1,w
   609  0086  00A9               	movwf	___awdiv@dividend+1
   610  0087  120A  118A  2139  120A  118A  	fcall	___awdiv
   611  008C  1283               	bcf	3,5	;RP0=0, select bank0
   612  008D  1303               	bcf	3,6	;RP1=0, select bank0
   613  008E  0827               	movf	?___awdiv+1,w
   614  008F  00B8               	movwf	_decena+1
   615  0090  0826               	movf	?___awdiv,w
   616  0091  00B7               	movwf	_decena
   617  0092                     l1069:
   618                           
   619                           ;lab7.c: 141:         unidad = dividendo - (100 * centena) - (decena * 10);
   620  0092  0878               	movf	_centena+1,w
   621  0093  00A1               	movwf	___wmul@multiplier+1
   622  0094  0877               	movf	_centena,w
   623  0095  00A0               	movwf	___wmul@multiplier
   624  0096  309C               	movlw	156
   625  0097  00A2               	movwf	___wmul@multiplicand
   626  0098  30FF               	movlw	255
   627  0099  00A3               	movwf	___wmul@multiplicand+1
   628  009A  120A  118A  21A2  120A  118A  	fcall	___wmul
   629  009F  1283               	bcf	3,5	;RP0=0, select bank0
   630  00A0  1303               	bcf	3,6	;RP1=0, select bank0
   631  00A1  0820               	movf	?___wmul,w
   632  00A2  00AF               	movwf	??_main
   633  00A3  0821               	movf	?___wmul+1,w
   634  00A4  00B0               	movwf	??_main+1
   635  00A5  0838               	movf	_decena+1,w
   636  00A6  00A1               	movwf	___wmul@multiplier+1
   637  00A7  0837               	movf	_decena,w
   638  00A8  00A0               	movwf	___wmul@multiplier
   639  00A9  30F6               	movlw	246
   640  00AA  00A2               	movwf	___wmul@multiplicand
   641  00AB  30FF               	movlw	255
   642  00AC  00A3               	movwf	___wmul@multiplicand+1
   643  00AD  120A  118A  21A2  120A  118A  	fcall	___wmul
   644  00B2  1283               	bcf	3,5	;RP0=0, select bank0
   645  00B3  1303               	bcf	3,6	;RP1=0, select bank0
   646  00B4  0820               	movf	?___wmul,w
   647  00B5  072F               	addwf	??_main,w
   648  00B6  00B1               	movwf	??_main+2
   649  00B7  0821               	movf	?___wmul+1,w
   650  00B8  1803               	skipnc
   651  00B9  0A21               	incf	?___wmul+1,w
   652  00BA  0730               	addwf	??_main+1,w
   653  00BB  00B2               	movwf	??_main+3
   654  00BC  0833               	movf	_dividendo,w
   655  00BD  0731               	addwf	??_main+2,w
   656  00BE  00B5               	movwf	_unidad
   657  00BF  0834               	movf	_dividendo+1,w
   658  00C0  1803               	skipnc
   659  00C1  0A34               	incf	_dividendo+1,w
   660  00C2  0732               	addwf	??_main+3,w
   661  00C3  00B6               	movwf	_unidad+1
   662  00C4  2852               	goto	l1063
   663  00C5  120A  118A  2812   	ljmp	start
   664  00C8                     __end_of_main:
   665                           
   666                           	psect	text1
   667  01A2                     __ptext1:	
   668 ;; *************** function ___wmul *****************
   669 ;; Defined at:
   670 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
   671 ;; Parameters:    Size  Location     Type
   672 ;;  multiplier      2    0[BANK0 ] unsigned int 
   673 ;;  multiplicand    2    2[BANK0 ] unsigned int 
   674 ;; Auto vars:     Size  Location     Type
   675 ;;  product         2    4[BANK0 ] unsigned int 
   676 ;; Return value:  Size  Location     Type
   677 ;;                  2    0[BANK0 ] unsigned int 
   678 ;; Registers used:
   679 ;;		wreg, status,2, status,0
   680 ;; Tracked objects:
   681 ;;		On entry : 0/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   685 ;;      Params:         0       4       0       0       0
   686 ;;      Locals:         0       2       0       0       0
   687 ;;      Temps:          0       0       0       0       0
   688 ;;      Totals:         0       6       0       0       0
   689 ;;Total ram usage:        6 bytes
   690 ;; Hardware stack levels used:    1
   691 ;; Hardware stack levels required when called:    2
   692 ;; This function calls:
   693 ;;		Nothing
   694 ;; This function is called by:
   695 ;;		_main
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699                           
   700                           ;psect for function ___wmul
   701  01A2                     ___wmul:
   702  01A2                     l997:	
   703                           ;incstack = 0
   704                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   705                           
   706  01A2  1283               	bcf	3,5	;RP0=0, select bank0
   707  01A3  1303               	bcf	3,6	;RP1=0, select bank0
   708  01A4  01A4               	clrf	___wmul@product
   709  01A5  01A5               	clrf	___wmul@product+1
   710  01A6                     l999:
   711  01A6  1C20               	btfss	___wmul@multiplier,0
   712  01A7  29A9               	goto	u451
   713  01A8  29AA               	goto	u450
   714  01A9                     u451:
   715  01A9  29B0               	goto	l171
   716  01AA                     u450:
   717  01AA                     l1001:
   718  01AA  0822               	movf	___wmul@multiplicand,w
   719  01AB  07A4               	addwf	___wmul@product,f
   720  01AC  1803               	skipnc
   721  01AD  0AA5               	incf	___wmul@product+1,f
   722  01AE  0823               	movf	___wmul@multiplicand+1,w
   723  01AF  07A5               	addwf	___wmul@product+1,f
   724  01B0                     l171:
   725  01B0  3001               	movlw	1
   726  01B1                     u465:
   727  01B1  1003               	clrc
   728  01B2  0DA2               	rlf	___wmul@multiplicand,f
   729  01B3  0DA3               	rlf	___wmul@multiplicand+1,f
   730  01B4  3EFF               	addlw	-1
   731  01B5  1D03               	skipz
   732  01B6  29B1               	goto	u465
   733  01B7                     l1003:
   734  01B7  3001               	movlw	1
   735  01B8                     u475:
   736  01B8  1003               	clrc
   737  01B9  0CA1               	rrf	___wmul@multiplier+1,f
   738  01BA  0CA0               	rrf	___wmul@multiplier,f
   739  01BB  3EFF               	addlw	-1
   740  01BC  1D03               	skipz
   741  01BD  29B8               	goto	u475
   742  01BE                     l1005:
   743  01BE  0820               	movf	___wmul@multiplier,w
   744  01BF  0421               	iorwf	___wmul@multiplier+1,w
   745  01C0  1D03               	btfss	3,2
   746  01C1  29C3               	goto	u481
   747  01C2  29C4               	goto	u480
   748  01C3                     u481:
   749  01C3  29A6               	goto	l999
   750  01C4                     u480:
   751  01C4                     l1007:
   752  01C4  0825               	movf	___wmul@product+1,w
   753  01C5  00A1               	movwf	?___wmul+1
   754  01C6  0824               	movf	___wmul@product,w
   755  01C7  00A0               	movwf	?___wmul
   756  01C8                     l173:
   757  01C8  0008               	return
   758  01C9                     __end_of___wmul:
   759                           
   760                           	psect	text2
   761  0139                     __ptext2:	
   762 ;; *************** function ___awdiv *****************
   763 ;; Defined at:
   764 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
   765 ;; Parameters:    Size  Location     Type
   766 ;;  divisor         2    6[BANK0 ] int 
   767 ;;  dividend        2    8[BANK0 ] int 
   768 ;; Auto vars:     Size  Location     Type
   769 ;;  quotient        2   13[BANK0 ] int 
   770 ;;  sign            1   12[BANK0 ] unsigned char 
   771 ;;  counter         1   11[BANK0 ] unsigned char 
   772 ;; Return value:  Size  Location     Type
   773 ;;                  2    6[BANK0 ] int 
   774 ;; Registers used:
   775 ;;		wreg, status,2, status,0
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   781 ;;      Params:         0       4       0       0       0
   782 ;;      Locals:         0       4       0       0       0
   783 ;;      Temps:          0       1       0       0       0
   784 ;;      Totals:         0       9       0       0       0
   785 ;;Total ram usage:        9 bytes
   786 ;; Hardware stack levels used:    1
   787 ;; Hardware stack levels required when called:    2
   788 ;; This function calls:
   789 ;;		Nothing
   790 ;; This function is called by:
   791 ;;		_main
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795                           
   796                           ;psect for function ___awdiv
   797  0139                     ___awdiv:
   798  0139                     l851:	
   799                           ;incstack = 0
   800                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   801                           
   802  0139  1283               	bcf	3,5	;RP0=0, select bank0
   803  013A  1303               	bcf	3,6	;RP1=0, select bank0
   804  013B  01AC               	clrf	___awdiv@sign
   805  013C                     l853:
   806  013C  1FA7               	btfss	___awdiv@divisor+1,7
   807  013D  293F               	goto	u271
   808  013E  2940               	goto	u270
   809  013F                     u271:
   810  013F  2947               	goto	l859
   811  0140                     u270:
   812  0140                     l855:
   813  0140  09A6               	comf	___awdiv@divisor,f
   814  0141  09A7               	comf	___awdiv@divisor+1,f
   815  0142  0AA6               	incf	___awdiv@divisor,f
   816  0143  1903               	skipnz
   817  0144  0AA7               	incf	___awdiv@divisor+1,f
   818  0145                     l857:
   819  0145  01AC               	clrf	___awdiv@sign
   820  0146  0AAC               	incf	___awdiv@sign,f
   821  0147                     l859:
   822  0147  1FA9               	btfss	___awdiv@dividend+1,7
   823  0148  294A               	goto	u281
   824  0149  294B               	goto	u280
   825  014A                     u281:
   826  014A  2954               	goto	l865
   827  014B                     u280:
   828  014B                     l861:
   829  014B  09A8               	comf	___awdiv@dividend,f
   830  014C  09A9               	comf	___awdiv@dividend+1,f
   831  014D  0AA8               	incf	___awdiv@dividend,f
   832  014E  1903               	skipnz
   833  014F  0AA9               	incf	___awdiv@dividend+1,f
   834  0150                     l863:
   835  0150  3001               	movlw	1
   836  0151  00AA               	movwf	??___awdiv
   837  0152  082A               	movf	??___awdiv,w
   838  0153  06AC               	xorwf	___awdiv@sign,f
   839  0154                     l865:
   840  0154  01AD               	clrf	___awdiv@quotient
   841  0155  01AE               	clrf	___awdiv@quotient+1
   842  0156                     l867:
   843  0156  0826               	movf	___awdiv@divisor,w
   844  0157  0427               	iorwf	___awdiv@divisor+1,w
   845  0158  1903               	btfsc	3,2
   846  0159  295B               	goto	u291
   847  015A  295C               	goto	u290
   848  015B                     u291:
   849  015B  2993               	goto	l887
   850  015C                     u290:
   851  015C                     l869:
   852  015C  01AB               	clrf	___awdiv@counter
   853  015D  0AAB               	incf	___awdiv@counter,f
   854  015E  296A               	goto	l875
   855  015F                     l871:
   856  015F  3001               	movlw	1
   857  0160                     u305:
   858  0160  1003               	clrc
   859  0161  0DA6               	rlf	___awdiv@divisor,f
   860  0162  0DA7               	rlf	___awdiv@divisor+1,f
   861  0163  3EFF               	addlw	-1
   862  0164  1D03               	skipz
   863  0165  2960               	goto	u305
   864  0166                     l873:
   865  0166  3001               	movlw	1
   866  0167  00AA               	movwf	??___awdiv
   867  0168  082A               	movf	??___awdiv,w
   868  0169  07AB               	addwf	___awdiv@counter,f
   869  016A                     l875:
   870  016A  1FA7               	btfss	___awdiv@divisor+1,7
   871  016B  296D               	goto	u311
   872  016C  296E               	goto	u310
   873  016D                     u311:
   874  016D  295F               	goto	l871
   875  016E                     u310:
   876  016E                     l877:
   877  016E  3001               	movlw	1
   878  016F                     u325:
   879  016F  1003               	clrc
   880  0170  0DAD               	rlf	___awdiv@quotient,f
   881  0171  0DAE               	rlf	___awdiv@quotient+1,f
   882  0172  3EFF               	addlw	-1
   883  0173  1D03               	skipz
   884  0174  296F               	goto	u325
   885  0175  0827               	movf	___awdiv@divisor+1,w
   886  0176  0229               	subwf	___awdiv@dividend+1,w
   887  0177  1D03               	skipz
   888  0178  297B               	goto	u335
   889  0179  0826               	movf	___awdiv@divisor,w
   890  017A  0228               	subwf	___awdiv@dividend,w
   891  017B                     u335:
   892  017B  1C03               	skipc
   893  017C  297E               	goto	u331
   894  017D  297F               	goto	u330
   895  017E                     u331:
   896  017E  2986               	goto	l883
   897  017F                     u330:
   898  017F                     l879:
   899  017F  0826               	movf	___awdiv@divisor,w
   900  0180  02A8               	subwf	___awdiv@dividend,f
   901  0181  0827               	movf	___awdiv@divisor+1,w
   902  0182  1C03               	skipc
   903  0183  03A9               	decf	___awdiv@dividend+1,f
   904  0184  02A9               	subwf	___awdiv@dividend+1,f
   905  0185                     l881:
   906  0185  142D               	bsf	___awdiv@quotient,0
   907  0186                     l883:
   908  0186  3001               	movlw	1
   909  0187                     u345:
   910  0187  1003               	clrc
   911  0188  0CA7               	rrf	___awdiv@divisor+1,f
   912  0189  0CA6               	rrf	___awdiv@divisor,f
   913  018A  3EFF               	addlw	-1
   914  018B  1D03               	skipz
   915  018C  2987               	goto	u345
   916  018D                     l885:
   917  018D  3001               	movlw	1
   918  018E  02AB               	subwf	___awdiv@counter,f
   919  018F  1D03               	btfss	3,2
   920  0190  2992               	goto	u351
   921  0191  2993               	goto	u350
   922  0192                     u351:
   923  0192  296E               	goto	l877
   924  0193                     u350:
   925  0193                     l887:
   926  0193  082C               	movf	___awdiv@sign,w
   927  0194  1903               	btfsc	3,2
   928  0195  2997               	goto	u361
   929  0196  2998               	goto	u360
   930  0197                     u361:
   931  0197  299D               	goto	l891
   932  0198                     u360:
   933  0198                     l889:
   934  0198  09AD               	comf	___awdiv@quotient,f
   935  0199  09AE               	comf	___awdiv@quotient+1,f
   936  019A  0AAD               	incf	___awdiv@quotient,f
   937  019B  1903               	skipnz
   938  019C  0AAE               	incf	___awdiv@quotient+1,f
   939  019D                     l891:
   940  019D  082E               	movf	___awdiv@quotient+1,w
   941  019E  00A7               	movwf	?___awdiv+1
   942  019F  082D               	movf	___awdiv@quotient,w
   943  01A0  00A6               	movwf	?___awdiv
   944  01A1                     l324:
   945  01A1  0008               	return
   946  01A2                     __end_of___awdiv:
   947                           
   948                           	psect	text3
   949  00C8                     __ptext3:	
   950 ;; *************** function _isr *****************
   951 ;; Defined at:
   952 ;;		line 48 in file "lab7.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;		None
   955 ;; Auto vars:     Size  Location     Type
   956 ;;		None
   957 ;; Return value:  Size  Location     Type
   958 ;;                  1    wreg      void 
   959 ;; Registers used:
   960 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   961 ;; Tracked objects:
   962 ;;		On entry : 0/0
   963 ;;		On exit  : 0/0
   964 ;;		Unchanged: 0/0
   965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   966 ;;      Params:         0       0       0       0       0
   967 ;;      Locals:         0       0       0       0       0
   968 ;;      Temps:          5       0       0       0       0
   969 ;;      Totals:         5       0       0       0       0
   970 ;;Total ram usage:        5 bytes
   971 ;; Hardware stack levels used:    2
   972 ;; This function calls:
   973 ;;		Nothing
   974 ;; This function is called by:
   975 ;;		Interrupt level 1
   976 ;; This function uses a non-reentrant model
   977 ;;
   978                           
   979                           
   980                           ;psect for function _isr
   981  00C8                     _isr:
   982  00C8                     i1l895:
   983                           
   984                           ;lab7.c: 50:     if (T0IF == 1) {
   985  00C8  1D0B               	btfss	11,2	;volatile
   986  00C9  28CB               	goto	u37_21
   987  00CA  28CC               	goto	u37_20
   988  00CB                     u37_21:
   989  00CB  2919               	goto	i1l65
   990  00CC                     u37_20:
   991  00CC                     i1l897:
   992                           
   993                           ;lab7.c: 51:         PORTD++;
   994  00CC  3001               	movlw	1
   995  00CD  00F0               	movwf	??_isr
   996  00CE  0870               	movf	??_isr,w
   997  00CF  0788               	addwf	8,f	;volatile
   998  00D0                     i1l899:
   999                           
  1000                           ;lab7.c: 52:         PORTB = 0;
  1001  00D0  0186               	clrf	6	;volatile
  1002  00D1                     i1l901:
  1003                           
  1004                           ;lab7.c: 53:         if (turno == 3) {
  1005  00D1  3003               	movlw	3
  1006  00D2  0675               	xorwf	_turno,w
  1007  00D3  0476               	iorwf	_turno+1,w
  1008  00D4  1D03               	btfss	3,2
  1009  00D5  28D7               	goto	u38_21
  1010  00D6  28D8               	goto	u38_20
  1011  00D7                     u38_21:
  1012  00D7  28E3               	goto	i1l907
  1013  00D8                     u38_20:
  1014  00D8                     i1l903:
  1015                           
  1016                           ;lab7.c: 54:             PORTC = (num_display[centena]);
  1017  00D8  0877               	movf	_centena,w
  1018  00D9  3E01               	addlw	low ((_num_display-__stringbase)| (0+32768))
  1019  00DA  0084               	movwf	4
  1020  00DB  120A  118A  21C9  120A  118A  	fcall	stringdir
  1021  00E0  0087               	movwf	7	;volatile
  1022  00E1                     i1l905:
  1023                           
  1024                           ;lab7.c: 55:             RB5 = 1;
  1025  00E1  1686               	bsf	6,5	;volatile
  1026                           
  1027                           ;lab7.c: 56:         }
  1028  00E2  2905               	goto	i1l919
  1029  00E3                     i1l907:
  1030  00E3  3002               	movlw	2
  1031  00E4  0675               	xorwf	_turno,w
  1032  00E5  0476               	iorwf	_turno+1,w
  1033  00E6  1D03               	btfss	3,2
  1034  00E7  28E9               	goto	u39_21
  1035  00E8  28EA               	goto	u39_20
  1036  00E9                     u39_21:
  1037  00E9  28F5               	goto	i1l913
  1038  00EA                     u39_20:
  1039  00EA                     i1l909:
  1040                           
  1041                           ;lab7.c: 58:             PORTC = (num_display[decena]);
  1042  00EA  0837               	movf	_decena,w
  1043  00EB  3E01               	addlw	low ((_num_display-__stringbase)| (0+32768))
  1044  00EC  0084               	movwf	4
  1045  00ED  120A  118A  21C9  120A  118A  	fcall	stringdir
  1046  00F2  0087               	movwf	7	;volatile
  1047  00F3                     i1l911:
  1048                           
  1049                           ;lab7.c: 59:             RB6 = 1;
  1050  00F3  1706               	bsf	6,6	;volatile
  1051                           
  1052                           ;lab7.c: 60:         }
  1053  00F4  2905               	goto	i1l919
  1054  00F5                     i1l913:
  1055  00F5  0375               	decf	_turno,w
  1056  00F6  0476               	iorwf	_turno+1,w
  1057  00F7  1D03               	btfss	3,2
  1058  00F8  28FA               	goto	u40_21
  1059  00F9  28FB               	goto	u40_20
  1060  00FA                     u40_21:
  1061  00FA  2905               	goto	i1l919
  1062  00FB                     u40_20:
  1063  00FB                     i1l915:
  1064                           
  1065                           ;lab7.c: 62:             PORTC = (num_display[unidad]);
  1066  00FB  0835               	movf	_unidad,w
  1067  00FC  3E01               	addlw	low ((_num_display-__stringbase)| (0+32768))
  1068  00FD  0084               	movwf	4
  1069  00FE  120A  118A  21C9  120A  118A  	fcall	stringdir
  1070  0103  0087               	movwf	7	;volatile
  1071  0104                     i1l917:
  1072                           
  1073                           ;lab7.c: 63:             RB7 = 1;
  1074  0104  1786               	bsf	6,7	;volatile
  1075  0105                     i1l919:
  1076                           
  1077                           ;lab7.c: 66:         turno--;
  1078  0105  30FF               	movlw	255
  1079  0106  07F5               	addwf	_turno,f
  1080  0107  1803               	skipnc
  1081  0108  0AF6               	incf	_turno+1,f
  1082  0109  30FF               	movlw	255
  1083  010A  07F6               	addwf	_turno+1,f
  1084  010B                     i1l921:
  1085                           
  1086                           ;lab7.c: 67:         if (turno == 0){
  1087  010B  0875               	movf	_turno,w
  1088  010C  0476               	iorwf	_turno+1,w
  1089  010D  1D03               	btfss	3,2
  1090  010E  2910               	goto	u41_21
  1091  010F  2911               	goto	u41_20
  1092  0110                     u41_21:
  1093  0110  2915               	goto	i1l925
  1094  0111                     u41_20:
  1095  0111                     i1l923:
  1096                           
  1097                           ;lab7.c: 68:             turno = 3;
  1098  0111  3003               	movlw	3
  1099  0112  00F5               	movwf	_turno
  1100  0113  3000               	movlw	0
  1101  0114  00F6               	movwf	_turno+1
  1102  0115                     i1l925:
  1103                           
  1104                           ;lab7.c: 71:         INTCONbits.T0IF = 0;
  1105  0115  110B               	bcf	11,2	;volatile
  1106                           
  1107                           ;lab7.c: 72:         TMR0 = 100;;
  1108  0116  3064               	movlw	100
  1109  0117  0081               	movwf	1	;volatile
  1110                           
  1111                           ;lab7.c: 73:     }
  1112  0118  292E               	goto	i1l77
  1113  0119                     i1l65:	
  1114                           ;lab7.c: 74:     else if (RBIF == 1) {
  1115                           
  1116  0119  1C0B               	btfss	11,0	;volatile
  1117  011A  291C               	goto	u42_21
  1118  011B  291D               	goto	u42_20
  1119  011C                     u42_21:
  1120  011C  292E               	goto	i1l77
  1121  011D                     u42_20:
  1122  011D                     i1l927:
  1123                           
  1124                           ;lab7.c: 75:         if (RB0 == 0) {
  1125  011D  1806               	btfsc	6,0	;volatile
  1126  011E  2920               	goto	u43_21
  1127  011F  2921               	goto	u43_20
  1128  0120                     u43_21:
  1129  0120  2927               	goto	i1l74
  1130  0121                     u43_20:
  1131  0121                     i1l929:
  1132                           
  1133                           ;lab7.c: 76:             PORTA++;
  1134  0121  3001               	movlw	1
  1135  0122  00F0               	movwf	??_isr
  1136  0123  0870               	movf	??_isr,w
  1137  0124  0785               	addwf	5,f	;volatile
  1138  0125                     i1l931:
  1139                           
  1140                           ;lab7.c: 77:             RBIF = 0;
  1141  0125  100B               	bcf	11,0	;volatile
  1142                           
  1143                           ;lab7.c: 78:         } else if (RB1 == 0) {
  1144  0126  292E               	goto	i1l77
  1145  0127                     i1l74:
  1146  0127  1886               	btfsc	6,1	;volatile
  1147  0128  292A               	goto	u44_21
  1148  0129  292B               	goto	u44_20
  1149  012A                     u44_21:
  1150  012A  292E               	goto	i1l73
  1151  012B                     u44_20:
  1152  012B                     i1l933:
  1153                           
  1154                           ;lab7.c: 79:             PORTA--;
  1155  012B  3001               	movlw	1
  1156  012C  0285               	subwf	5,f	;volatile
  1157  012D  2925               	goto	i1l931
  1158  012E                     i1l73:	
  1159                           ;lab7.c: 83:     }
  1160                           
  1161  012E                     i1l77:
  1162  012E  0874               	movf	??_isr+4,w
  1163  012F  00FF               	movwf	btemp+1
  1164  0130  0873               	movf	??_isr+3,w
  1165  0131  008A               	movwf	10
  1166  0132  0872               	movf	??_isr+2,w
  1167  0133  0084               	movwf	4
  1168  0134  0E71               	swapf	??_isr+1,w
  1169  0135  0083               	movwf	3
  1170  0136  0EFE               	swapf	btemp,f
  1171  0137  0E7E               	swapf	btemp,w
  1172  0138  0009               	retfie
  1173  0139                     __end_of_isr:
  1174  007E                     btemp	set	126	;btemp
  1175  007E                     wtemp0	set	126
  1176                           
  1177                           	psect	intentry
  1178  0004                     __pintentry:	
  1179                           ;incstack = 0
  1180                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath]
  1181                           
  1182  0004                     interrupt_function:
  1183  007E                     saved_w	set	btemp
  1184  0004  00FE               	movwf	btemp
  1185  0005  0E03               	swapf	3,w
  1186  0006  00F1               	movwf	??_isr+1
  1187  0007  0804               	movf	4,w
  1188  0008  00F2               	movwf	??_isr+2
  1189  0009  080A               	movf	10,w
  1190  000A  00F3               	movwf	??_isr+3
  1191  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1192  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1193  000D  087F               	movf	btemp+1,w
  1194  000E  00F4               	movwf	??_isr+4
  1195  000F  120A  118A  28C8   	ljmp	_isr
  1196                           
  1197                           	psect	config
  1198                           
  1199                           ;Config register CONFIG1 @ 0x2007
  1200                           ;	Oscillator Selection bits
  1201                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1202                           ;	Watchdog Timer Enable bit
  1203                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1204                           ;	Power-up Timer Enable bit
  1205                           ;	PWRTE = OFF, PWRT disabled
  1206                           ;	RE3/MCLR pin function select bit
  1207                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1208                           ;	Code Protection bit
  1209                           ;	CP = OFF, Program memory code protection is disabled
  1210                           ;	Data Code Protection bit
  1211                           ;	CPD = OFF, Data memory code protection is disabled
  1212                           ;	Brown Out Reset Selection bits
  1213                           ;	BOREN = OFF, BOR disabled
  1214                           ;	Internal External Switchover bit
  1215                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1216                           ;	Fail-Safe Clock Monitor Enabled bit
  1217                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1218                           ;	Low Voltage Programming Enable bit
  1219                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1220                           ;	In-Circuit Debugger Mode bit
  1221                           ;	DEBUG = 0x1, unprogrammed default
  1222  2007                     	org	8199
  1223  2007  30D4               	dw	12500
  1224                           
  1225                           ;Config register CONFIG2 @ 0x2008
  1226                           ;	Brown-out Reset Selection bit
  1227                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1228                           ;	Flash Program Memory Self Write Enable bits
  1229                           ;	WRT = OFF, Write protection off
  1230  2008                     	org	8200
  1231  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         2
    Persistent  10
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80     19      27
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv
    ___awdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1280
                                             15 BANK0      4     4      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     676
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___wmul (ARG)
   ___wmul

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      24       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     13      1B       5       33.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      24      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Apr 13 17:37:20 2021

                      pc 0002             ___awdiv@sign 002C                       fsr 0004  
    ___wmul@multiplicand 0022                      l171 01B0                      l324 01A1  
                    l173 01C8                      l851 0139                      l861 014B  
                    l853 013C                      l871 015F                      l863 0150  
                    l855 0140                      l881 0185                      l873 0166  
                    l865 0154                      l857 0145                      l891 019D  
                    l883 0186                      l875 016A                      l867 0156  
                    l859 0147                      l885 018D                      l877 016E  
                    l869 015C                      l879 017F                      l887 0193  
                    l889 0198                      l997 01A2                      l999 01A6  
                    _RB0 0030                      _RB1 0031                      _RB5 0035  
                    _RB6 0036                      _RB7 0037                      u310 016E  
                    u311 016D                      u305 0160                      u330 017F  
                    u331 017E                      u325 016F                      u350 0193  
                    u270 0140                      u351 0192                      u335 017B  
                    u271 013F                      u360 0198                      u280 014B  
                    u361 0197                      u345 0187                      u281 014A  
                    u290 015C                      u450 01AA                      u291 015B  
                    u451 01A9                      u480 01C4                      u481 01C3  
                    u465 01B1                      u475 01B8                      _isr 00C8  
                    fsr0 0004                     l1001 01AA                     l1003 01B7  
                   l1011 001D                     l1005 01BE                     l1021 0029  
                   l1013 0024                     l1007 01C4                     l1031 002E  
                   l1023 002A                     l1015 0026                     l1041 0033  
                   l1033 002F                     l1025 002B                     l1017 0027  
                   l1051 003D                     l1043 0034                     l1035 0030  
                   l1027 002C                     l1019 0028                     l1061 004E  
                   l1053 003E                     l1045 0038                     l1037 0031  
                   l1029 002D                     l1063 0052                     l1055 003F  
                   l1047 003B                     l1039 0032                     l1065 0059  
                   l1057 0040                     l1049 003C                     l1067 006C  
                   l1059 0041                     l1069 0092                     ?_isr 0070  
                   _T0IF 005A                     _RBIF 0058                     i1l73 012E  
                   i1l65 0119                     i1l74 0127                     i1l77 012E  
                   _TMR0 0001                     _main 001D                     btemp 007E  
                   start 0012                    ??_isr 0070                    ?_main 0070  
        __end_of___awdiv 01A2                    _ANSEL 0188          ___awdiv@divisor 0026  
                  i1l901 00D1                    i1l911 00F3                    i1l903 00D8  
                  i1l921 010B                    i1l913 00F5                    i1l905 00E1  
                  i1l931 0125                    i1l923 0111                    i1l915 00FB  
                  i1l907 00E3                    i1l933 012B                    i1l925 0115  
                  i1l917 0104                    i1l909 00EA                    i1l927 011D  
                  i1l919 0105                    i1l929 0121                    i1l895 00C8  
                  i1l897 00CC                    i1l899 00D0          ___awdiv@counter 002B  
                  u40_20 00FB                    u40_21 00FA                    u41_20 0111  
                  u41_21 0110                    u42_20 011D                    u42_21 011C  
                  u43_20 0121                    u43_21 0120                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  u44_20 012B                    u44_21 012A                    u37_20 00CC  
                  u37_21 00CB                    u38_20 00D8                    u38_21 00D7  
                  u39_20 00EA                    u39_21 00E9                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _turno 0075                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0015             __end_of_main 00C8  
                 ??_main 002F         ___awdiv@dividend 0028                   _ANSELH 0189  
                 ___wmul 01A2                ??___awdiv 002A                   _decena 0037  
       ___awdiv@quotient 002D                   _unidad 0035                   saved_w 007E  
__end_of__initialization 0019           __pcstackCOMMON 0070           _OPTION_REGbits 0081  
             __pbssBANK0 0039               __pnvCOMMON 0075               __pmaintext 001D  
                ?___wmul 0020               __pintentry 0004               __stringtab 01C9  
                ___awdiv 0139          __size_of___wmul 0027                  _centena 0077  
                __ptext1 01A2                  __ptext2 0139                  __ptext3 00C8  
                _divisor 0039             __size_of_isr 0071     end_of_initialization 0019  
         __end_of___wmul 01C9      start_initialization 0015              __end_of_isr 0139  
               ??___wmul 0075                ___latbits 0002            __pcstackBANK0 0020  
              __pnvBANK0 0033                 ?___awdiv 0026                _dividendo 0033  
              __pstrings 01C9        interrupt_function 0004           ___wmul@product 0024  
               _IOCBbits 0096              __stringbase 01CE        ___wmul@multiplier 0020  
               _WPUBbits 0095         __size_of___awdiv 0069       __end_of__stringtab 01CF  
    __end_of_num_display 01D9            __size_of_main 00AB               _INTCONbits 000B  
               intlevel1 0000                stringcode 01C9               _OSCCONbits 008F  
            _num_display 01CF                 stringdir 01C9                 stringtab 01C9  
