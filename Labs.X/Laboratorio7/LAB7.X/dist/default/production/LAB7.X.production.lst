

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Apr 13 17:49:29 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210                           
   211                           	psect	strings
   212  01C0                     __pstrings:
   213  01C0                     stringtab:
   214  01C0                     __stringtab:
   215  01C0                     stringcode:	
   216                           ;	String table - string pointers are 1 byte each
   217                           
   218  01C0                     stringdir:
   219  01C0  3001               	movlw	high stringdir
   220  01C1  008A               	movwf	10
   221  01C2  0804               	movf	4,w
   222  01C3  0A84               	incf	4,f
   223  01C4  0782               	addwf	2,f
   224  01C5                     __stringbase:
   225  01C5  3400               	retlw	0
   226  01C6                     __end_of__stringtab:
   227  01C6                     _num_display:
   228  01C6  34FC               	retlw	252
   229  01C7  3460               	retlw	96
   230  01C8  34DA               	retlw	218
   231  01C9  34F2               	retlw	242
   232  01CA  3466               	retlw	102
   233  01CB  34B6               	retlw	182
   234  01CC  34BE               	retlw	190
   235  01CD  34E0               	retlw	224
   236  01CE  34FE               	retlw	254
   237  01CF  34F6               	retlw	246
   238  01D0                     __end_of_num_display:
   239                           
   240                           	psect	nvCOMMON
   241  0075                     __pnvCOMMON:
   242  0075                     _turno:
   243  0075                     	ds	1
   244  0076                     _dividendo:
   245  0076                     	ds	1
   246  0077                     _decena:
   247  0077                     	ds	1
   248  0078                     _centena:
   249  0078                     	ds	1
   250                           
   251                           	psect	nvBANK0
   252  0033                     __pnvBANK0:
   253  0033                     _unidad:
   254  0033                     	ds	1
   255  0005                     _PORTA	set	5
   256  0001                     _TMR0	set	1
   257  000B                     _INTCONbits	set	11
   258  0007                     _PORTC	set	7
   259  0006                     _PORTB	set	6
   260  0008                     _PORTD	set	8
   261  0031                     _RB1	set	49
   262  0030                     _RB0	set	48
   263  0058                     _RBIF	set	88
   264  0037                     _RB7	set	55
   265  0036                     _RB6	set	54
   266  0035                     _RB5	set	53
   267  005A                     _T0IF	set	90
   268  0096                     _IOCBbits	set	150
   269  008F                     _OSCCONbits	set	143
   270  0095                     _WPUBbits	set	149
   271  0081                     _OPTION_REGbits	set	129
   272  0088                     _TRISD	set	136
   273  0087                     _TRISC	set	135
   274  0086                     _TRISB	set	134
   275  0085                     _TRISA	set	133
   276  0189                     _ANSELH	set	393
   277  0188                     _ANSEL	set	392
   278                           
   279                           	psect	cinit
   280  0015                     start_initialization:	
   281                           ; #config settings
   282                           
   283  0015                     __initialization:
   284                           
   285                           ; Clear objects allocated to COMMON
   286  0015  01F9               	clrf	__pbssCOMMON& (0+127)
   287  0016                     end_of_initialization:	
   288                           ;End of C runtime variable initialization code
   289                           
   290  0016                     __end_of__initialization:
   291  0016  0183               	clrf	3
   292  0017  120A  118A  281A   	ljmp	_main	;jump to C main() function
   293                           
   294                           	psect	bssCOMMON
   295  0079                     __pbssCOMMON:
   296  0079                     _divisor:
   297  0079                     	ds	1
   298                           
   299                           	psect	cstackCOMMON
   300  0070                     __pcstackCOMMON:
   301  0070                     ?_isr:
   302  0070                     ??_isr:	
   303                           ; 1 bytes @ 0x0
   304                           
   305  0070                     ?_main:	
   306                           ; 1 bytes @ 0x0
   307                           
   308                           
   309                           ; 1 bytes @ 0x0
   310  0070                     	ds	5
   311                           
   312                           	psect	cstackBANK0
   313  0020                     __pcstackBANK0:
   314  0020                     ?___bmul:
   315  0020                     ?___wmul:	
   316                           ; 1 bytes @ 0x0
   317                           
   318  0020                     ___bmul@multiplicand:	
   319                           ; 2 bytes @ 0x0
   320                           
   321  0020                     ___wmul@multiplier:	
   322                           ; 1 bytes @ 0x0
   323                           
   324                           
   325                           ; 2 bytes @ 0x0
   326  0020                     	ds	1
   327  0021                     ??___bmul:
   328                           
   329                           ; 1 bytes @ 0x1
   330  0021                     	ds	1
   331  0022                     ___bmul@product:
   332  0022                     ___wmul@multiplicand:	
   333                           ; 1 bytes @ 0x2
   334                           
   335                           
   336                           ; 2 bytes @ 0x2
   337  0022                     	ds	1
   338  0023                     ___bmul@multiplier:
   339                           
   340                           ; 1 bytes @ 0x3
   341  0023                     	ds	1
   342  0024                     ??___wmul:
   343  0024                     ___wmul@product:	
   344                           ; 1 bytes @ 0x4
   345                           
   346                           
   347                           ; 2 bytes @ 0x4
   348  0024                     	ds	2
   349  0026                     ?___awdiv:
   350  0026                     ___awdiv@divisor:	
   351                           ; 2 bytes @ 0x6
   352                           
   353                           
   354                           ; 2 bytes @ 0x6
   355  0026                     	ds	2
   356  0028                     ___awdiv@dividend:
   357                           
   358                           ; 2 bytes @ 0x8
   359  0028                     	ds	2
   360  002A                     ??___awdiv:
   361                           
   362                           ; 1 bytes @ 0xA
   363  002A                     	ds	1
   364  002B                     ___awdiv@counter:
   365                           
   366                           ; 1 bytes @ 0xB
   367  002B                     	ds	1
   368  002C                     ___awdiv@sign:
   369                           
   370                           ; 1 bytes @ 0xC
   371  002C                     	ds	1
   372  002D                     ___awdiv@quotient:
   373                           
   374                           ; 2 bytes @ 0xD
   375  002D                     	ds	2
   376  002F                     ??_main:
   377                           
   378                           ; 1 bytes @ 0xF
   379  002F                     	ds	4
   380                           
   381                           	psect	maintext
   382  001A                     __pmaintext:	
   383 ;;
   384 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   385 ;;
   386 ;; *************** function _main *****************
   387 ;; Defined at:
   388 ;;		line 96 in file "lab7.c"
   389 ;; Parameters:    Size  Location     Type
   390 ;;		None
   391 ;; Auto vars:     Size  Location     Type
   392 ;;		None
   393 ;; Return value:  Size  Location     Type
   394 ;;                  1    wreg      void 
   395 ;; Registers used:
   396 ;;		wreg, status,2, status,0, pclath, cstack
   397 ;; Tracked objects:
   398 ;;		On entry : B00/0
   399 ;;		On exit  : 0/0
   400 ;;		Unchanged: 0/0
   401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   402 ;;      Params:         0       0       0       0       0
   403 ;;      Locals:         0       0       0       0       0
   404 ;;      Temps:          0       4       0       0       0
   405 ;;      Totals:         0       4       0       0       0
   406 ;;Total ram usage:        4 bytes
   407 ;; Hardware stack levels required when called:    3
   408 ;; This function calls:
   409 ;;		___awdiv
   410 ;;		___bmul
   411 ;;		___wmul
   412 ;; This function is called by:
   413 ;;		Startup code after reset
   414 ;; This function uses a non-reentrant model
   415 ;;
   416                           
   417                           
   418                           ;psect for function _main
   419  001A                     _main:
   420  001A                     l1053:	
   421                           ;incstack = 0
   422                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   423                           
   424                           
   425                           ;lab7.c: 98:     ANSEL = 0x00;
   426  001A  1683               	bsf	3,5	;RP0=1, select bank3
   427  001B  1703               	bsf	3,6	;RP1=1, select bank3
   428  001C  0188               	clrf	8	;volatile
   429                           
   430                           ;lab7.c: 99:     ANSELH = 0x00;
   431  001D  0189               	clrf	9	;volatile
   432                           
   433                           ;lab7.c: 101:     TRISA = 0x00;
   434  001E  1683               	bsf	3,5	;RP0=1, select bank1
   435  001F  1303               	bcf	3,6	;RP1=0, select bank1
   436  0020  0185               	clrf	5	;volatile
   437  0021                     l1055:
   438                           
   439                           ;lab7.c: 102:     TRISB = 0b00000011;
   440  0021  3003               	movlw	3
   441  0022  0086               	movwf	6	;volatile
   442  0023                     l1057:
   443                           
   444                           ;lab7.c: 103:     TRISC = 0x00;
   445  0023  0187               	clrf	7	;volatile
   446  0024                     l1059:
   447                           
   448                           ;lab7.c: 104:     TRISD = 0x00;
   449  0024  0188               	clrf	8	;volatile
   450  0025                     l1061:
   451                           
   452                           ;lab7.c: 106:     OPTION_REGbits.nRBPU = 0;
   453  0025  1381               	bcf	1,7	;volatile
   454  0026                     l1063:
   455                           
   456                           ;lab7.c: 107:     WPUBbits.WPUB0 = 1;
   457  0026  1415               	bsf	21,0	;volatile
   458  0027                     l1065:
   459                           
   460                           ;lab7.c: 108:     WPUBbits.WPUB1 = 1;
   461  0027  1495               	bsf	21,1	;volatile
   462  0028                     l1067:
   463                           
   464                           ;lab7.c: 110:     OSCCONbits.IRCF2 = 1;
   465  0028  170F               	bsf	15,6	;volatile
   466  0029                     l1069:
   467                           
   468                           ;lab7.c: 111:     OSCCONbits.IRCF1 = 1;
   469  0029  168F               	bsf	15,5	;volatile
   470  002A                     l1071:
   471                           
   472                           ;lab7.c: 112:     OSCCONbits.IRCF0 = 1;
   473  002A  160F               	bsf	15,4	;volatile
   474  002B                     l1073:
   475                           
   476                           ;lab7.c: 113:     OSCCONbits.SCS = 1;
   477  002B  140F               	bsf	15,0	;volatile
   478  002C                     l1075:
   479                           
   480                           ;lab7.c: 115:     OPTION_REGbits.T0CS = 0;
   481  002C  1281               	bcf	1,5	;volatile
   482  002D                     l1077:
   483                           
   484                           ;lab7.c: 116:     OPTION_REGbits.PSA = 0;
   485  002D  1181               	bcf	1,3	;volatile
   486  002E                     l1079:
   487                           
   488                           ;lab7.c: 117:     OPTION_REGbits.PS2 = 1;
   489  002E  1501               	bsf	1,2	;volatile
   490  002F                     l1081:
   491                           
   492                           ;lab7.c: 118:     OPTION_REGbits.PS1 = 0;
   493  002F  1081               	bcf	1,1	;volatile
   494  0030                     l1083:
   495                           
   496                           ;lab7.c: 119:     OPTION_REGbits.PS0 = 1;
   497  0030  1401               	bsf	1,0	;volatile
   498  0031                     l1085:
   499                           
   500                           ;lab7.c: 120:     TMR0 = 100;
   501  0031  3064               	movlw	100
   502  0032  1283               	bcf	3,5	;RP0=0, select bank0
   503  0033  1303               	bcf	3,6	;RP1=0, select bank0
   504  0034  0081               	movwf	1	;volatile
   505  0035                     l1087:
   506                           
   507                           ;lab7.c: 122:     IOCBbits.IOCB0 = 1;
   508  0035  1683               	bsf	3,5	;RP0=1, select bank1
   509  0036  1303               	bcf	3,6	;RP1=0, select bank1
   510  0037  1416               	bsf	22,0	;volatile
   511  0038                     l1089:
   512                           
   513                           ;lab7.c: 123:     IOCBbits.IOCB1 = 1;
   514  0038  1496               	bsf	22,1	;volatile
   515  0039                     l1091:
   516                           
   517                           ;lab7.c: 124:     RBIF = 0;
   518  0039  100B               	bcf	11,0	;volatile
   519  003A                     l1093:
   520                           
   521                           ;lab7.c: 126:     INTCONbits.GIE = 1;
   522  003A  178B               	bsf	11,7	;volatile
   523  003B                     l1095:
   524                           
   525                           ;lab7.c: 127:     INTCONbits.T0IE = 1;
   526  003B  168B               	bsf	11,5	;volatile
   527  003C                     l1097:
   528                           
   529                           ;lab7.c: 128:     INTCONbits.T0IF = 0;
   530  003C  110B               	bcf	11,2	;volatile
   531  003D                     l1099:
   532                           
   533                           ;lab7.c: 129:     INTCONbits.RBIE = 1;
   534  003D  158B               	bsf	11,3	;volatile
   535  003E                     l1101:
   536                           
   537                           ;lab7.c: 130:     INTCONbits.RBIF = 0;
   538  003E  100B               	bcf	11,0	;volatile
   539                           
   540                           ;lab7.c: 132:     PORTA = 0;
   541  003F  1283               	bcf	3,5	;RP0=0, select bank0
   542  0040  1303               	bcf	3,6	;RP1=0, select bank0
   543  0041  0185               	clrf	5	;volatile
   544                           
   545                           ;lab7.c: 133:     PORTB = 0;
   546  0042  0186               	clrf	6	;volatile
   547                           
   548                           ;lab7.c: 134:     PORTC = 0;
   549  0043  0187               	clrf	7	;volatile
   550                           
   551                           ;lab7.c: 135:     PORTD = 0;
   552  0044  0188               	clrf	8	;volatile
   553                           
   554                           ;lab7.c: 137:     centena = 0;
   555  0045  01F8               	clrf	_centena
   556                           
   557                           ;lab7.c: 138:     decena = 0;
   558  0046  01F7               	clrf	_decena
   559                           
   560                           ;lab7.c: 139:     unidad = 0;
   561  0047  01B3               	clrf	_unidad
   562  0048                     l1103:
   563                           
   564                           ;lab7.c: 140:     turno = 3;
   565  0048  3003               	movlw	3
   566  0049  00AF               	movwf	??_main
   567  004A  082F               	movf	??_main,w
   568  004B  00F5               	movwf	_turno
   569  004C                     l1105:
   570                           
   571                           ;lab7.c: 145:         dividendo = PORTA;
   572  004C  0805               	movf	5,w	;volatile
   573  004D  00AF               	movwf	??_main
   574  004E  082F               	movf	??_main,w
   575  004F  00F6               	movwf	_dividendo
   576  0050                     l1107:
   577                           
   578                           ;lab7.c: 146:         centena = dividendo / 100;
   579  0050  3064               	movlw	100
   580  0051  00A6               	movwf	___awdiv@divisor
   581  0052  3000               	movlw	0
   582  0053  00A7               	movwf	___awdiv@divisor+1
   583  0054  0876               	movf	_dividendo,w
   584  0055  00AF               	movwf	??_main
   585  0056  01B0               	clrf	??_main+1
   586  0057  082F               	movf	??_main,w
   587  0058  00A8               	movwf	___awdiv@dividend
   588  0059  0830               	movf	??_main+1,w
   589  005A  00A9               	movwf	___awdiv@dividend+1
   590  005B  120A  118A  20B0  120A  118A  	fcall	___awdiv
   591  0060  1283               	bcf	3,5	;RP0=0, select bank0
   592  0061  1303               	bcf	3,6	;RP1=0, select bank0
   593  0062  0826               	movf	?___awdiv,w
   594  0063  00B1               	movwf	??_main+2
   595  0064  0831               	movf	??_main+2,w
   596  0065  00F8               	movwf	_centena
   597  0066                     l1109:
   598                           
   599                           ;lab7.c: 147:         decena = (dividendo - (100 * centena))/10;
   600  0066  300A               	movlw	10
   601  0067  00A6               	movwf	___awdiv@divisor
   602  0068  3000               	movlw	0
   603  0069  00A7               	movwf	___awdiv@divisor+1
   604  006A  0878               	movf	_centena,w
   605  006B  00AF               	movwf	??_main
   606  006C  01B0               	clrf	??_main+1
   607  006D  082F               	movf	??_main,w
   608  006E  00A0               	movwf	___wmul@multiplier
   609  006F  0830               	movf	??_main+1,w
   610  0070  00A1               	movwf	___wmul@multiplier+1
   611  0071  309C               	movlw	156
   612  0072  00A2               	movwf	___wmul@multiplicand
   613  0073  30FF               	movlw	255
   614  0074  00A3               	movwf	___wmul@multiplicand+1
   615  0075  120A  118A  2182  120A  118A  	fcall	___wmul
   616  007A  0876               	movf	_dividendo,w
   617  007B  1283               	bcf	3,5	;RP0=0, select bank0
   618  007C  1303               	bcf	3,6	;RP1=0, select bank0
   619  007D  0720               	addwf	?___wmul,w
   620  007E  00A8               	movwf	___awdiv@dividend
   621  007F  0821               	movf	?___wmul+1,w
   622  0080  1803               	skipnc
   623  0081  0A21               	incf	?___wmul+1,w
   624  0082  00A9               	movwf	___awdiv@dividend+1
   625  0083  120A  118A  20B0  120A  118A  	fcall	___awdiv
   626  0088  1283               	bcf	3,5	;RP0=0, select bank0
   627  0089  1303               	bcf	3,6	;RP1=0, select bank0
   628  008A  0826               	movf	?___awdiv,w
   629  008B  00B1               	movwf	??_main+2
   630  008C  0831               	movf	??_main+2,w
   631  008D  00F7               	movwf	_decena
   632  008E                     l1111:
   633                           
   634                           ;lab7.c: 148:         unidad = dividendo - (100 * centena) - (decena * 10);
   635  008E  309C               	movlw	156
   636  008F  00AF               	movwf	??_main
   637  0090  082F               	movf	??_main,w
   638  0091  00A0               	movwf	___bmul@multiplicand
   639  0092  0878               	movf	_centena,w
   640  0093  120A  118A  21A9  120A  118A  	fcall	___bmul
   641  0098  1283               	bcf	3,5	;RP0=0, select bank0
   642  0099  1303               	bcf	3,6	;RP1=0, select bank0
   643  009A  00B0               	movwf	??_main+1
   644  009B  30F6               	movlw	246
   645  009C  00B1               	movwf	??_main+2
   646  009D  0831               	movf	??_main+2,w
   647  009E  00A0               	movwf	___bmul@multiplicand
   648  009F  0877               	movf	_decena,w
   649  00A0  120A  118A  21A9  120A  118A  	fcall	___bmul
   650  00A5  1283               	bcf	3,5	;RP0=0, select bank0
   651  00A6  1303               	bcf	3,6	;RP1=0, select bank0
   652  00A7  0730               	addwf	??_main+1,w
   653  00A8  0776               	addwf	_dividendo,w
   654  00A9  00B2               	movwf	??_main+3
   655  00AA  0832               	movf	??_main+3,w
   656  00AB  00B3               	movwf	_unidad
   657  00AC  284C               	goto	l1105
   658  00AD  120A  118A  2812   	ljmp	start
   659  00B0                     __end_of_main:
   660                           
   661                           	psect	text1
   662  0182                     __ptext1:	
   663 ;; *************** function ___wmul *****************
   664 ;; Defined at:
   665 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
   666 ;; Parameters:    Size  Location     Type
   667 ;;  multiplier      2    0[BANK0 ] unsigned int 
   668 ;;  multiplicand    2    2[BANK0 ] unsigned int 
   669 ;; Auto vars:     Size  Location     Type
   670 ;;  product         2    4[BANK0 ] unsigned int 
   671 ;; Return value:  Size  Location     Type
   672 ;;                  2    0[BANK0 ] unsigned int 
   673 ;; Registers used:
   674 ;;		wreg, status,2, status,0
   675 ;; Tracked objects:
   676 ;;		On entry : 0/0
   677 ;;		On exit  : 0/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   680 ;;      Params:         0       4       0       0       0
   681 ;;      Locals:         0       2       0       0       0
   682 ;;      Temps:          0       0       0       0       0
   683 ;;      Totals:         0       6       0       0       0
   684 ;;Total ram usage:        6 bytes
   685 ;; Hardware stack levels used:    1
   686 ;; Hardware stack levels required when called:    2
   687 ;; This function calls:
   688 ;;		Nothing
   689 ;; This function is called by:
   690 ;;		_main
   691 ;; This function uses a non-reentrant model
   692 ;;
   693                           
   694                           
   695                           ;psect for function ___wmul
   696  0182                     ___wmul:
   697  0182                     l1025:	
   698                           ;incstack = 0
   699                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   700                           
   701  0182  1283               	bcf	3,5	;RP0=0, select bank0
   702  0183  1303               	bcf	3,6	;RP1=0, select bank0
   703  0184  01A4               	clrf	___wmul@product
   704  0185  01A5               	clrf	___wmul@product+1
   705  0186                     l1027:
   706  0186  1C20               	btfss	___wmul@multiplier,0
   707  0187  2989               	goto	u491
   708  0188  298A               	goto	u490
   709  0189                     u491:
   710  0189  2990               	goto	l171
   711  018A                     u490:
   712  018A                     l1029:
   713  018A  0822               	movf	___wmul@multiplicand,w
   714  018B  07A4               	addwf	___wmul@product,f
   715  018C  1803               	skipnc
   716  018D  0AA5               	incf	___wmul@product+1,f
   717  018E  0823               	movf	___wmul@multiplicand+1,w
   718  018F  07A5               	addwf	___wmul@product+1,f
   719  0190                     l171:
   720  0190  3001               	movlw	1
   721  0191                     u505:
   722  0191  1003               	clrc
   723  0192  0DA2               	rlf	___wmul@multiplicand,f
   724  0193  0DA3               	rlf	___wmul@multiplicand+1,f
   725  0194  3EFF               	addlw	-1
   726  0195  1D03               	skipz
   727  0196  2991               	goto	u505
   728  0197                     l1031:
   729  0197  3001               	movlw	1
   730  0198                     u515:
   731  0198  1003               	clrc
   732  0199  0CA1               	rrf	___wmul@multiplier+1,f
   733  019A  0CA0               	rrf	___wmul@multiplier,f
   734  019B  3EFF               	addlw	-1
   735  019C  1D03               	skipz
   736  019D  2998               	goto	u515
   737  019E                     l1033:
   738  019E  0820               	movf	___wmul@multiplier,w
   739  019F  0421               	iorwf	___wmul@multiplier+1,w
   740  01A0  1D03               	btfss	3,2
   741  01A1  29A3               	goto	u521
   742  01A2  29A4               	goto	u520
   743  01A3                     u521:
   744  01A3  2986               	goto	l1027
   745  01A4                     u520:
   746  01A4                     l1035:
   747  01A4  0825               	movf	___wmul@product+1,w
   748  01A5  00A1               	movwf	?___wmul+1
   749  01A6  0824               	movf	___wmul@product,w
   750  01A7  00A0               	movwf	?___wmul
   751  01A8                     l173:
   752  01A8  0008               	return
   753  01A9                     __end_of___wmul:
   754                           
   755                           	psect	text2
   756  01A9                     __ptext2:	
   757 ;; *************** function ___bmul *****************
   758 ;; Defined at:
   759 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
   760 ;; Parameters:    Size  Location     Type
   761 ;;  multiplier      1    wreg     unsigned char 
   762 ;;  multiplicand    1    0[BANK0 ] unsigned char 
   763 ;; Auto vars:     Size  Location     Type
   764 ;;  multiplier      1    3[BANK0 ] unsigned char 
   765 ;;  product         1    2[BANK0 ] unsigned char 
   766 ;; Return value:  Size  Location     Type
   767 ;;                  1    wreg      unsigned char 
   768 ;; Registers used:
   769 ;;		wreg, status,2, status,0
   770 ;; Tracked objects:
   771 ;;		On entry : 0/0
   772 ;;		On exit  : 0/0
   773 ;;		Unchanged: 0/0
   774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   775 ;;      Params:         0       1       0       0       0
   776 ;;      Locals:         0       2       0       0       0
   777 ;;      Temps:          0       1       0       0       0
   778 ;;      Totals:         0       4       0       0       0
   779 ;;Total ram usage:        4 bytes
   780 ;; Hardware stack levels used:    1
   781 ;; Hardware stack levels required when called:    2
   782 ;; This function calls:
   783 ;;		Nothing
   784 ;; This function is called by:
   785 ;;		_main
   786 ;; This function uses a non-reentrant model
   787 ;;
   788                           
   789                           
   790                           ;psect for function ___bmul
   791  01A9                     ___bmul:
   792                           
   793                           ;incstack = 0
   794                           ; Regs used in ___bmul: [wreg+status,2+status,0]
   795                           ;___bmul@multiplier stored from wreg
   796  01A9  1283               	bcf	3,5	;RP0=0, select bank0
   797  01AA  1303               	bcf	3,6	;RP1=0, select bank0
   798  01AB  00A3               	movwf	___bmul@multiplier
   799  01AC                     l1039:
   800  01AC  01A2               	clrf	___bmul@product
   801  01AD                     l1041:
   802  01AD  1C23               	btfss	___bmul@multiplier,0
   803  01AE  29B0               	goto	u531
   804  01AF  29B1               	goto	u530
   805  01B0                     u531:
   806  01B0  29B5               	goto	l1045
   807  01B1                     u530:
   808  01B1                     l1043:
   809  01B1  0820               	movf	___bmul@multiplicand,w
   810  01B2  00A1               	movwf	??___bmul
   811  01B3  0821               	movf	??___bmul,w
   812  01B4  07A2               	addwf	___bmul@product,f
   813  01B5                     l1045:
   814  01B5  1003               	clrc
   815  01B6  0DA0               	rlf	___bmul@multiplicand,f
   816  01B7                     l1047:
   817  01B7  1003               	clrc
   818  01B8  0CA3               	rrf	___bmul@multiplier,f
   819  01B9  0823               	movf	___bmul@multiplier,w
   820  01BA  1D03               	btfss	3,2
   821  01BB  29BD               	goto	u541
   822  01BC  29BE               	goto	u540
   823  01BD                     u541:
   824  01BD  29AD               	goto	l1041
   825  01BE                     u540:
   826  01BE                     l1049:
   827  01BE  0822               	movf	___bmul@product,w
   828  01BF                     l197:
   829  01BF  0008               	return
   830  01C0                     __end_of___bmul:
   831                           
   832                           	psect	text3
   833  00B0                     __ptext3:	
   834 ;; *************** function ___awdiv *****************
   835 ;; Defined at:
   836 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
   837 ;; Parameters:    Size  Location     Type
   838 ;;  divisor         2    6[BANK0 ] int 
   839 ;;  dividend        2    8[BANK0 ] int 
   840 ;; Auto vars:     Size  Location     Type
   841 ;;  quotient        2   13[BANK0 ] int 
   842 ;;  sign            1   12[BANK0 ] unsigned char 
   843 ;;  counter         1   11[BANK0 ] unsigned char 
   844 ;; Return value:  Size  Location     Type
   845 ;;                  2    6[BANK0 ] int 
   846 ;; Registers used:
   847 ;;		wreg, status,2, status,0
   848 ;; Tracked objects:
   849 ;;		On entry : 0/0
   850 ;;		On exit  : 0/0
   851 ;;		Unchanged: 0/0
   852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   853 ;;      Params:         0       4       0       0       0
   854 ;;      Locals:         0       4       0       0       0
   855 ;;      Temps:          0       1       0       0       0
   856 ;;      Totals:         0       9       0       0       0
   857 ;;Total ram usage:        9 bytes
   858 ;; Hardware stack levels used:    1
   859 ;; Hardware stack levels required when called:    2
   860 ;; This function calls:
   861 ;;		Nothing
   862 ;; This function is called by:
   863 ;;		_main
   864 ;; This function uses a non-reentrant model
   865 ;;
   866                           
   867                           
   868                           ;psect for function ___awdiv
   869  00B0                     ___awdiv:
   870  00B0                     l879:	
   871                           ;incstack = 0
   872                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   873                           
   874  00B0  1283               	bcf	3,5	;RP0=0, select bank0
   875  00B1  1303               	bcf	3,6	;RP1=0, select bank0
   876  00B2  01AC               	clrf	___awdiv@sign
   877  00B3                     l881:
   878  00B3  1FA7               	btfss	___awdiv@divisor+1,7
   879  00B4  28B6               	goto	u311
   880  00B5  28B7               	goto	u310
   881  00B6                     u311:
   882  00B6  28BE               	goto	l887
   883  00B7                     u310:
   884  00B7                     l883:
   885  00B7  09A6               	comf	___awdiv@divisor,f
   886  00B8  09A7               	comf	___awdiv@divisor+1,f
   887  00B9  0AA6               	incf	___awdiv@divisor,f
   888  00BA  1903               	skipnz
   889  00BB  0AA7               	incf	___awdiv@divisor+1,f
   890  00BC                     l885:
   891  00BC  01AC               	clrf	___awdiv@sign
   892  00BD  0AAC               	incf	___awdiv@sign,f
   893  00BE                     l887:
   894  00BE  1FA9               	btfss	___awdiv@dividend+1,7
   895  00BF  28C1               	goto	u321
   896  00C0  28C2               	goto	u320
   897  00C1                     u321:
   898  00C1  28CB               	goto	l893
   899  00C2                     u320:
   900  00C2                     l889:
   901  00C2  09A8               	comf	___awdiv@dividend,f
   902  00C3  09A9               	comf	___awdiv@dividend+1,f
   903  00C4  0AA8               	incf	___awdiv@dividend,f
   904  00C5  1903               	skipnz
   905  00C6  0AA9               	incf	___awdiv@dividend+1,f
   906  00C7                     l891:
   907  00C7  3001               	movlw	1
   908  00C8  00AA               	movwf	??___awdiv
   909  00C9  082A               	movf	??___awdiv,w
   910  00CA  06AC               	xorwf	___awdiv@sign,f
   911  00CB                     l893:
   912  00CB  01AD               	clrf	___awdiv@quotient
   913  00CC  01AE               	clrf	___awdiv@quotient+1
   914  00CD                     l895:
   915  00CD  0826               	movf	___awdiv@divisor,w
   916  00CE  0427               	iorwf	___awdiv@divisor+1,w
   917  00CF  1903               	btfsc	3,2
   918  00D0  28D2               	goto	u331
   919  00D1  28D3               	goto	u330
   920  00D2                     u331:
   921  00D2  290A               	goto	l915
   922  00D3                     u330:
   923  00D3                     l897:
   924  00D3  01AB               	clrf	___awdiv@counter
   925  00D4  0AAB               	incf	___awdiv@counter,f
   926  00D5  28E1               	goto	l903
   927  00D6                     l899:
   928  00D6  3001               	movlw	1
   929  00D7                     u345:
   930  00D7  1003               	clrc
   931  00D8  0DA6               	rlf	___awdiv@divisor,f
   932  00D9  0DA7               	rlf	___awdiv@divisor+1,f
   933  00DA  3EFF               	addlw	-1
   934  00DB  1D03               	skipz
   935  00DC  28D7               	goto	u345
   936  00DD                     l901:
   937  00DD  3001               	movlw	1
   938  00DE  00AA               	movwf	??___awdiv
   939  00DF  082A               	movf	??___awdiv,w
   940  00E0  07AB               	addwf	___awdiv@counter,f
   941  00E1                     l903:
   942  00E1  1FA7               	btfss	___awdiv@divisor+1,7
   943  00E2  28E4               	goto	u351
   944  00E3  28E5               	goto	u350
   945  00E4                     u351:
   946  00E4  28D6               	goto	l899
   947  00E5                     u350:
   948  00E5                     l905:
   949  00E5  3001               	movlw	1
   950  00E6                     u365:
   951  00E6  1003               	clrc
   952  00E7  0DAD               	rlf	___awdiv@quotient,f
   953  00E8  0DAE               	rlf	___awdiv@quotient+1,f
   954  00E9  3EFF               	addlw	-1
   955  00EA  1D03               	skipz
   956  00EB  28E6               	goto	u365
   957  00EC  0827               	movf	___awdiv@divisor+1,w
   958  00ED  0229               	subwf	___awdiv@dividend+1,w
   959  00EE  1D03               	skipz
   960  00EF  28F2               	goto	u375
   961  00F0  0826               	movf	___awdiv@divisor,w
   962  00F1  0228               	subwf	___awdiv@dividend,w
   963  00F2                     u375:
   964  00F2  1C03               	skipc
   965  00F3  28F5               	goto	u371
   966  00F4  28F6               	goto	u370
   967  00F5                     u371:
   968  00F5  28FD               	goto	l911
   969  00F6                     u370:
   970  00F6                     l907:
   971  00F6  0826               	movf	___awdiv@divisor,w
   972  00F7  02A8               	subwf	___awdiv@dividend,f
   973  00F8  0827               	movf	___awdiv@divisor+1,w
   974  00F9  1C03               	skipc
   975  00FA  03A9               	decf	___awdiv@dividend+1,f
   976  00FB  02A9               	subwf	___awdiv@dividend+1,f
   977  00FC                     l909:
   978  00FC  142D               	bsf	___awdiv@quotient,0
   979  00FD                     l911:
   980  00FD  3001               	movlw	1
   981  00FE                     u385:
   982  00FE  1003               	clrc
   983  00FF  0CA7               	rrf	___awdiv@divisor+1,f
   984  0100  0CA6               	rrf	___awdiv@divisor,f
   985  0101  3EFF               	addlw	-1
   986  0102  1D03               	skipz
   987  0103  28FE               	goto	u385
   988  0104                     l913:
   989  0104  3001               	movlw	1
   990  0105  02AB               	subwf	___awdiv@counter,f
   991  0106  1D03               	btfss	3,2
   992  0107  2909               	goto	u391
   993  0108  290A               	goto	u390
   994  0109                     u391:
   995  0109  28E5               	goto	l905
   996  010A                     u390:
   997  010A                     l915:
   998  010A  082C               	movf	___awdiv@sign,w
   999  010B  1903               	btfsc	3,2
  1000  010C  290E               	goto	u401
  1001  010D  290F               	goto	u400
  1002  010E                     u401:
  1003  010E  2914               	goto	l919
  1004  010F                     u400:
  1005  010F                     l917:
  1006  010F  09AD               	comf	___awdiv@quotient,f
  1007  0110  09AE               	comf	___awdiv@quotient+1,f
  1008  0111  0AAD               	incf	___awdiv@quotient,f
  1009  0112  1903               	skipnz
  1010  0113  0AAE               	incf	___awdiv@quotient+1,f
  1011  0114                     l919:
  1012  0114  082E               	movf	___awdiv@quotient+1,w
  1013  0115  00A7               	movwf	?___awdiv+1
  1014  0116  082D               	movf	___awdiv@quotient,w
  1015  0117  00A6               	movwf	?___awdiv
  1016  0118                     l324:
  1017  0118  0008               	return
  1018  0119                     __end_of___awdiv:
  1019                           
  1020                           	psect	text4
  1021  0119                     __ptext4:	
  1022 ;; *************** function _isr *****************
  1023 ;; Defined at:
  1024 ;;		line 55 in file "lab7.c"
  1025 ;; Parameters:    Size  Location     Type
  1026 ;;		None
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;		None
  1029 ;; Return value:  Size  Location     Type
  1030 ;;                  1    wreg      void 
  1031 ;; Registers used:
  1032 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1033 ;; Tracked objects:
  1034 ;;		On entry : 0/0
  1035 ;;		On exit  : 0/0
  1036 ;;		Unchanged: 0/0
  1037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1038 ;;      Params:         0       0       0       0       0
  1039 ;;      Locals:         0       0       0       0       0
  1040 ;;      Temps:          5       0       0       0       0
  1041 ;;      Totals:         5       0       0       0       0
  1042 ;;Total ram usage:        5 bytes
  1043 ;; Hardware stack levels used:    2
  1044 ;; This function calls:
  1045 ;;		Nothing
  1046 ;; This function is called by:
  1047 ;;		Interrupt level 1
  1048 ;; This function uses a non-reentrant model
  1049 ;;
  1050                           
  1051                           
  1052                           ;psect for function _isr
  1053  0119                     _isr:
  1054  0119                     i1l923:
  1055                           
  1056                           ;lab7.c: 57:     if (T0IF == 1) {
  1057  0119  1D0B               	btfss	11,2	;volatile
  1058  011A  291C               	goto	u41_21
  1059  011B  291D               	goto	u41_20
  1060  011C                     u41_21:
  1061  011C  2962               	goto	i1l65
  1062  011D                     u41_20:
  1063  011D                     i1l925:
  1064                           
  1065                           ;lab7.c: 58:         PORTD++;
  1066  011D  3001               	movlw	1
  1067  011E  00F0               	movwf	??_isr
  1068  011F  0870               	movf	??_isr,w
  1069  0120  0788               	addwf	8,f	;volatile
  1070  0121                     i1l927:
  1071                           
  1072                           ;lab7.c: 59:         PORTB = 0;
  1073  0121  0186               	clrf	6	;volatile
  1074  0122                     i1l929:
  1075                           
  1076                           ;lab7.c: 60:         if (turno == 3) {
  1077  0122  3003               	movlw	3
  1078  0123  0675               	xorwf	_turno,w
  1079  0124  1D03               	btfss	3,2
  1080  0125  2927               	goto	u42_21
  1081  0126  2928               	goto	u42_20
  1082  0127                     u42_21:
  1083  0127  2933               	goto	i1l935
  1084  0128                     u42_20:
  1085  0128                     i1l931:
  1086                           
  1087                           ;lab7.c: 61:             PORTC = (num_display[centena]);
  1088  0128  0878               	movf	_centena,w
  1089  0129  3E01               	addlw	low ((_num_display-__stringbase)| (0+32768))
  1090  012A  0084               	movwf	4
  1091  012B  120A  118A  21C0  120A  118A  	fcall	stringdir
  1092  0130  0087               	movwf	7	;volatile
  1093  0131                     i1l933:
  1094                           
  1095                           ;lab7.c: 62:             RB5 = 1;
  1096  0131  1686               	bsf	6,5	;volatile
  1097                           
  1098                           ;lab7.c: 63:         }
  1099  0132  2953               	goto	i1l947
  1100  0133                     i1l935:
  1101  0133  3002               	movlw	2
  1102  0134  0675               	xorwf	_turno,w
  1103  0135  1D03               	btfss	3,2
  1104  0136  2938               	goto	u43_21
  1105  0137  2939               	goto	u43_20
  1106  0138                     u43_21:
  1107  0138  2944               	goto	i1l941
  1108  0139                     u43_20:
  1109  0139                     i1l937:
  1110                           
  1111                           ;lab7.c: 65:             PORTC = (num_display[decena]);
  1112  0139  0877               	movf	_decena,w
  1113  013A  3E01               	addlw	low ((_num_display-__stringbase)| (0+32768))
  1114  013B  0084               	movwf	4
  1115  013C  120A  118A  21C0  120A  118A  	fcall	stringdir
  1116  0141  0087               	movwf	7	;volatile
  1117  0142                     i1l939:
  1118                           
  1119                           ;lab7.c: 66:             RB6 = 1;
  1120  0142  1706               	bsf	6,6	;volatile
  1121                           
  1122                           ;lab7.c: 67:         }
  1123  0143  2953               	goto	i1l947
  1124  0144                     i1l941:
  1125  0144  0375               	decf	_turno,w
  1126  0145  1D03               	btfss	3,2
  1127  0146  2948               	goto	u44_21
  1128  0147  2949               	goto	u44_20
  1129  0148                     u44_21:
  1130  0148  2953               	goto	i1l947
  1131  0149                     u44_20:
  1132  0149                     i1l943:
  1133                           
  1134                           ;lab7.c: 69:             PORTC = (num_display[unidad]);
  1135  0149  0833               	movf	_unidad,w
  1136  014A  3E01               	addlw	low ((_num_display-__stringbase)| (0+32768))
  1137  014B  0084               	movwf	4
  1138  014C  120A  118A  21C0  120A  118A  	fcall	stringdir
  1139  0151  0087               	movwf	7	;volatile
  1140  0152                     i1l945:
  1141                           
  1142                           ;lab7.c: 70:             RB7 = 1;
  1143  0152  1786               	bsf	6,7	;volatile
  1144  0153                     i1l947:
  1145                           
  1146                           ;lab7.c: 73:         turno--;
  1147  0153  3001               	movlw	1
  1148  0154  02F5               	subwf	_turno,f
  1149  0155                     i1l949:
  1150                           
  1151                           ;lab7.c: 74:         if (turno == 0){
  1152  0155  0875               	movf	_turno,w
  1153  0156  1D03               	btfss	3,2
  1154  0157  2959               	goto	u45_21
  1155  0158  295A               	goto	u45_20
  1156  0159                     u45_21:
  1157  0159  295E               	goto	i1l953
  1158  015A                     u45_20:
  1159  015A                     i1l951:
  1160                           
  1161                           ;lab7.c: 75:             turno = 3;
  1162  015A  3003               	movlw	3
  1163  015B  00F0               	movwf	??_isr
  1164  015C  0870               	movf	??_isr,w
  1165  015D  00F5               	movwf	_turno
  1166  015E                     i1l953:
  1167                           
  1168                           ;lab7.c: 78:         INTCONbits.T0IF = 0;
  1169  015E  110B               	bcf	11,2	;volatile
  1170                           
  1171                           ;lab7.c: 79:         TMR0 = 100;;
  1172  015F  3064               	movlw	100
  1173  0160  0081               	movwf	1	;volatile
  1174                           
  1175                           ;lab7.c: 80:     }
  1176  0161  2977               	goto	i1l77
  1177  0162                     i1l65:	
  1178                           ;lab7.c: 81:     else if (RBIF == 1) {
  1179                           
  1180  0162  1C0B               	btfss	11,0	;volatile
  1181  0163  2965               	goto	u46_21
  1182  0164  2966               	goto	u46_20
  1183  0165                     u46_21:
  1184  0165  2977               	goto	i1l77
  1185  0166                     u46_20:
  1186  0166                     i1l955:
  1187                           
  1188                           ;lab7.c: 82:         if (RB0 == 0) {
  1189  0166  1806               	btfsc	6,0	;volatile
  1190  0167  2969               	goto	u47_21
  1191  0168  296A               	goto	u47_20
  1192  0169                     u47_21:
  1193  0169  2970               	goto	i1l74
  1194  016A                     u47_20:
  1195  016A                     i1l957:
  1196                           
  1197                           ;lab7.c: 83:             PORTA++;
  1198  016A  3001               	movlw	1
  1199  016B  00F0               	movwf	??_isr
  1200  016C  0870               	movf	??_isr,w
  1201  016D  0785               	addwf	5,f	;volatile
  1202  016E                     i1l959:
  1203                           
  1204                           ;lab7.c: 84:             RBIF = 0;
  1205  016E  100B               	bcf	11,0	;volatile
  1206                           
  1207                           ;lab7.c: 85:         } else if (RB1 == 0) {
  1208  016F  2977               	goto	i1l77
  1209  0170                     i1l74:
  1210  0170  1886               	btfsc	6,1	;volatile
  1211  0171  2973               	goto	u48_21
  1212  0172  2974               	goto	u48_20
  1213  0173                     u48_21:
  1214  0173  2977               	goto	i1l73
  1215  0174                     u48_20:
  1216  0174                     i1l961:
  1217                           
  1218                           ;lab7.c: 86:             PORTA--;
  1219  0174  3001               	movlw	1
  1220  0175  0285               	subwf	5,f	;volatile
  1221  0176  296E               	goto	i1l959
  1222  0177                     i1l73:	
  1223                           ;lab7.c: 90:     }
  1224                           
  1225  0177                     i1l77:
  1226  0177  0874               	movf	??_isr+4,w
  1227  0178  00FF               	movwf	btemp+1
  1228  0179  0873               	movf	??_isr+3,w
  1229  017A  008A               	movwf	10
  1230  017B  0872               	movf	??_isr+2,w
  1231  017C  0084               	movwf	4
  1232  017D  0E71               	swapf	??_isr+1,w
  1233  017E  0083               	movwf	3
  1234  017F  0EFE               	swapf	btemp,f
  1235  0180  0E7E               	swapf	btemp,w
  1236  0181  0009               	retfie
  1237  0182                     __end_of_isr:
  1238  007E                     btemp	set	126	;btemp
  1239  007E                     wtemp0	set	126
  1240                           
  1241                           	psect	intentry
  1242  0004                     __pintentry:	
  1243                           ;incstack = 0
  1244                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath]
  1245                           
  1246  0004                     interrupt_function:
  1247  007E                     saved_w	set	btemp
  1248  0004  00FE               	movwf	btemp
  1249  0005  0E03               	swapf	3,w
  1250  0006  00F1               	movwf	??_isr+1
  1251  0007  0804               	movf	4,w
  1252  0008  00F2               	movwf	??_isr+2
  1253  0009  080A               	movf	10,w
  1254  000A  00F3               	movwf	??_isr+3
  1255  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1256  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1257  000D  087F               	movf	btemp+1,w
  1258  000E  00F4               	movwf	??_isr+4
  1259  000F  120A  118A  2919   	ljmp	_isr
  1260                           
  1261                           	psect	config
  1262                           
  1263                           ;Config register CONFIG1 @ 0x2007
  1264                           ;	Oscillator Selection bits
  1265                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1266                           ;	Watchdog Timer Enable bit
  1267                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1268                           ;	Power-up Timer Enable bit
  1269                           ;	PWRTE = OFF, PWRT disabled
  1270                           ;	RE3/MCLR pin function select bit
  1271                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1272                           ;	Code Protection bit
  1273                           ;	CP = OFF, Program memory code protection is disabled
  1274                           ;	Data Code Protection bit
  1275                           ;	CPD = OFF, Data memory code protection is disabled
  1276                           ;	Brown Out Reset Selection bits
  1277                           ;	BOREN = OFF, BOR disabled
  1278                           ;	Internal External Switchover bit
  1279                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1280                           ;	Fail-Safe Clock Monitor Enabled bit
  1281                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1282                           ;	Low Voltage Programming Enable bit
  1283                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1284                           ;	In-Circuit Debugger Mode bit
  1285                           ;	DEBUG = 0x1, unprogrammed default
  1286  2007                     	org	8199
  1287  2007  30D4               	dw	12500
  1288                           
  1289                           ;Config register CONFIG2 @ 0x2008
  1290                           ;	Brown-out Reset Selection bit
  1291                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1292                           ;	Flash Program Memory Self Write Enable bits
  1293                           ;	WRT = OFF, Write protection off
  1294  2008                     	org	8200
  1295  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         1
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     19      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv
    ___awdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1236
                                             15 BANK0      4     4      0
                            ___awdiv
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     316
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___wmul (ARG)
   ___bmul
   ___wmul

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     13      14       5       25.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1E      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Apr 13 17:49:29 2021

                      pc 0002           ___bmul@product 0022             ___awdiv@sign 002C  
                     fsr 0004      ___wmul@multiplicand 0022                      l171 0190  
                    l324 0118                      l173 01A8                      l197 01BF  
                    l901 00DD                      l911 00FD                      l903 00E1  
                    l913 0104                      l905 00E5                      l907 00F6  
                    l915 010A                      l917 010F                      l909 00FC  
                    l919 0114                      l881 00B3                      l891 00C7  
                    l883 00B7                      l893 00CB                      l885 00BC  
                    l895 00CD                      l887 00BE                      l879 00B0  
                    l897 00D3                      l889 00C2                      l899 00D6  
                    _RB0 0030                      _RB1 0031                      _RB5 0035  
                    _RB6 0036                      _RB7 0037                      u310 00B7  
                    u311 00B6                      u400 010F                      u320 00C2  
                    u401 010E                      u321 00C1                      u330 00D3  
                    u331 00D2                      u350 00E5                      u351 00E4  
                    u520 01A4                      u345 00D7                      u521 01A3  
                    u505 0191                      u370 00F6                      u530 01B1  
                    u371 00F5                      u531 01B0                      u515 0198  
                    u540 01BE                      u365 00E6                      u541 01BD  
                    u390 010A                      u391 0109                      u375 00F2  
                    u385 00FE                      u490 018A                      u491 0189  
                    _isr 0119                      fsr0 0004                     l1101 003E  
                   l1031 0197                     l1111 008E                     l1103 0048  
                   l1041 01AD                     l1033 019E                     l1025 0182  
                   l1105 004C                     l1043 01B1                     l1035 01A4  
                   l1027 0186                     l1107 0050                     l1045 01B5  
                   l1029 018A                     l1109 0066                     l1061 0025  
                   l1053 001A                     l1047 01B7                     l1039 01AC  
                   l1071 002A                     l1063 0026                     l1055 0021  
                   l1049 01BE                     l1081 002F                     l1073 002B  
                   l1065 0027                     l1057 0023                     l1091 0039  
                   l1083 0030                     l1075 002C                     l1067 0028  
                   l1059 0024                     l1093 003A                     l1085 0031  
                   l1077 002D                     l1069 0029                     l1095 003B  
                   l1087 0035                     l1079 002E                     l1097 003C  
                   l1089 0038                     l1099 003D                     ?_isr 0070  
                   _T0IF 005A                     _RBIF 0058                     i1l73 0177  
                   i1l65 0162                     i1l74 0170                     i1l77 0177  
                   _TMR0 0001                     _main 001A                     btemp 007E  
                   start 0012        ___bmul@multiplier 0023                    ??_isr 0070  
                  ?_main 0070          __end_of___awdiv 0119                    _ANSEL 0188  
        ___awdiv@divisor 0026                    i1l931 0128                    i1l923 0119  
                  i1l941 0144                    i1l933 0131                    i1l925 011D  
                  i1l951 015A                    i1l943 0149                    i1l935 0133  
                  i1l927 0121                    i1l961 0174                    i1l953 015E  
                  i1l945 0152                    i1l937 0139                    i1l929 0122  
                  i1l955 0166                    i1l939 0142                    i1l947 0153  
                  i1l957 016A                    i1l949 0155                    i1l959 016E  
        ___awdiv@counter 002B                    u41_20 011D                    u41_21 011C  
                  u42_20 0128                    u42_21 0127                    u43_20 0139  
                  u43_21 0138                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    u44_20 0149  
                  u44_21 0148                    u45_20 015A                    u45_21 0159  
                  u46_20 0166                    u46_21 0165                    u47_20 016A  
                  u47_21 0169                    u48_20 0174                    u48_21 0173  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _turno 0075                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0015  
           __end_of_main 00B0                   ??_main 002F         ___awdiv@dividend 0028  
                 _ANSELH 0189                   ___bmul 01A9                   ___wmul 0182  
              ??___awdiv 002A                   _decena 0077         ___awdiv@quotient 002D  
                 _unidad 0033                   saved_w 007E  __end_of__initialization 0016  
    ___bmul@multiplicand 0020           __pcstackCOMMON 0070           _OPTION_REGbits 0081  
             __pnvCOMMON 0075               __pmaintext 001A                  ?___bmul 0020  
                ?___wmul 0020               __pintentry 0004               __stringtab 01C0  
        __size_of___bmul 0017                  ___awdiv 00B0          __size_of___wmul 0027  
                _centena 0078                  __ptext1 0182                  __ptext2 01A9  
                __ptext3 00B0                  __ptext4 0119                  _divisor 0079  
           __size_of_isr 0069     end_of_initialization 0016           __end_of___bmul 01C0  
         __end_of___wmul 01A9      start_initialization 0015              __end_of_isr 0182  
               ??___bmul 0021                 ??___wmul 0024              __pbssCOMMON 0079  
              ___latbits 0002            __pcstackBANK0 0020                __pnvBANK0 0033  
               ?___awdiv 0026                _dividendo 0076                __pstrings 01C0  
      interrupt_function 0004           ___wmul@product 0024                 _IOCBbits 0096  
            __stringbase 01C5        ___wmul@multiplier 0020                 _WPUBbits 0095  
       __size_of___awdiv 0069       __end_of__stringtab 01C6      __end_of_num_display 01D0  
          __size_of_main 0096               _INTCONbits 000B                 intlevel1 0000  
              stringcode 01C0               _OSCCONbits 008F              _num_display 01C6  
               stringdir 01C0                 stringtab 01C0  
